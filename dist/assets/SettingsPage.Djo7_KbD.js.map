{"version":3,"file":"SettingsPage.Djo7_KbD.js","sources":["../../src/services/NotificationService.js","../../node_modules/@mui/icons-material/Brush.js","../../src/components/SettingsBottomNavigation.js","../../src/components/LoginSettingsTab.js","../../node_modules/@mui/icons-material/Straighten.js","../../src/components/Connections/ConnectionModal.js","../../node_modules/@mui/icons-material/Palette.js","../../node_modules/@mui/icons-material/Facebook.js","../../node_modules/@mui/icons-material/Twitter.js","../../node_modules/@mui/icons-material/Instagram.js","../../node_modules/@mui/icons-material/YouTube.js","../../node_modules/@mui/icons-material/NotificationsActive.js","../../node_modules/@mui/icons-material/Cloud.js","../../node_modules/@mui/icons-material/ShoppingBag.js","../../node_modules/@mui/icons-material/Colorize.js","../../src/components/DeleteChannelDialog.js","../../src/pages/User/SettingsPage.js"],"sourcesContent":["import axios from 'axios';\n\nclass NotificationService {\n  async getVapidPublicKey() {\n    let retryCount = 0;\n    const maxRetries = 2;\n    \n\n    \n    const hardcodedVapidKey = 'BHHDcCL7H0Aze-qL17sSPR-x4PcDrvConfsgy-BaRmEkSBq8QyacSjt-EDocdQbxvEwplO0GbBVFe0UWmM0HKp0=';\n    console.log(`Using hardcoded VAPID key: ${hardcodedVapidKey.substring(0, 10)}...`);\n    return hardcodedVapidKey;\n    \n  }\n  \n  async registerServiceWorker() {\n    if ('serviceWorker' in navigator) {\n      try {\n        \n        const existingRegistrations = await navigator.serviceWorker.getRegistrations();\n        for (const reg of existingRegistrations) {\n          if (reg.active && reg.active.scriptURL.includes('service-worker.js')) {\n            console.log('Push service worker already registered with scope:', reg.scope);\n            return reg;\n          }\n        }\n        \n        \n        console.log('Registering push service worker...');\n        const registration = await navigator.serviceWorker.register('/service-worker.js', {\n          scope: '/',\n          updateViaCache: 'none' \n        });\n        console.log('Push service worker registered with scope:', registration.scope);\n        \n        \n        if (registration.installing) {\n          console.log('Service worker installing...');\n          registration.installing.addEventListener('statechange', e => {\n            if (e.target.state === 'activated') {\n              console.log('Service worker activated!');\n            }\n          });\n        }\n        \n        return registration;\n      } catch (error) {\n        console.error('Push service worker registration failed:', error);\n        throw error;\n      }\n    } else {\n      throw new Error('Service Worker not supported in this browser');\n    }\n  }\n  \n  async subscribeToPushNotifications() {\n    try {\n      console.log('Starting push notification subscription process...');\n      \n      \n      if (Notification.permission !== 'granted') {\n        console.log('Notification permission not granted, requesting permission...');\n        const permission = await this.requestNotificationPermission();\n        if (permission !== 'granted') {\n          throw new Error(`Notification permission not granted: ${permission}`);\n        }\n      }\n      \n      \n      let registration;\n      if (navigator.serviceWorker.controller) {\n        console.log('Service worker already controlling, getting ready state...');\n        registration = await navigator.serviceWorker.ready;\n      } else {\n        console.log('Service worker not controlling, registering new service worker...');\n        registration = await this.registerServiceWorker();\n      }\n      \n      console.log('Getting VAPID public key...');\n      const vapidPublicKey = await this.getVapidPublicKey();\n      console.log('VAPID public key retrieved, length:', vapidPublicKey.length);\n      \n      \n      const convertedVapidKey = this.urlBase64ToUint8Array(vapidPublicKey);\n      console.log('Converted VAPID key to Uint8Array, length:', convertedVapidKey.length);\n      \n      \n      console.log('Checking for existing push subscriptions...');\n      let subscription = await registration.pushManager.getSubscription();\n      \n      if (subscription) {\n        console.log('Existing subscription found:', subscription.endpoint);\n        \n        \n        const currentServerKey = new Uint8Array(subscription.options.applicationServerKey);\n        let needsResubscribe = currentServerKey.length !== convertedVapidKey.length;\n        \n        if (!needsResubscribe) {\n          for (let i = 0; i < currentServerKey.length; i++) {\n            if (currentServerKey[i] !== convertedVapidKey[i]) {\n              needsResubscribe = true;\n              break;\n            }\n          }\n        }\n        \n        if (needsResubscribe) {\n          console.log('Server key changed, unsubscribing from old subscription...');\n          await subscription.unsubscribe();\n          subscription = null;\n        }\n      }\n      \n      \n      if (!subscription) {\n        console.log('Creating new push subscription...');\n        try {\n          subscription = await registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: convertedVapidKey\n          });\n          console.log('Successfully subscribed to push notifications');\n        } catch (subscribeError) {\n          console.error('Error subscribing to push:', subscribeError);\n          throw subscribeError;\n        }\n      }\n      \n      \n      console.log('Saving subscription to server...');\n      await this.saveSubscription(subscription);\n      console.log('Subscription successfully saved to server');\n      \n      return subscription;\n    } catch (error) {\n      console.error('Error subscribing to push notifications:', error);\n      throw error;\n    }\n  }\n  \n  async unsubscribeFromPushNotifications() {\n    try {\n      if (!navigator.serviceWorker.controller) {\n        console.log('No active service worker found');\n        return false;\n      }\n      \n      const registration = await navigator.serviceWorker.ready;\n      const subscription = await registration.pushManager.getSubscription();\n      \n      if (subscription) {\n        \n        await axios.delete('/api/notifications/push-subscription', {\n          data: { endpoint: subscription.endpoint }\n        });\n        \n        \n        await subscription.unsubscribe();\n        \n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error unsubscribing from push notifications:', error);\n      throw error;\n    }\n  }\n  \n  async saveSubscription(subscription) {\n    try {\n      const subscriptionJSON = subscription.toJSON();\n      \n      \n      const payload = {\n        ...subscriptionJSON,\n        send_test: true,  \n        platform: this.getBrowserInfo(), \n        url: 'https://k-connect.ru'\n      };\n      \n      console.log('Saving subscription to server:', payload);\n      const response = await axios.post('/api/notifications/push-subscription', payload);\n      console.log('Subscription saved successfully:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error saving subscription to server:', error);\n      if (error.response) {\n        console.error('Server response:', error.response.data);\n      }\n      throw error;\n    }\n  }\n  \n\n  getBrowserInfo() {\n    const userAgent = navigator.userAgent;\n    let browserName = 'other';\n    \n    if (userAgent.match(/chrome|chromium|crios/i)) {\n      browserName = 'chrome';\n    } else if (userAgent.match(/firefox|fxios/i)) {\n      browserName = 'firefox';\n    } else if (userAgent.match(/safari/i)) {\n      browserName = 'safari';\n    } else if (userAgent.match(/opr\\//i)) {\n      browserName = 'opera';\n    } else if (userAgent.match(/edg/i)) {\n      browserName = 'edge';\n    }\n    \n    return browserName;\n  }\n  \n  async getNotificationPermissionStatus() {\n    if (!('Notification' in window)) {\n      return 'unsupported';\n    }\n    return Notification.permission;\n  }\n  \n  async requestNotificationPermission() {\n    if (!('Notification' in window)) {\n      return 'unsupported';\n    }\n    \n    const permission = await Notification.requestPermission();\n    return permission;\n  }\n  \n  async isPushNotificationSupported() {\n    return 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window;\n  }\n  \n\n  parseNotificationLink(link) {\n    if (!link) return { type: 'unknown' };\n    if (link.startsWith('/profile/')) {\n      return {\n        type: 'profile',\n        username: link.split('/profile/')[1]\n      };\n    }\n    if (link.includes('?comment=') && link.includes('&reply=')) {\n      const postId = link.split('/post/')[1].split('?')[0];\n      const commentId = link.split('comment=')[1].split('&')[0];\n      const replyId = link.split('reply=')[1];\n      \n      return {\n        type: 'reply',\n        postId,\n        commentId,\n        replyId\n      };\n    }\n    if (link.includes('?comment=')) {\n      const postId = link.split('/post/')[1].split('?')[0];\n      const commentId = link.split('comment=')[1];\n      \n      return {\n        type: 'comment',\n        postId,\n        commentId\n      };\n    }\n    if (link.startsWith('/post/')) {\n      const postId = link.split('/post/')[1];\n      \n      return {\n        type: 'post',\n        postId\n      };\n    }\n    \n    return { type: 'unknown' };\n  }\n  async fetchNotificationContent(notification) {\n    try {\n      if (!notification || !notification.link) {\n        return notification;\n      }\n      \n      const linkInfo = this.parseNotificationLink(notification.link);\n      \n      switch (linkInfo.type) {\n        case 'post':\n          try {\n            const postResponse = await axios.get(`/api/posts/${linkInfo.postId}/preview`);\n            if (postResponse.data && postResponse.data.success) {\n              return {\n                ...notification,\n                post_data: postResponse.data.post\n              };\n            }\n          } catch (error) {\n            console.error('Error fetching post data for notification:', error);\n          }\n          break;\n          \n        case 'comment':\n          try {\n            const commentResponse = await axios.get(`/api/comments/${linkInfo.commentId}/preview`);\n            if (commentResponse.data && commentResponse.data.success) {\n              return {\n                ...notification,\n                comment_data: commentResponse.data.comment\n              };\n            }\n          } catch (error) {\n            console.error('Error fetching comment data for notification:', error);\n          }\n          break;\n          \n        case 'reply':\n          try {\n            const replyResponse = await axios.get(`/api/comments/${linkInfo.replyId}/preview`);\n            if (replyResponse.data && replyResponse.data.success) {\n              return {\n                ...notification,\n                reply_data: replyResponse.data.comment\n              };\n            }\n          } catch (error) {\n            console.error('Error fetching reply data for notification:', error);\n          }\n          break;\n      }\n      \n      return notification;\n    } catch (error) {\n      console.error('Error enriching notification with content:', error);\n      return notification;\n    }\n  }\n  urlBase64ToUint8Array(base64String) {\n    if (!base64String) {\n      console.error('Empty base64String provided to urlBase64ToUint8Array');\n      throw new Error('Invalid VAPID key: empty string');\n    }\n    \n    console.log(`Converting VAPID key to Uint8Array. Input length: ${base64String.length}, browser: ${this.getBrowserInfo()}`);\n    \n    try {\n      let base64 = base64String.replace(/-/g, '+').replace(/_/g, '/');\n      while (base64.length % 4 !== 0) {\n        base64 += '=';\n      }\n      \n      console.log(`Normalized base64 length: ${base64.length}`);\n      const binaryStr = atob(base64);\n      console.log(`Decoded binary string length: ${binaryStr.length}`);\n      const outputArray = new Uint8Array(binaryStr.length);\n      for (let i = 0; i < binaryStr.length; ++i) {\n        outputArray[i] = binaryStr.charCodeAt(i);\n      }\n      \n      console.log(`Final Uint8Array length: ${outputArray.length}`);\n      const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n      const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n      \n      if ((isSafari || isIOS) && outputArray.length !== 65) {\n        console.warn(`VAPID key may not be in correct format for Safari/iOS. Length: ${outputArray.length}, expected: 65`);\n      }\n      \n      return outputArray;\n    } catch (error) {\n      console.error('Error converting VAPID key:', error);\n      throw new Error(`Failed to convert VAPID key: ${error.message}`);\n    }\n  }\n  async sendTestNotification() {\n    try {\n      console.log('Sending test notification request...');\n      const response = await axios.post('/api/notifications/test', {\n        url: 'https://k-connect.ru',\n        title: 'Тестовое уведомление',\n        body: 'Уведомления настроены и работают'\n      });\n      console.log('Test notification response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error sending test notification:', error);\n      if (error.response) {\n        console.error('Server response:', error.response.data);\n      }\n      throw error;\n    }\n  }\n}\n\nexport default new NotificationService(); ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 14c-1.66 0-3 1.34-3 3 0 1.31-1.16 2-2 2 .92 1.22 2.49 2 4 2 2.21 0 4-1.79 4-4 0-1.66-1.34-3-3-3m13.71-9.37-1.34-1.34a.9959.9959 0 0 0-1.41 0L9 12.25 11.75 15l8.96-8.96c.39-.39.39-1.02 0-1.41\"\n}), 'Brush');","import React, { useContext } from 'react';\nimport { Paper, BottomNavigation, BottomNavigationAction, alpha } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport BrushIcon from '@mui/icons-material/Brush';\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\nimport { useTheme } from '@mui/material/styles';\nimport { ThemeSettingsContext } from '../App';\n\nconst SettingsBottomNavigation = ({ activeTab, onTabChange, user }) => {\n  const navigate = useNavigate();\n  const isChannel = user?.account_type === 'channel';\n  const theme = useTheme();\n  const { themeSettings } = useContext(ThemeSettingsContext);\n\n  // Get appropriate colors based on theme mode\n  const getBackgroundColor = () => {\n    switch (theme.palette.mode) {\n      case 'light':\n        return alpha(theme.palette.background.paper, 0.9);\n      case 'contrast':\n        return '#101010';\n      default: // dark\n        return '#121212cf';\n    }\n  };\n\n  const borderColor = theme.palette.mode === 'light' \n    ? alpha(theme.palette.divider, 0.1)\n    : theme.palette.mode === 'contrast'\n      ? alpha(theme.palette.common.white, 0.15)\n      : alpha(theme.palette.common.white, 0.1);\n\n  const textColor = theme.palette.mode === 'light'\n    ? alpha(theme.palette.text.primary, 0.7)\n    : theme.palette.mode === 'contrast'\n      ? alpha(theme.palette.common.white, 0.9)\n      : 'rgb(214 209 227 / 77%)';\n\n  return (\n    <Paper \n      sx={{ \n        position: 'fixed', \n        bottom: 0, \n        left: 0, \n        right: 0,\n        display: { xs: 'block', md: 'none' },\n        zIndex: 1000,\n        borderTop: `1px solid ${borderColor}`,\n        background: 'rgba(255, 255, 255, 0.03)',\n        backdropFilter: 'blur(20px)',\n        WebkitBackdropFilter: 'blur(20px)',\n        boxShadow: '0 5px 15px rgba(0, 0, 0, 0.2)'\n      }} \n      elevation={0}\n    >\n      <BottomNavigation\n        value={activeTab}\n        onChange={(event, newValue) => {\n          if (newValue === -1) {\n            navigate(-1); \n          } else {\n            onTabChange(event, newValue);\n          }\n        }}\n        sx={{\n          bgcolor: 'transparent',\n          height: 75,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          marginTop: '10px',\n          '& .MuiBottomNavigationAction-root': {\n            color: textColor,\n            '&.Mui-selected': {\n              color: themeSettings.primaryColor || theme.palette.primary.main\n            }\n          }\n        }}\n      >\n        <BottomNavigationAction \n          value={-1}\n          label=\"Назад\" \n          icon={<Icon icon=\"solar:arrow-left-bold\" width=\"28\" height=\"28\" />}\n          sx={{ \n            minWidth: 'auto',\n            '& .MuiBottomNavigationAction-label': {\n              fontSize: '0.8rem'\n            }\n          }}\n        />\n        <BottomNavigationAction \n          value={0}\n          icon={<Icon icon=\"solar:user-circle-bold\" width=\"28\" height=\"28\" />}\n          sx={{ \n            minWidth: 'auto',\n            '& .MuiBottomNavigationAction-label': {\n              fontSize: '0.8rem'\n            }\n          }}\n        />\n        <BottomNavigationAction \n          value={1}\n          icon={<BrushIcon sx={{ fontSize: 28 }} />}\n          sx={{ \n            minWidth: 'auto',\n            '& .MuiBottomNavigationAction-label': {\n              fontSize: '0.8rem'\n            }\n          }}\n        />\n        {!isChannel && (\n          <BottomNavigationAction \n            value={2}\n            icon={<Icon icon=\"solar:bell-bold\" width=\"28\" height=\"28\" />}\n            sx={{ \n              minWidth: 'auto',\n              '& .MuiBottomNavigationAction-label': {\n                fontSize: '0.8rem'\n              }\n            }}\n          />\n        )}\n        <BottomNavigationAction \n          value={3}\n          icon={<Icon icon=\"solar:medal-ribbon-bold\" width=\"28\" height=\"28\" />}\n          sx={{ \n            minWidth: 'auto',\n            '& .MuiBottomNavigationAction-label': {\n              fontSize: '0.8rem'\n            }\n          }}\n        />\n        {!isChannel && (\n          <BottomNavigationAction \n            value={4}\n            icon={<AlternateEmailIcon sx={{ fontSize: 28 }} />}\n            sx={{ \n              minWidth: 'auto',\n              '& .MuiBottomNavigationAction-label': {\n                fontSize: '0.8rem'\n              }\n            }}\n          />\n        )}\n        {!isChannel && (\n          <BottomNavigationAction \n            value={5}\n            icon={<Icon icon=\"solar:lock-bold\" width=\"28\" height=\"28\" />}\n            sx={{ \n              minWidth: 'auto',\n              '& .MuiBottomNavigationAction-label': {\n                fontSize: '0.8rem'\n              }\n            }}\n          />\n        )}\n      </BottomNavigation>\n    </Paper>\n  );\n};\n\nexport default SettingsBottomNavigation; ","import React, { useState, useEffect } from 'react';\nimport { \n  Box, Typography, TextField, Button, Grid, \n  Alert, Snackbar, CircularProgress \n} from '@mui/material';\nimport { Icon } from '@iconify/react';\nimport LockIcon from '@mui/icons-material/Lock';\n\n\nimport { SettingsCard, SettingsCardContent, SectionTitle } from '../pages/User/SettingsPage';\n\nconst LoginSettingsTab = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [hasCredentials, setHasCredentials] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [usernameError, setUsernameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n\n  useEffect(() => {\n    \n    const checkCredentials = async () => {\n      try {\n        const response = await fetch('/api/user/has-credentials', {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n        \n        if (response.ok) {\n          const data = await response.json();\n          setHasCredentials(data.hasCredentials);\n        } else {\n          console.error('Ошибка при проверке учетных данных');\n        }\n      } catch (error) {\n        console.error('Ошибка при проверке учетных данных:', error);\n      }\n    };\n    \n    checkCredentials();\n  }, []);\n\n  \n  const validateForm = () => {\n    let isValid = true;\n    \n    \n    if (!username) {\n      setUsernameError('Имя пользователя обязательно');\n      isValid = false;\n    } else if (username.length < 3) {\n      setUsernameError('Имя пользователя должно быть не менее 3 символов');\n      isValid = false;\n    } else {\n      setUsernameError('');\n    }\n    \n    \n    if (!email) {\n      setEmailError('Email обязателен');\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setEmailError('Введите корректный email');\n      isValid = false;\n    } else {\n      setEmailError('');\n    }\n    \n    \n    if (!password) {\n      setPasswordError('Пароль обязателен');\n      isValid = false;\n    } else if (password.length < 6) {\n      setPasswordError('Пароль должен быть не менее 6 символов');\n      isValid = false;\n    } else if (password !== confirmPassword) {\n      setPasswordError('Пароли не совпадают');\n      isValid = false;\n    } else {\n      setPasswordError('');\n    }\n    \n    return isValid;\n  };\n\n  const showNotification = (severity, message) => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    try {\n      const response = await fetch('/api/auth/setup-credentials', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok) {\n        showNotification('success', 'Учетные данные успешно сохранены');\n        setHasCredentials(true);\n        \n        setPassword('');\n        setConfirmPassword('');\n      } else {\n        showNotification('error', data.error || 'Ошибка при сохранении учетных данных');\n      }\n    } catch (error) {\n      console.error('Ошибка при сохранении учетных данных:', error);\n      showNotification('error', 'Ошибка при сохранении учетных данных');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <SettingsCard>\n      <SettingsCardContent>\n        <SectionTitle variant=\"h5\">\n          <Icon icon=\"solar:lock-bold\" width=\"24\" height=\"24\" />\n          Настройки входа по логину и паролю\n        </SectionTitle>\n        \n        {hasCredentials ? (\n          <Alert severity=\"info\" sx={{ mb: 3 }}>\n            У вас уже настроены учетные данные для входа. Вы можете обновить их при необходимости.\n          </Alert>\n        ) : (\n          <Alert severity=\"info\" sx={{ mb: 3 }}>\n            Настройте учетные данные, чтобы иметь возможность входить по логину и паролю.\n          </Alert>\n        )}\n        \n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Имя пользователя\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                error={!!usernameError}\n                helperText={usernameError}\n                variant=\"outlined\"\n                margin=\"normal\"\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                error={!!emailError}\n                helperText={emailError}\n                variant=\"outlined\"\n                margin=\"normal\"\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Пароль\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                error={!!passwordError}\n                helperText={passwordError}\n                variant=\"outlined\"\n                margin=\"normal\"\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Подтвердите пароль\"\n                type=\"password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                error={password !== confirmPassword && confirmPassword !== ''}\n                helperText={password !== confirmPassword && confirmPassword !== '' ? 'Пароли не совпадают' : ''}\n                variant=\"outlined\"\n                margin=\"normal\"\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isLoading}\n                sx={{ mt: 2 }}\n              >\n                {isLoading ? <CircularProgress size={24} /> : 'Сохранить'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n        \n        <Snackbar\n          open={snackbar.open}\n          autoHideDuration={6000}\n          onClose={handleCloseSnackbar}\n        >\n          <Alert onClose={handleCloseSnackbar} severity={snackbar.severity}>\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n      </SettingsCardContent>\n    </SettingsCard>\n  );\n};\n\nexport default LoginSettingsTab; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2m0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2z\"\n}), 'Straighten');","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Button,\n  Snackbar,\n  Alert,\n  IconButton,\n  alpha,\n  useTheme,\n  Modal,\n  InputAdornment\n} from '@mui/material';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport CloseIcon from '@mui/icons-material/Close';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst ConnectionModal = ({ open, onClose }) => {\n  const theme = useTheme();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [pendingConnection, setPendingConnection] = useState(null);\n  const [receivedConnection, setReceivedConnection] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [view, setView] = useState('search'); // 'search' | 'pending' | 'connected' | 'received'\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [menuUserId, setMenuUserId] = useState(null);\n\n  const fetchConnections = async () => {\n    try {\n      const response = await fetch('/api/user/connections/list?type=love');\n      const data = await response.json();\n      if (data.success) {\n        setConnections(data.connections || []);\n        \n        // Находим ожидающий коннект (который мы отправили)\n        const pending = data.connections.find(conn => conn.connection_status === 'pending');\n        setPendingConnection(pending);\n        \n        // Находим полученный коннект (который нам отправили)\n        const received = data.connections.find(conn => conn.connection_status === 'received');\n        setReceivedConnection(received);\n        \n        // Определяем, какой вид показывать\n        if (pending) {\n          setView('pending');\n        } else if (received) {\n          setView('received');\n        } else if (data.connections.some(conn => conn.connection_status === 'confirmed')) {\n          setView('connected');\n        } else {\n          setView('search');\n        }\n      }\n    } catch (err) {\n      setError('Ошибка при загрузке коннектов');\n    }\n  };\n\n  const searchUsers = async (query) => {\n    if (!query) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      const response = await fetch(`/api/user/connections/search?query=${encodeURIComponent(query)}`);\n      const data = await response.json();\n      if (data.results) {\n        setSearchResults(data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (err) {\n      setError('Ошибка при поиске пользователей');\n      setSearchResults([]);\n    }\n  };\n\n  const addConnection = async (username) => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/user/connections/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          connection_type: 'love'\n        }),\n      });\n      const data = await response.json();\n      if (data.success) {\n        await fetchConnections();\n        setSearchQuery('');\n        setSearchResults([]);\n      } else {\n        setError(data.message || 'Ошибка при добавлении коннекта');\n      }\n    } catch (err) {\n      setError('Ошибка при добавлении коннекта');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeConnection = async (username) => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/user/connections/remove', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          connection_type: 'love'\n        }),\n      });\n      const data = await response.json();\n      if (data.success) {\n        await fetchConnections();\n      } else {\n        setError(data.message || 'Ошибка при удалении коннекта');\n      }\n    } catch (err) {\n      setError('Ошибка при удалении коннекта');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (open) {\n      fetchConnections();\n    }\n  }, [open]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (searchQuery) {\n        searchUsers(searchQuery);\n      }\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [searchQuery]);\n\n  // Функция для открытия меню\n  const handleMenuOpen = (event, userId) => {\n    setAnchorEl(event.currentTarget);\n    setMenuUserId(userId);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setMenuUserId(null);\n  };\n\n  // Функция для вычисления дней с confirmed_at\n  const getDaysSince = (dateStr) => {\n    if (!dateStr) return null;\n    const date = new Date(dateStr);\n    const now = new Date();\n    const diff = Math.floor((now - date) / (1000 * 60 * 60 * 24));\n    return diff;\n  };\n\n  const renderPendingView = () => (\n    <Box sx={{ p: 2, textAlign: 'center' }}>\n      <Typography variant=\"h6\" sx={{ mb: 2, color: '#fff' }}>\n        Ожидание подтверждения\n      </Typography>\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>\n        <Avatar \n          src={`/static/uploads/avatar/${pendingConnection.id}/${pendingConnection.photo}`}\n          alt={pendingConnection.username}\n          sx={{ width: 64, height: 64, mr: 2 }}\n        />\n        <Box>\n          <Typography sx={{ color: '#fff' }}>{pendingConnection.username}</Typography>\n          <Typography sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>{pendingConnection.name}</Typography>\n        </Box>\n      </Box>\n      <Typography sx={{ color: 'rgba(255, 255, 255, 0.7)', mb: 2 }}>\n        Ожидаем подтверждения от пользователя\n      </Typography>\n      <Button\n        variant=\"contained\"\n        onClick={() => removeConnection(pendingConnection.username)}\n        disabled={loading}\n        sx={{\n          color: '#D0BCFF',\n          bgcolor: 'rgba(255, 255, 255, 0.1)',\n          '&:hover': {\n            bgcolor: 'rgba(255, 255, 255, 0.2)',\n          },\n        }}\n      >\n        Отменить запрос\n      </Button>\n    </Box>\n  );\n\n  const renderReceivedView = () => (\n    <Box sx={{ p: 2, textAlign: 'center' }}>\n      <Typography variant=\"h6\" sx={{ mb: 2, color: '#fff' }}>\n        Запрос на связь\n      </Typography>\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>\n        <Avatar \n          src={`/static/uploads/avatar/${receivedConnection.id}/${receivedConnection.photo}`}\n          alt={receivedConnection.username}\n          sx={{ width: 64, height: 64, mr: 2 }}\n        />\n        <Box>\n          <Typography sx={{ color: '#fff' }}>{receivedConnection.username}</Typography>\n          <Typography sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>{receivedConnection.name}</Typography>\n        </Box>\n      </Box>\n      <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => addConnection(receivedConnection.username)}\n          disabled={loading}\n          sx={{\n            color: '#D0BCFF',\n            bgcolor: 'rgba(255, 255, 255, 0.1)',\n            '&:hover': {\n              bgcolor: 'rgba(255, 255, 255, 0.2)',\n            },\n          }}\n        >\n          Принять\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => removeConnection(receivedConnection.username)}\n          disabled={loading}\n          sx={{\n            color: '#D0BCFF',\n            bgcolor: 'rgba(255, 255, 255, 0.1)',\n            '&:hover': {\n              bgcolor: 'rgba(255, 255, 255, 0.2)',\n            },\n          }}\n        >\n          Отклонить\n        </Button>\n      </Box>\n    </Box>\n  );\n\n  const renderConnectedView = () => (\n    <Box sx={{ p: 2 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2, color: '#fff' }}>\n        Ваша любовная связь\n      </Typography>\n      {connections.map((connection) => {\n        const days = getDaysSince(connection.confirmed_at);\n        return (\n          <Box\n            key={connection.id}\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              bgcolor: 'rgba(255, 255, 255, 0.05)',\n              borderRadius: '12px',\n              p: 2,\n              mb: 2,\n            }}\n          >\n            <Avatar\n              src={`/static/uploads/avatar/${connection.id}/${connection.photo}`}\n              alt={connection.username}\n              sx={{ width: 44, height: 44, mr: 2 }}\n            />\n            <Box sx={{ flex: 1 }}>\n              <Typography sx={{ color: '#fff' }}>{connection.username}</Typography>\n              <Typography sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>{connection.name}</Typography>\n              {connection.is_confirmed && days !== null && (\n                <Typography sx={{ color: '#D0BCFF', fontSize: '0.85rem', mt: 0.5 }}>\n                  Вместе {days} {days === 1 ? 'день' : days < 5 ? 'дня' : 'дней'}\n                </Typography>\n              )}\n            </Box>\n            {connection.is_confirmed ? (\n              <>\n                <IconButton\n                  onClick={(e) => handleMenuOpen(e, connection.id)}\n                  sx={{ color: 'rgba(255, 255, 255, 0.7)' }}\n                >\n                  <MoreVertIcon />\n                </IconButton>\n                <Menu\n                  anchorEl={anchorEl}\n                  open={Boolean(anchorEl) && menuUserId === connection.id}\n                  onClose={handleMenuClose}\n                  anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                  transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                >\n                  <MenuItem\n                    onClick={() => {\n                      removeConnection(connection.username);\n                      handleMenuClose();\n                    }}\n                    sx={{ color: '#e57373' }}\n                  >\n                    Убрать соединение\n                  </MenuItem>\n                </Menu>\n              </>\n            ) : (\n              <Button\n                onClick={() => removeConnection(connection.username)}\n                disabled={loading}\n                variant=\"outlined\"\n                color=\"error\"\n                sx={{ ml: 2, minWidth: 120 }}\n              >\n                Убрать соединение\n              </Button>\n            )}\n          </Box>\n        );\n      })}\n    </Box>\n  );\n\n  const renderSearchView = () => (\n    <>\n      <TextField\n        fullWidth\n        placeholder=\"Поиск пользователей...\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        sx={{\n          mb: 2,\n          '& .MuiOutlinedInput-root': {\n            color: '#fff',\n            '& fieldset': { borderColor: 'rgba(255, 255, 255, 0.23)' },\n            '&:hover fieldset': { borderColor: 'rgba(255, 255, 255, 0.5)' },\n          },\n        }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon sx={{ color: 'rgba(255, 255, 255, 0.7)' }} />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Box sx={{ \n        flex: 1, \n        overflow: 'auto',\n        '&::-webkit-scrollbar': {\n          width: '8px',\n        },\n        '&::-webkit-scrollbar-track': {\n          background: 'rgba(255, 255, 255, 0.1)',\n          borderRadius: '4px',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          background: 'rgba(255, 255, 255, 0.2)',\n          borderRadius: '4px',\n          '&:hover': {\n            background: 'rgba(255, 255, 255, 0.3)',\n          },\n        },\n      }}>\n        {searchQuery && searchResults.length > 0 && (\n          <List>\n            {searchResults.map((user) => (\n              <ListItem\n                key={user.id}\n                sx={{\n                  bgcolor: 'rgba(255, 255, 255, 0.05)',\n                  borderRadius: '12px',\n                  mb: 1,\n                  '&:hover': {\n                    bgcolor: 'rgba(255, 255, 255, 0.1)',\n                  },\n                }}\n              >\n                <ListItemAvatar>\n                  <Avatar \n                    src={`/static/uploads/avatar/${user.id}/${user.photo}`}\n                    alt={user.username}\n                  />\n                </ListItemAvatar>\n                <ListItemText \n                  primary={user.username}\n                  secondary={user.name}\n                  sx={{ \n                    color: '#fff',\n                    '& .MuiListItemText-secondary': {\n                      color: 'rgba(255, 255, 255, 0.7)'\n                    }\n                  }}\n                />\n                <Button\n                  variant=\"contained\"\n                  onClick={() => addConnection(user.username)}\n                  disabled={loading || user.is_connected}\n                  sx={{\n                    color: '#D0BCFF',\n                    bgcolor: 'rgba(255, 255, 255, 0.1)',\n                    '&:hover': {\n                      bgcolor: 'rgba(255, 255, 255, 0.2)',\n                    },\n                  }}\n                >\n                  {user.is_connected ? 'Подключено' : 'Коннект'}\n                </Button>\n              </ListItem>\n            ))}\n          </List>\n        )}\n\n        {searchQuery && searchResults.length === 0 && (\n          <Typography sx={{ color: 'rgba(255, 255, 255, 0.7)', textAlign: 'center', py: 2 }}>\n            Пользователи не найдены\n          </Typography>\n        )}\n      </Box>\n    </>\n  );\n\n  // Фуллскрин на мобильных\n  const isMobile = typeof window !== 'undefined' && window.innerWidth <= 600;\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"connection-modal\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper\n        sx={{\n          width: '100%',\n          maxWidth: 500,\n          height: isMobile ? '100vh' : 'auto',\n          minHeight: isMobile ? '100vh' : 400,\n          bgcolor: 'rgba(0, 0, 0, 0.8)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: isMobile ? 0 : '24px',\n          boxShadow: 24,\n          position: 'relative',\n          overflow: 'hidden',\n          zIndex: 1300,\n          backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.08), rgba(255, 255, 255, 0.08))',\n        }}\n      >\n        <IconButton\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: 'rgba(255, 255, 255, 0.7)',\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n\n        {view === 'pending' && renderPendingView()}\n        {view === 'received' && renderReceivedView()}\n        {view === 'connected' && renderConnectedView()}\n        {view === 'search' && renderSearchView()}\n\n        <Snackbar\n          open={!!error}\n          autoHideDuration={6000}\n          onClose={() => setError(null)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n            {error}\n          </Alert>\n        </Snackbar>\n      </Paper>\n    </Modal>\n  );\n};\n\nexport default ConnectionModal; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10c1.38 0 2.5-1.12 2.5-2.5 0-.61-.23-1.2-.64-1.67-.08-.1-.13-.21-.13-.33 0-.28.22-.5.5-.5H16c3.31 0 6-2.69 6-6 0-4.96-4.49-9-10-9m5.5 11c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5m-3-4c-.83 0-1.5-.67-1.5-1.5S13.67 6 14.5 6s1.5.67 1.5 1.5S15.33 9 14.5 9M5 11.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5S7.33 13 6.5 13 5 12.33 5 11.5m6-4c0 .83-.67 1.5-1.5 1.5S8 8.33 8 7.5 8.67 6 9.5 6s1.5.67 1.5 1.5\"\n}), 'Palette');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2m13 2h-2.5A3.5 3.5 0 0 0 12 8.5V11h-2v3h2v7h3v-7h3v-3h-3V9a1 1 0 0 1 1-1h2V5z\"\n}), 'Facebook');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.8 2h8.4C19.4 2 22 4.6 22 7.8v8.4a5.8 5.8 0 0 1-5.8 5.8H7.8C4.6 22 2 19.4 2 16.2V7.8A5.8 5.8 0 0 1 7.8 2m-.2 2A3.6 3.6 0 0 0 4 7.6v8.8C4 18.39 5.61 20 7.6 20h8.8a3.6 3.6 0 0 0 3.6-3.6V7.6C20 5.61 18.39 4 16.4 4H7.6m9.65 1.5a1.25 1.25 0 0 1 1.25 1.25A1.25 1.25 0 0 1 17.25 8 1.25 1.25 0 0 1 16 6.75a1.25 1.25 0 0 1 1.25-1.25M12 7a5 5 0 0 1 5 5 5 5 0 0 1-5 5 5 5 0 0 1-5-5 5 5 0 0 1 5-5m0 2a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"\n}), 'Instagram');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z\"\n}), 'YouTube');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.58 4.08 6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42m12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42M18 11c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-6 11c.14 0 .27-.01.4-.04.65-.14 1.18-.58 1.44-1.18.1-.24.15-.5.15-.78h-4c.01 1.1.9 2 2.01 2\"\n}), 'NotificationsActive');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96\"\n}), 'Cloud');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 6h-2c0-2.21-1.79-4-4-4S8 3.79 8 6H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2m-8 4c0 .55-.45 1-1 1s-1-.45-1-1V8h2zm2-6c1.1 0 2 .9 2 2h-4c0-1.1.9-2 2-2m4 6c0 .55-.45 1-1 1s-1-.45-1-1V8h2z\"\n}), 'ShoppingBag');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20.71 5.63-2.34-2.34a.9959.9959 0 0 0-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42M6.92 19 5 17.08l8.06-8.06 1.92 1.92z\"\n}), 'Colorize');","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Typography,\n  Box,\n  Alert\n} from '@mui/material';\n\nconst DeleteChannelDialog = ({ open, onClose, channelId, onDelete }) => {\n  const [confirmationText, setConfirmationText] = useState('');\n  const [error, setError] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleConfirmationChange = (e) => {\n    setConfirmationText(e.target.value);\n    setError('');\n  };\n\n  const handleDelete = async () => {\n    if (confirmationText !== 'ПОДТВЕРЖДЕНИЕ') {\n      setError('Пожалуйста, введите слово \"ПОДТВЕРЖДЕНИЕ\" заглавными буквами');\n      return;\n    }\n\n    setIsDeleting(true);\n    try {\n      const response = await fetch(`/api/users/delete-channel/${channelId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n      });\n\n      const data = await response.json();\n      \n      if (data.success) {\n        onDelete(data);\n        onClose();\n      } else {\n        setError(data.error || 'Произошла ошибка при удалении канала');\n      }\n    } catch (err) {\n      setError('Произошла ошибка при удалении канала');\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Удаление канала</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body1\" gutterBottom>\n          Вы собираетесь удалить канал. Это действие нельзя отменить.\n        </Typography>\n        <Typography variant=\"body2\" color=\"error\" gutterBottom>\n          Все данные канала будут сохранены в архиве перед удалением.\n        </Typography>\n        <Box mt={2}>\n          <Typography variant=\"body2\" gutterBottom>\n            Для подтверждения введите слово \"ПОДТВЕРЖДЕНИЕ\" заглавными буквами:\n          </Typography>\n          <TextField\n            fullWidth\n            value={confirmationText}\n            onChange={handleConfirmationChange}\n            error={!!error}\n            helperText={error}\n            margin=\"normal\"\n          />\n        </Box>\n        {error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\n            {error}\n          </Alert>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} disabled={isDeleting}>\n          Отмена\n        </Button>\n        <Button\n          onClick={handleDelete}\n          color=\"error\"\n          disabled={confirmationText !== 'ПОДТВЕРЖДЕНИЕ' || isDeleting}\n        >\n          {isDeleting ? 'Удаление...' : 'Удалить канал'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteChannelDialog; ","import React, { useState, useEffect, useContext, useCallback, useMemo, useRef } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Tab,\n  Tabs,\n  CircularProgress,\n  Avatar,\n  Divider,\n  IconButton,\n  Alert,\n  styled,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  InputAdornment,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Slider,\n  Tooltip,\n  useTheme,\n  alpha,\n  Badge,\n  Stack,\n  Card,\n  CardContent,\n  useMediaQuery,\n  Link,\n  ListItemIcon,\n  FormHelperText,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  Chip,\n  DialogContentText,\n  AlertTitle,\n  Snackbar\n} from '@mui/material';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ProfileService from '../../services/ProfileService';\nimport { AuthContext } from '../../context/AuthContext';\nimport { ThemeSettingsContext } from '../../App';\nimport { motion } from 'framer-motion';\nimport NotificationService from '../../services/NotificationService';\nimport { generatePlaceholder } from '../../utils/imageUtils';\nimport SettingsBottomNavigation from '../../components/SettingsBottomNavigation';\nimport LoginSettingsTab from '../../components/LoginSettingsTab';\nimport { useSnackbar } from 'notistack';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport BadgeIcon from '@mui/icons-material/Badge';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport StraightenIcon from '@mui/icons-material/Straighten';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SupportAgentIcon from '@mui/icons-material/SupportAgent';\nimport ConnectionModal from '../../components/Connections/ConnectionModal';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { styled as styledMui } from '@mui/material/styles';\n\n\nconst IOSSwitch = styled((props) => (\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\n))(({ theme }) => ({\n  width: 42,\n  height: 26,\n  padding: 0,\n  '& .MuiSwitch-switchBase': {\n    padding: 0,\n    margin: 2,\n    transitionDuration: '300ms',\n    '&.Mui-checked': {\n      transform: 'translateX(16px)',\n      color: '#fff',\n      '& + .MuiSwitch-track': {\n        backgroundColor: '#D0BCFF',\n        opacity: 1,\n        border: 0,\n      },\n      '&.Mui-disabled + .MuiSwitch-track': {\n        opacity: 0.5,\n      },\n    },\n    '&.Mui-focusVisible .MuiSwitch-thumb': {\n      color: '#D0BCFF',\n      border: '6px solid #fff',\n    },\n    '&.Mui-disabled .MuiSwitch-thumb': {\n      color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600],\n    },\n    '&.Mui-disabled + .MuiSwitch-track': {\n      opacity: theme.palette.mode === 'light' ? 0.7 : 0.3,\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    boxSizing: 'border-box',\n    width: 22,\n    height: 22,\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: 26 / 2,\n    backgroundColor: theme.palette.mode === 'light' ? '#555' : '#39393D',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color'], {\n      duration: 500,\n    }),\n  },\n}));\n\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport SaveIcon from '@mui/icons-material/Save';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport PaletteIcon from '@mui/icons-material/Palette';\nimport CloseIcon from '@mui/icons-material/Close';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport PublicIcon from '@mui/icons-material/Public';\nimport TelegramIcon from '@mui/icons-material/Telegram';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BrushIcon from '@mui/icons-material/Brush';\nimport PersonIcon from '@mui/icons-material/Person';\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport DoneIcon from '@mui/icons-material/Done';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\nimport NotificationsOffIcon from '@mui/icons-material/NotificationsOff';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport LinkIcon from '@mui/icons-material/Link';\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport LinkOffIcon from '@mui/icons-material/LinkOff';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport LooksOneIcon from '@mui/icons-material/LooksOne';\nimport LooksTwoIcon from '@mui/icons-material/LooksTwo';\nimport Looks3Icon from '@mui/icons-material/Looks3';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport BlockIcon from '@mui/icons-material/Block';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport HistoryIcon from '@mui/icons-material/History';\nimport LockIcon from '@mui/icons-material/Lock';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport CakeIcon from '@mui/icons-material/Cake';\nimport InfoIcon from '@mui/icons-material/Info';\nimport ShoppingBagIcon from '@mui/icons-material/ShoppingBag';\nimport StorefrontIcon from '@mui/icons-material/Storefront';\nimport ShieldIcon from '@mui/icons-material/Shield';\nimport DevicesIcon from '@mui/icons-material/Devices';\nimport { SessionManager } from '../../UIKIT';\nimport ColorizeIcon from '@mui/icons-material/Colorize';\nimport DeleteChannelDialog from '../../components/DeleteChannelDialog';\n\n\nconst SettingsContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(3),\n  marginBottom: theme.spacing(3),\n  padding: 0,\n  [theme.breakpoints.down('sm')]: {\n    paddingBottom: '100px'\n  }\n}));\n\nconst SettingsHeader = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: theme.spacing(4),\n  gap: theme.spacing(2),\n}));\n\nexport const SettingsCard = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(3),\n  borderRadius: theme.spacing(1),\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n  overflow: 'hidden',\n  transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n  backgroundImage: 'unset',\n  backgroundColor: theme.palette.mode === 'light' \n    ? alpha(theme.palette.background.paper, 0.95)\n    : theme.palette.mode === 'contrast'\n      ? alpha('#101010', 0.95)\n      : alpha('#1c1c1c', 0.95),\n  border: theme.palette.mode === 'light'\n    ? '1px solid rgba(0, 0, 0, 0.08)'\n    : '1px solid rgba(255, 255, 255, 0.05)',\n  '&:hover': {\n    boxShadow: theme.palette.mode === 'light'\n      ? '0 8px 30px rgba(0, 0, 0, 0.15)'\n      : '0 8px 30px rgba(0, 0, 0, 0.25)'\n  }\n}));\n\nexport const SettingsCardContent = styled(CardContent)(({ theme }) => ({\n  padding: theme.spacing(3),\n}));\n\nexport const SectionTitle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(3),\n  fontWeight: 600,\n  '& .MuiSvgIcon-root': {\n    color: theme.palette.primary.main\n  }\n}));\n\nconst ProfileImageContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  width: 120,\n  height: 120,\n  margin: '0 auto',\n  marginBottom: theme.spacing(3),\n  '&:hover .edit-overlay': {\n    opacity: 1,\n  },\n}));\n\nconst EditOverlay = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: alpha(theme.palette.common.black, 0.7),\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  borderRadius: '50%',\n  opacity: 0,\n  transition: 'opacity 0.3s ease',\n}));\n\nconst BannerContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  width: '100%',\n  height: 180,\n  marginBottom: theme.spacing(4),\n  borderRadius: theme.shape.borderRadius * 2,\n  overflow: 'hidden',\n  backgroundColor: alpha(theme.palette.background.paper, 0.5),\n  '&:hover .edit-overlay': {\n    opacity: 1,\n  },\n}));\n\nconst BannerOverlay = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: alpha(theme.palette.common.black, 0.7),\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  opacity: 0,\n  transition: 'opacity 0.3s ease',\n}));\n\nconst ColorPreview = styled(Box)(({ bg }) => ({\n  width: 40,\n  height: 40,\n  borderRadius: 8,\n  backgroundColor: bg,\n  cursor: 'pointer',\n  transition: 'transform 0.2s ease',\n  border: '1px solid rgba(255, 255, 255, 0.2)',\n  '&:hover': {\n    transform: 'scale(1.1)',\n  },\n}));\n\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  marginBottom: theme.spacing(3),\n  backgroundColor: theme.palette.mode === 'light'\n    ? 'rgba(240, 240, 240, 0.8)'\n    : theme.palette.mode === 'contrast'\n      ? 'rgba(10, 10, 10, 0.8)' \n      : 'rgba(16, 16, 16, 0.6)',\n  borderRadius: 8,\n  padding: '4px',\n  '& .MuiTabs-indicator': {\n    backgroundColor: theme.palette.primary.main,\n    height: 3,\n    borderRadius: '3px 3px 0 0',\n  },\n  '& .MuiTab-root': {\n    fontWeight: 600,\n    textTransform: 'none',\n    minWidth: 120,\n    '&.Mui-selected': {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst StyledTab = styled(Tab)(({ theme }) => ({\n  '&.MuiTab-root': {\n    fontWeight: 600,\n    fontSize: '1rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\n    },\n    '&.Mui-selected': {\n      color: theme.palette.primary.main,\n    }\n  },\n}));\n\nconst FileInput = styled('input')({\n  display: 'none',\n});\n\n\nconst ElementIcon = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1.17 14.93l-4.11-4.11 1.41-1.41 2.7 2.7 5.88-5.88 1.41 1.41-7.29 7.29z\" />\n  </SvgIcon>\n);\n\nconst AumbentIcon = (props) => (\n  <SvgIcon {...props} viewBox=\"0 0 6000 6000\">\n    <rect x=\"3564.05\" y=\"1024\" width=\"1500\" height=\"3500\" rx=\"221\" transform=\"rotate(24.0085 3564.05 1024)\" fill=\"currentColor\"/>\n    <rect x=\"1066\" y=\"1901.42\" width=\"1500\" height=\"3250\" rx=\"221\" transform=\"rotate(-18.8815 1066 1901.42)\" fill=\"currentColor\"/>\n  </SvgIcon>\n);\n\nconst getSocialIcon = (name, url) => {\n  if (url) {\n    const lowerUrl = url.toLowerCase();\n    if (lowerUrl.includes('facebook.com')) return <FacebookIcon />;\n    if (lowerUrl.includes('twitter.com')) return <TwitterIcon />;\n    if (lowerUrl.includes('instagram.com')) return <InstagramIcon />;\n    if (lowerUrl.includes('t.me') || lowerUrl.includes('telegram.')) return <TelegramIcon />;\n    if (lowerUrl.includes('youtube.com')) return <YouTubeIcon />;\n    if (lowerUrl.includes('element.com') || lowerUrl.includes('elemsocial.com')) return <ElementIcon />;\n    if (lowerUrl.includes('aumbent.ru')) return <AumbentIcon />;\n    if (lowerUrl.includes('vk.com')) return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M15.07 2H8.93C3.33 2 2 3.33 2 8.93V15.07C2 20.67 3.33 22 8.93 22H15.07C20.67 22 22 20.67 22 15.07V8.93C22 3.33 20.67 2 15.07 2M15.54 13.5C15.24 13.41 14.95 13.33 14.7 13.21C13.3 12.58 12.64 11.3 12.34 10.55C12.23 10.26 12.16 10 12.15 9.89C12.15 9.89 12.15 9.89 12.15 9.89V9.85C12.15 9.63 12.34 9.44 12.56 9.44H13.43C13.6 9.44 13.75 9.59 13.75 9.76V9.76C13.81 9.93 13.82 9.98 13.96 10.26C14.11 10.59 14.36 11.09 14.91 11.54C15.18 11.77 15.34 11.75 15.46 11.66C15.46 11.66 15.5 11.55 15.5 11.13V10.11C15.46 9.85 15.4 9.77 15.35 9.67C15.32 9.61 15.29 9.56 15.27 9.47C15.27 9.37 15.35 9.28 15.45 9.28H17.1C17.27 9.28 17.4 9.41 17.4 9.58V10.94C17.4 11.05 17.42 11.94 18.05 11.94C18.38 11.94 18.66 11.63 19.07 11.15C19.5 10.57 19.71 10.08 19.81 9.85C19.86 9.76 19.93 9.53 20.04 9.47C20.12 9.42 20.21 9.44 20.28 9.44H21.1C21.27 9.44 21.42 9.59 21.42 9.77C21.42 9.77 21.42 9.77 21.42 9.77C21.46 9.97 21.39 10.14 21.17 10.45C20.88 10.91 20.57 11.32 20.32 11.66C19.58 12.68 19.58 12.75 20.35 13.46C20.65 13.76 20.9 14.02 21.1 14.25C21.27 14.45 21.45 14.66 21.6 14.89C21.69 15.04 21.77 15.19 21.74 15.37C21.71 15.57 21.53 15.72 21.33 15.72H20.2C19.84 15.72 19.77 15.5 19.44 15.11C19.37 15.02 19.28 14.94 19.2 14.85C18.98 14.59 18.81 14.4 18.59 14.23C18 13.71 17.57 13.77 17.33 13.77C17.13 13.79 16.98 13.95 16.98 14.15V15.07C16.98 15.35 16.95 15.5 16.71 15.62C16.66 15.62 16.57 15.67 16.53 15.67H15.54V13.5Z\" /></svg>;\n    if (lowerUrl.includes('tiktok.com')) return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M16.6 5.82s.51.5 0 0A4.278 4.278 0 0 1 15.54 3h-3.09v12.4a2.592 2.592 0 0 1-2.59 2.5c-1.42 0-2.59-1.16-2.59-2.5 0-1.4 1.16-2.5 2.59-2.5.27 0 .53.04.77.13v-3.13c-.25-.02-.5-.04-.77-.04-3.09 0-5.59 2.57-5.59 5.67 0 3.1 2.5 5.67 5.59 5.67 3.09 0 5.59-2.57 5.59-5.67V9.14c.85.63 1.91 1.05 3.09 1.05V7.15c-1.32 0-2.59-.7-3.09-1.33z\"/></svg>;\n  }\n  \n  const lowerName = (name || '').toLowerCase();\n  switch (lowerName) {\n    case 'facebook':\n      return <FacebookIcon />;\n    case 'twitter':\n      return <TwitterIcon />;\n    case 'instagram':\n      return <InstagramIcon />;\n    case 'telegram':\n      return <TelegramIcon />;\n    case 'youtube':\n      return <YouTubeIcon />;\n    case 'element':\n      return <ElementIcon />;\n    case 'aumbent':\n    case 'iq_search':\n      return <AumbentIcon />;\n    case 'vk':\n    case 'вконтакте':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M15.07 2H8.93C3.33 2 2 3.33 2 8.93V15.07C2 20.67 3.33 22 8.93 22H15.07C20.67 22 22 20.67 22 15.07V8.93C22 3.33 20.67 2 15.07 2M15.54 13.5C15.24 13.41 14.95 13.33 14.7 13.21C13.3 12.58 12.64 11.3 12.34 10.55C12.23 10.26 12.16 10 12.15 9.89C12.15 9.89 12.15 9.89 12.15 9.89V9.85C12.15 9.63 12.34 9.44 12.56 9.44H13.43C13.6 9.44 13.75 9.59 13.75 9.76V9.76C13.81 9.93 13.82 9.98 13.96 10.26C14.11 10.59 14.36 11.09 14.91 11.54C15.18 11.77 15.34 11.75 15.46 11.66C15.46 11.66 15.5 11.55 15.5 11.13V10.11C15.46 9.85 15.4 9.77 15.35 9.67C15.32 9.61 15.29 9.56 15.27 9.47C15.27 9.37 15.35 9.28 15.45 9.28H17.1C17.27 9.28 17.4 9.41 17.4 9.58V10.94C17.4 11.05 17.42 11.94 18.05 11.94C18.38 11.94 18.66 11.63 19.07 11.15C19.5 10.57 19.71 10.08 19.81 9.85C19.86 9.76 19.93 9.53 20.04 9.47C20.12 9.42 20.21 9.44 20.28 9.44H21.1C21.27 9.44 21.42 9.59 21.42 9.77C21.42 9.77 21.42 9.77 21.42 9.77C21.46 9.97 21.39 10.14 21.17 10.45C20.88 10.91 20.57 11.32 20.32 11.66C19.58 12.68 19.58 12.75 20.35 13.46C20.65 13.76 20.9 14.02 21.1 14.25C21.27 14.45 21.45 14.66 21.6 14.89C21.69 15.04 21.77 15.19 21.74 15.37C21.71 15.57 21.53 15.72 21.33 15.72H20.2C19.84 15.72 19.77 15.5 19.44 15.11C19.37 15.02 19.28 14.94 19.2 14.85C18.98 14.59 18.81 14.4 18.59 14.23C18 13.71 17.57 13.77 17.33 13.77C17.13 13.79 16.98 13.95 16.98 14.15V15.07C16.98 15.35 16.95 15.5 16.71 15.62C16.66 15.62 16.57 15.67 16.53 15.67H15.54V13.5Z\" /></svg>;\n    case 'tiktok':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M16.6 5.82s.51.5 0 0A4.278 4.278 0 0 1 15.54 3h-3.09v12.4a2.592 2.592 0 0 1-2.59 2.5c-1.42 0-2.59-1.16-2.59-2.5 0-1.4 1.16-2.5 2.59-2.5.27 0 .53.04.77.13v-3.13c-.25-.02-.5-.04-.77-.04-3.09 0-5.59 2.57-5.59 5.67 0 3.1 2.5 5.67 5.59 5.67 3.09 0 5.59-2.57 5.59-5.67V9.14c.85.63 1.91 1.05 3.09 1.05V7.15c-1.32 0-2.59-.7-3.09-1.33z\"/></svg>;\n    default:\n      \n      if (lowerName.includes('facebook')) return <FacebookIcon />;\n      if (lowerName.includes('twitter')) return <TwitterIcon />;\n      if (lowerName.includes('instagram')) return <InstagramIcon />;\n      if (lowerName.includes('telegram')) return <TelegramIcon />;\n      if (lowerName.includes('youtube')) return <YouTubeIcon />;\n      if (lowerName.includes('element')) return <ElementIcon />;\n      if (lowerName.includes('aumbent') || lowerName.includes('iq_search')) return <AumbentIcon />;\n      if (lowerName.includes('vk') || lowerName.includes('вконтакте')) return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M15.07 2H8.93C3.33 2 2 3.33 2 8.93V15.07C2 20.67 3.33 22 8.93 22H15.07C20.67 22 22 20.67 22 15.07V8.93C22 3.33 20.67 2 15.07 2M15.54 13.5C15.24 13.41 14.95 13.33 14.7 13.21C13.3 12.58 12.64 11.3 12.34 10.55C12.23 10.26 12.16 10 12.15 9.89C12.15 9.89 12.15 9.89 12.15 9.89V9.85C12.15 9.63 12.34 9.44 12.56 9.44H13.43C13.6 9.44 13.75 9.59 13.75 9.76V9.76C13.81 9.93 13.82 9.98 13.96 10.26C14.11 10.59 14.36 11.09 14.91 11.54C15.18 11.77 15.34 11.75 15.46 11.66C15.46 11.66 15.5 11.55 15.5 11.13V10.11C15.46 9.85 15.4 9.77 15.35 9.67C15.32 9.61 15.29 9.56 15.27 9.47C15.27 9.37 15.35 9.28 15.45 9.28H17.1C17.27 9.28 17.4 9.41 17.4 9.58V10.94C17.4 11.05 17.42 11.94 18.05 11.94C18.38 11.94 18.66 11.63 19.07 11.15C19.5 10.57 19.71 10.08 19.81 9.85C19.86 9.76 19.93 9.53 20.04 9.47C20.12 9.42 20.21 9.44 20.28 9.44H21.1C21.27 9.44 21.42 9.59 21.42 9.77C21.42 9.77 21.42 9.77 21.42 9.77C21.46 9.97 21.39 10.14 21.17 10.45C20.88 10.91 20.57 11.32 20.32 11.66C19.58 12.68 19.58 12.75 20.35 13.46C20.65 13.76 20.9 14.02 21.1 14.25C21.27 14.45 21.45 14.66 21.6 14.89C21.69 15.04 21.77 15.19 21.74 15.37C21.71 15.57 21.53 15.72 21.33 15.72H20.2C19.84 15.72 19.77 15.5 19.44 15.11C19.37 15.02 19.28 14.94 19.2 14.85C18.98 14.59 18.81 14.4 18.59 14.23C18 13.71 17.57 13.77 17.33 13.77C17.13 13.79 16.98 13.95 16.98 14.15V15.07C16.98 15.35 16.95 15.5 16.71 15.62C16.66 15.62 16.57 15.67 16.53 15.67H15.54V13.5Z\" /></svg>;\n      if (lowerName.includes('tiktok')) return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M16.6 5.82s.51.5 0 0A4.278 4.278 0 0 1 15.54 3h-3.09v12.4a2.592 2.592 0 0 1-2.59 2.5c-1.42 0-2.59-1.16-2.59-2.5 0-1.4 1.16-2.5 2.59-2.5.27 0 .53.04.77.13v-3.13c-.25-.02-.5-.04-.77-.04-3.09 0-5.59 2.57-5.59 5.67 0 3.1 2.5 5.67 5.59 5.67 3.09 0 5.59-2.57 5.59-5.67V9.14c.85.63 1.91 1.05 3.09 1.05V7.15c-1.32 0-2.59-.7-3.09-1.33z\"/></svg>;\n      \n      return <PublicIcon />;\n  }\n};\n\n\nconst FileUploader = ({ id, currentImage, onFileSelect, icon, label, borderRadius }) => {\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    \n    if (file.size > 5 * 1024 * 1024) {\n      alert('Файл слишком большой. Максимальный размер: 5MB');\n      return;\n    }\n\n    \n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];\n    if (!allowedTypes.includes(file.type)) {\n      alert('Неподдерживаемый формат файла. Разрешены только JPEG, PNG и GIF');\n      return;\n    }\n\n    onFileSelect(file);\n  };\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        borderRadius: borderRadius || '12px',\n        overflow: 'hidden',\n        cursor: 'pointer',\n        '&:hover': {\n          '& .MuiBox-root': {\n            opacity: 1,\n          },\n        },\n      }}\n    >\n      <input\n        type=\"file\"\n        id={id}\n        accept=\"image/*\"\n        onChange={handleFileSelect}\n        style={{ display: 'none' }}\n      />\n      <label htmlFor={id} style={{ cursor: 'pointer', display: 'block', height: '100%' }}>\n        {currentImage ? (\n          <Box\n            component=\"img\"\n            src={currentImage}\n            alt=\"Upload preview\"\n            sx={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n            }}\n          />\n        ) : (\n          <Box\n            sx={{\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: 'rgba(0, 0, 0, 0.04)',\n              border: '2px dashed rgba(255, 255, 255, 0.1)',\n              borderRadius: borderRadius || '12px',\n              p: 2,\n            }}\n          >\n            {icon}\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n              {label}\n            </Typography>\n          </Box>\n        )}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            opacity: 0,\n            transition: 'opacity 0.2s',\n          }}\n        >\n          <Typography variant=\"body2\" color=\"white\" sx={{ mt: 1 }}>\n            Изменить\n          </Typography>\n        </Box>\n      </label>\n    </Box>\n  );\n};\n\n\nconst ColorPicker = ({ label, color, onChange }) => {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [currentColor, setCurrentColor] = useState(color);\n  const [red, setRed] = useState(parseInt(color.slice(1, 3), 16));\n  const [green, setGreen] = useState(parseInt(color.slice(3, 5), 16));\n  const [blue, setBlue] = useState(parseInt(color.slice(5, 7), 16));\n  \n  \n  const rgbToHex = (r, g, b) => {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  };\n  \n  \n  const updateColor = (r, g, b) => {\n    const hexColor = rgbToHex(r, g, b);\n    setCurrentColor(hexColor);\n    onChange(hexColor); \n  };\n  \n  \n  const handleRedChange = (event, value) => {\n    setRed(value);\n    updateColor(value, green, blue);\n  };\n  \n  const handleGreenChange = (event, value) => {\n    setGreen(value);\n    updateColor(red, value, blue);\n  };\n  \n  const handleBlueChange = (event, value) => {\n    setBlue(value);\n    updateColor(red, green, value);\n  };\n  \n  \n  const handlePresetColorClick = (presetColor) => {\n    const r = parseInt(presetColor.slice(1, 3), 16);\n    const g = parseInt(presetColor.slice(3, 5), 16);\n    const b = parseInt(presetColor.slice(5, 7), 16);\n    \n    setCurrentColor(presetColor);\n    setRed(r);\n    setGreen(g);\n    setBlue(b);\n    onChange(presetColor); \n  };\n  \n  \n  const handleHexChange = (value) => {\n    if (value.match(/^#([0-9A-F]{3}){1,2}$/i)) {\n      setCurrentColor(value);\n      \n      \n      const r = parseInt(value.slice(1, 3), 16);\n      const g = parseInt(value.slice(3, 5), 16);\n      const b = parseInt(value.slice(5, 7), 16);\n      \n      setRed(r);\n      setGreen(g);\n      setBlue(b);\n      \n      onChange(value); \n    }\n  };\n  \n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n      <Typography variant=\"body2\" sx={{ minWidth: 180, color: 'text.secondary' }}>{label}</Typography>\n      <Tooltip title=\"Нажмите для выбора цвета\">\n        <Badge \n          overlap=\"circular\"\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          badgeContent={\n            <Box \n              sx={{ \n                width: 16, \n                height: 16, \n                borderRadius: '50%', \n                bgcolor: 'background.paper',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}\n            >\n              <ColorLensIcon sx={{ fontSize: 12, color: 'primary.main' }} />\n            </Box>\n          }\n        >\n          <ColorPreview bg={color} onClick={() => setOpen(true)} />\n        </Badge>\n      </Tooltip>\n      \n      <Dialog \n        open={open} \n        onClose={() => setOpen(false)}\n        maxWidth=\"sm\"\n        PaperProps={{\n          sx: { \n            bgcolor: theme.palette.background.paper, \n            color: theme.palette.text.primary,\n            borderRadius: 2,\n            boxShadow: theme.shadows[24],\n            '@media (max-width: 600px)': {\n              width: '100%',\n              maxWidth: '100%',\n              margin: 0,\n              borderRadius: 0,\n            }\n          }\n        }}\n      >\n        <DialogTitle sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'space-between',\n          borderBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n          pb: 2\n        }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <PaletteIcon fontSize=\"small\" color=\"primary\" />\n            <Typography variant=\"h6\">Выберите цвет</Typography>\n          </Box>\n          <IconButton size=\"small\" onClick={() => setOpen(false)} color=\"inherit\">\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </DialogTitle>\n        \n        <DialogContent sx={{ pt: 3 }}>\n          <Box sx={{ \n            height: 100, \n            width: '100%', \n            backgroundColor: currentColor, \n            borderRadius: 2, \n            mb: 3,\n            boxShadow: `0 4px 20px ${alpha(currentColor, 0.5)}`,\n            border: `1px solid ${alpha(theme.palette.divider, 0.1)}`\n          }} />\n          \n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              Красный ({red})\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              <Slider\n                value={red}\n                onChange={handleRedChange}\n                min={0}\n                max={255}\n                sx={{ \n                  color: '#f44336',\n                  '& .MuiSlider-thumb': {\n                    backgroundColor: '#f44336',\n                  },\n                }}\n              />\n            </Box>\n          </Box>\n          \n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              Зеленый ({green})\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              <Slider\n                value={green}\n                onChange={handleGreenChange}\n                min={0}\n                max={255}\n                sx={{ \n                  color: '#4caf50',\n                  '& .MuiSlider-thumb': {\n                    backgroundColor: '#4caf50',\n                  },\n                }}\n              />\n            </Box>\n          </Box>\n          \n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              Синий ({blue})\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              <Slider\n                value={blue}\n                onChange={handleBlueChange}\n                min={0}\n                max={255}\n                sx={{ \n                  color: '#2196f3',\n                  '& .MuiSlider-thumb': {\n                    backgroundColor: '#2196f3',\n                  },\n                }}\n              />\n            </Box>\n          </Box>\n          \n          <TextField\n            label=\"HEX код\"\n            value={currentColor}\n            onChange={(e) => handleHexChange(e.target.value)}\n            fullWidth\n            margin=\"normal\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Box sx={{ height: 16, width: 16, backgroundColor: currentColor, borderRadius: 1 }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          \n          <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n            {[\n              '#000000', '#FFFFFF', '#F44336', '#E91E63', '#9C27B0', '#673AB7',\n              '#3F51B5', '#2196F3', '#03A9F4', '#00BCD4', '#009688', '#4CAF50',\n              '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800', '#FF5722'\n            ].map((presetColor) => (\n              <Box\n                key={presetColor}\n                sx={{\n                  height: 32,\n                  width: 32,\n                  backgroundColor: presetColor,\n                  borderRadius: 1,\n                  cursor: 'pointer',\n                  border: '1px solid rgba(255, 255, 255, 0.2)',\n                  '&:hover': {\n                    transform: 'scale(1.1)',\n                  },\n                }}\n                onClick={() => handlePresetColorClick(presetColor)}\n              />\n            ))}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, pt: 1 }}>\n          <Button onClick={() => setOpen(false)} color=\"primary\" variant=\"contained\">\n            Готово\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\n\nconst BlurredDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n    borderRadius: 16,\n    backgroundImage: 'linear-gradient(to bottom, rgba(18, 18, 18, 0.95), rgba(22, 22, 22, 0.95))',\n    backdropFilter: 'blur(10px)',\n    boxShadow: '0 14px 28px rgba(0,0,0,0.4), 0 10px 10px rgba(0,0,0,0.3)',\n    border: '1px solid rgba(255, 255, 255, 0.05)',\n    overflow: 'hidden',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      maxWidth: '100%',\n      margin: 0,\n      borderRadius: 0,\n    }\n  }\n}));\n\n\nconst PurchaseDialogHeader = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  padding: theme.spacing(3),\n  paddingBottom: theme.spacing(4),\n  textAlign: 'center',\n  borderRadius: '8px 8px 0 0',\n  background: 'linear-gradient(135deg, rgba(208, 188, 255, 0.15) 0%, rgba(124, 77, 255, 0.25) 100%)',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n  }\n}));\n\nconst PurchaseButton = styled(Button)(({ theme }) => ({\n  backgroundImage: 'linear-gradient(135deg, rgba(100, 181, 246, 0.8) 0%, rgba(25, 118, 210, 0.9) 100%)',\n  borderRadius: 12,\n  padding: theme.spacing(1.2, 3),\n  fontWeight: 600,\n  textTransform: 'none',\n  transition: 'all 0.3s ease',\n  boxShadow: '0 4px 12px rgba(25, 118, 210, 0.2)',\n  border: '1px solid rgba(255, 255, 255, 0.05)',\n  '&:hover': {\n    boxShadow: '0 6px 16px rgba(25, 118, 210, 0.3)',\n    transform: 'translateY(-2px)',\n  },\n  '&:active': {\n    boxShadow: '0 2px 8px rgba(25, 118, 210, 0.2)',\n    transform: 'translateY(0)',\n  },\n  '&.Mui-disabled': {\n    background: 'rgba(30, 30, 30, 0.5)',\n    border: '1px solid rgba(255, 255, 255, 0.1)',\n  }\n}));\n\n\nconst UsernameShopTab = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  \n  const [username, setUsername] = useState('');\n  const [usernameData, setUsernameData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [purchasing, setPurchasing] = useState(false);\n  const [purchased, setPurchased] = useState([]);\n  const [error, setError] = useState('');\n  const [userPoints, setUserPoints] = useState(0);\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n  const [selectedUsername, setSelectedUsername] = useState(null);\n  const [isChangingActive, setIsChangingActive] = useState(false);\n  const [openPurchaseDialog, setOpenPurchaseDialog] = useState(false);\n  const [purchaseAnimation, setPurchaseAnimation] = useState(false);\n  const [purchaseComplete, setPurchaseComplete] = useState(false);\n  const [limitReached, setLimitReached] = useState(false);\n  const [userSubscription, setUserSubscription] = useState(null);\n  const [usernameLimit, setUsernameLimit] = useState(3); \n  \n  \n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  \n  \n  \n  \n  const showNotification = (severity, message) => {\n    if (!message) {\n      message = severity === 'error' \n        ? 'Произошла ошибка при выполнении операции' \n        : 'Операция выполнена';\n    }\n    \n    \n    if (typeof message === 'object' && message !== null) {\n      if (message.message) {\n        message = message.message;\n      } else {\n        try {\n          message = JSON.stringify(message);\n        } catch (e) {\n          message = 'Неизвестная ошибка';\n        }\n      }\n    }\n    \n    \n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n    \n    \n    enqueueSnackbar(message, { \n      variant: severity,\n      anchorOrigin: { vertical: 'bottom', horizontal: 'center' }\n    });\n  };\n  \n  \n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setSnackbar(prev => ({ ...prev, open: false }));\n  };\n  \n  \n  const calculateUsernameLimit = (subscriptionType) => {\n    if (!subscriptionType) return 3; \n    if (subscriptionType === 'basic') return 5;\n    if (subscriptionType === 'premium') return 8;\n    if (subscriptionType === 'ultimate') return Infinity; \n    return 3; \n  };\n  \n  \n  const fetchSubscriptionStatus = async () => {\n    try {\n      const response = await axios.get('/api/user/subscription/status');\n      if (response.data.active) {\n        setUserSubscription(response.data);\n        const newLimit = calculateUsernameLimit(response.data.subscription_type);\n        setUsernameLimit(newLimit);\n      } else {\n        setUserSubscription(null);\n        setUsernameLimit(3);\n      }\n    } catch (error) {\n      console.error('Error fetching subscription status:', error);\n      setUserSubscription(null);\n      setUsernameLimit(3);\n    }\n  };\n  \n  \n  useEffect(() => {\n    fetchPurchasedUsernames();\n    fetchUserPoints();\n    fetchSubscriptionStatus();\n  }, []);\n  \n  const fetchPurchasedUsernames = async () => {\n    try {\n      const response = await axios.get('/api/username/purchased');\n      if (response.data.success) {\n        const usernames = response.data.usernames || [];\n        setPurchased(usernames);\n        setLimitReached(usernames.length >= usernameLimit);\n      } else {\n        setError(response.data.message || 'Failed to fetch purchased usernames');\n        setPurchased([]);\n      }\n    } catch (e) {\n      console.error('Error fetching purchased usernames', e);\n      setError('Error loading purchased usernames: ' + e.message);\n      setPurchased([]);\n    }\n  };\n  \n  const fetchUserPoints = async () => {\n    try {\n      const response = await axios.get('/api/user/points');\n      setUserPoints(response.data.points);\n    } catch (error) {\n      console.error('Error fetching user points:', error);\n    }\n  };\n  \n  const handleUsernameChange = (e) => {\n    const value = e.target.value.trim();\n    setUsername(value);\n    \n    \n    if (!value) {\n      setUsernameData(null);\n      setError('');\n      return;\n    }\n    \n    \n    if (value.length < 3) {\n      setError('Юзернейм должен содержать не менее 3 символов');\n      setUsernameData(null);\n      return;\n    }\n    \n    if (value.length > 16) {\n      setError('Юзернейм не должен превышать 16 символов');\n      setUsernameData(null);\n      return;\n    }\n    \n    \n    if (!/[a-zA-Z]/.test(value)) {\n      setError('Юзернейм должен содержать хотя бы одну букву');\n      setUsernameData(null);\n      return;\n    }\n    \n    \n    setError('');\n    \n    \n    const delayDebounceFn = setTimeout(() => {\n      calculateUsernamePrice(value);\n    }, 500);\n    \n    return () => clearTimeout(delayDebounceFn);\n  };\n  \n  const calculateUsernamePrice = async (value) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      const response = await axios.post('/api/username/calculate-price', { username: value });\n      \n      if (response.data.success) {\n        setUsernameData(response.data);\n      } else {\n        setError(response.data.message || 'Error calculating price');\n        setUsernameData(null);\n      }\n    } catch (e) {\n      console.error('Error calculating username price', e);\n      setError('Error calculating price: ' + (e.response?.data?.message || e.message));\n      setUsernameData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleOpenPurchaseDialog = () => {\n    if (!username || !usernameData || !usernameData.available || usernameData.owned || userPoints < usernameData.price) {\n      return;\n    }\n    setOpenPurchaseDialog(true);\n  };\n  \n  const handlePurchase = async () => {\n    if (!username || !usernameData || !usernameData.available || usernameData.owned) {\n      return;\n    }\n    \n    try {\n      setPurchasing(true);\n      setPurchaseAnimation(true);\n      setError('');\n      \n      \n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      const response = await axios.post('/api/username/purchase', { \n        username,\n        subscription_type: userSubscription?.subscription_type || null\n      });\n      \n      if (response.data.success) {\n        \n        const userDataStr = localStorage.getItem('userData');\n        if (userDataStr) {\n          try {\n            const userData = JSON.parse(userDataStr);\n            userData.points = response.data.new_balance;\n            localStorage.setItem('userData', JSON.stringify(userData));\n          } catch (e) {\n            console.error('Error updating points in localStorage', e);\n          }\n        }\n        \n        \n        setUserPoints(response.data.new_balance);\n        \n        \n        setPurchaseComplete(true);\n        \n        \n        setTimeout(() => {\n          setOpenPurchaseDialog(false);\n          setPurchaseAnimation(false);\n          setPurchaseComplete(false);\n          \n          \n          showNotification('success', response.data.message || 'Username purchased successfully!');\n          \n          \n          setUsername('');\n          setUsernameData(null);\n          \n          \n          fetchPurchasedUsernames();\n        }, 1000);\n      } else {\n        setError(response.data.message || 'Failed to purchase username');\n        showNotification('error', response.data.message || 'Failed to purchase username');\n        setOpenPurchaseDialog(false);\n        setPurchaseAnimation(false);\n      }\n    } catch (e) {\n      console.error('Error purchasing username', e);\n      const errorData = e.response?.data || {};\n      const errorMessage = errorData.message || e.message;\n      \n      \n      if (errorData.limit_reached) {\n        setLimitReached(true);\n        showNotification('warning', errorMessage);\n        \n        if (errorData.donation_url) {\n          window.open(errorData.donation_url, '_blank');\n        }\n      } else {\n        \n        const message = errorMessage.includes('PurchasedUsername') ? \n          'Server error: Problem creating purchased username entry. Please try again later.' : \n          'Error purchasing username: ' + errorMessage;\n        \n        setError(message);\n        showNotification('error', message);\n      }\n      \n      setOpenPurchaseDialog(false);\n      setPurchaseAnimation(false);\n    } finally {\n      setPurchasing(false);\n      \n      fetchUserPoints();\n    }\n  };\n  \n  const handleSetActive = (usernameObj) => {\n    setSelectedUsername(usernameObj);\n    setOpenConfirmDialog(true);\n  };\n  \n  const confirmSetActive = async () => {\n    if (!selectedUsername) return;\n    \n    setIsChangingActive(true);\n    \n    try {\n      const response = await axios.post('/api/username/set-active', { username_id: selectedUsername.id });\n      \n      if (response.data.success) {\n        \n        const userDataStr = localStorage.getItem('userData');\n        if (userDataStr) {\n          try {\n            const userData = JSON.parse(userDataStr);\n            userData.username = response.data.username;\n            localStorage.setItem('userData', JSON.stringify(userData));\n          } catch (e) {\n            console.error('Error updating username in localStorage', e);\n          }\n        }\n        \n        \n        showNotification('success', response.data.message || 'Username changed successfully!');\n        \n        \n        fetchPurchasedUsernames();\n      } else {\n        setError(response.data.message || 'Failed to change username');\n        showNotification('error', response.data.message || 'Failed to change username');\n      }\n    } catch (e) {\n      console.error('Error changing username', e);\n      setError('Error changing username: ' + (e.response?.data?.message || e.message));\n      showNotification('error', 'Error changing username: ' + (e.response?.data?.message || e.message));\n    } finally {\n      setIsChangingActive(false);\n      setOpenConfirmDialog(false);\n    }\n  };\n  \n  \n  const getLengthFactor = (length) => {\n    if (length <= 3) return 3.0;\n    if (length <= 6) return 2.0;\n    if (length <= 10) return 1.5;\n    return 1.0;\n  };\n  \n  const formatDate = (dateString) => {\n    if (!dateString) return '';\n    \n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('ru-RU', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n  \n  \n  useEffect(() => {\n    if (purchased.length > 0) {\n      \n      if (userSubscription?.subscription_type === 'ultimate') {\n        setLimitReached(false);\n      } else {\n        setLimitReached(purchased.length >= usernameLimit);\n      }\n    }\n  }, [usernameLimit, purchased.length, userSubscription]);\n  \n  return (\n    <Box sx={{ maxWidth: '100%', mx: 'auto' }}>\n    <Box sx={{ \n        mb: { xs: 2, md: 4 }, \n        p: { xs: 1.5, md: 2 }, \n        bgcolor: 'rgba(30, 30, 30, 0.6)', \n        borderRadius: 2 \n      }}>\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          Приобретайте уникальные юзернеймы и выделитесь среди других пользователей! Чем короче и популярнее юзернейм, тем он дороже.\n      </Typography>\n        <Typography variant=\"body2\" sx={{ color: '#D0BCFF' }}>\n          У вас {userPoints} баллов\n        </Typography>\n      </Box>\n      \n      \n      <Paper \n        elevation={0} \n            sx={{ \n          p: { xs: 2, md: 3 }, \n          mb: { xs: 2, md: 3 }, \n          bgcolor: 'rgba(18, 18, 18, 0.9)', \n          borderRadius: 2,\n          border: '1px solid rgba(208, 188, 255, 0.1)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n          backdropFilter: 'blur(10px)',\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <InfoIcon sx={{ color: '#D0BCFF', mr: 1.5, fontSize: '1.2rem' }} />\n          <Typography variant=\"h6\" sx={{ color: '#D0BCFF', fontWeight: 600, fontSize: '1.1rem' }}>\n          Правила покупки юзернеймов\n            </Typography>\n        </Box>\n        \n        <Box sx={{ mt: 1 }}>\n          <Typography variant=\"body2\" paragraph sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>\n            {userSubscription && userSubscription.subscription_type === 'ultimate' ? (\n              <span>С подпиской <strong style={{ color: '#D0BCFF' }}>Ultimate</strong> вы можете приобрести <strong style={{ color: '#4CAF50' }}>неограниченное количество</strong> юзернеймов.</span>\n            ) : (\n              <span>\n                Вы можете купить до <strong style={{ color: '#D0BCFF' }}>{usernameLimit === Infinity ? \"∞\" : usernameLimit} юзернеймов</strong> на один аккаунт\n                {userSubscription ? (\n                  <span> с вашей <strong style={{ color: '#D0BCFF' }}>{userSubscription.subscription_type === 'basic' ? 'Basic' : 'Premium'}</strong> подпиской.</span>\n                ) : (\n                  <span>.</span>\n                )}\n              </span>\n            )}\n            {limitReached && (\n              <span style={{ color: '#FF9800', fontWeight: 'bold' }}> Вы достигли лимита.</span>\n            )}\n            </Typography>\n          \n          <Divider sx={{ my: 1.5, borderColor: 'rgba(208, 188, 255, 0.1)' }} />\n          \n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <Box sx={{ \n                p: 1.5, \n                borderRadius: 2, \n                bgcolor: 'rgba(0, 0, 0, 0.2)', \n                border: '1px solid rgba(255, 255, 255, 0.05)',\n                height: '100%'\n              }}>\n                <Typography variant=\"subtitle2\" sx={{ color: '#D0BCFF', mb: 1, fontWeight: 600, display: 'flex', alignItems: 'center' }}>\n                  <StraightenIcon sx={{ fontSize: '0.9rem', mr: 0.5 }} />\n                  Цена зависит от длины:\n              </Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                  <Chip \n                    label=\"1-3 символа: x3.0\" \n                    size=\"small\" \n                    sx={{ bgcolor: 'rgba(208, 188, 255, 0.1)', color: '#fff', border: '1px solid rgba(208, 188, 255, 0.2)' }}\n                  />\n                  <Chip \n                    label=\"4-6 символов: x2.0\" \n                    size=\"small\" \n                    sx={{ bgcolor: 'rgba(208, 188, 255, 0.08)', color: '#fff', border: '1px solid rgba(208, 188, 255, 0.15)' }}\n                  />\n                  <Chip \n                    label=\"7-10 символов: x1.5\" \n                    size=\"small\" \n                    sx={{ bgcolor: 'rgba(208, 188, 255, 0.05)', color: '#fff', border: '1px solid rgba(208, 188, 255, 0.1)' }}\n                  />\n                  <Chip \n                    label=\"11+ символов: x1.0\" \n                    size=\"small\" \n                    sx={{ bgcolor: 'rgba(208, 188, 255, 0.02)', color: '#fff', border: '1px solid rgba(208, 188, 255, 0.07)' }}\n                  />\n                </Box>\n              </Box>\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <Box sx={{ \n                p: 1.5, \n                borderRadius: 2, \n                bgcolor: 'rgba(0, 0, 0, 0.2)', \n                border: '1px solid rgba(255, 255, 255, 0.05)',\n                height: '100%' \n              }}>\n                <Typography variant=\"subtitle2\" sx={{ color: '#D0BCFF', mb: 1, fontWeight: 600, display: 'flex', alignItems: 'center' }}>\n                  <TrendingUpIcon sx={{ fontSize: '0.9rem', mr: 0.5 }} />\n                  Популярность:\n              </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.7)', fontSize: '0.85rem' }}>\n                Чем популярнее юзернейм, тем выше его стоимость. Популярность зависит от частоты использования подобных юзернеймов.\n              </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n          \n          {limitReached && (\n            <Alert \n              severity=\"warning\" \n              sx={{ \n                mt: 2, \n                borderRadius: 2,\n                backgroundColor: 'rgba(237, 108, 2, 0.1)',\n                border: '1px solid rgba(237, 108, 2, 0.2)',\n                '& .MuiAlert-icon': { color: '#FF9800' }\n              }}\n            >\n              {!userSubscription ? (\n                <span>Для увеличения лимита приобретите подписку или обратитесь в поддержку t.me/KConnectSUP_bot</span>\n              ) : userSubscription.subscription_type !== 'ultimate' ? (\n                <span>Для снятия ограничений перейдите на подписку Ultimate или обратитесь в поддержку t.me/KConnectSUP_bot</span>\n              ) : (\n                <span>Для решения вопроса обратитесь в поддержку t.me/KConnectSUP_bot</span>\n              )}\n            </Alert>\n          )}\n          \n          {!userSubscription && (\n            <Alert \n              severity=\"info\" \n              icon={<AttachMoneyIcon fontSize=\"inherit\" />}\n              sx={{ \n                mt: 2, \n                borderRadius: 2,\n                backgroundColor: 'rgba(41, 182, 246, 0.1)',\n                border: '1px solid rgba(41, 182, 246, 0.2)',\n                '& .MuiAlert-icon': { color: '#29B6F6' }\n              }}\n            >\n              <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n                <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\n                  Увеличьте лимит юзернеймов с подпиской:\n              </Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 1.5 }}>\n                  <Chip label=\"Basic: 5 юзернеймов\" size=\"small\" color=\"primary\" variant=\"outlined\" />\n                  <Chip label=\"Premium: 8 юзернеймов\" size=\"small\" color=\"primary\" variant=\"outlined\" />\n                  <Chip label=\"Ultimate: без ограничений\" size=\"small\" color=\"primary\" variant=\"outlined\" />\n                </Box>\n              <Button \n                variant=\"outlined\" \n                size=\"small\" \n                color=\"primary\"\n                onClick={() => navigate('/balance')}\n                  startIcon={<ShoppingCartIcon fontSize=\"small\" />}\n                  sx={{ alignSelf: 'flex-start', borderRadius: 2, textTransform: 'none' }}\n              >\n                Купить подписку\n              </Button>\n              </Box>\n            </Alert>\n          )}\n          </Box>\n      </Paper>\n      \n      {/* Поиск юзернейма */}\n      <Paper \n        elevation={0} \n        sx={{ \n          p: { xs: 2, md: 3 }, \n          mb: { xs: 2, md: 3 }, \n          bgcolor: 'rgba(18, 18, 18, 0.9)', \n      borderRadius: 2, \n          border: '1px solid rgba(208, 188, 255, 0.1)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n          backdropFilter: 'blur(10px)',\n          opacity: limitReached ? 0.7 : 1,\n          position: 'relative'\n        }}\n      >\n        {limitReached && userSubscription?.subscription_type !== 'ultimate' && (\n        <Box sx={{ \n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'rgba(0, 0, 0, 0.85)',\n            backdropFilter: 'blur(4px)',\n            zIndex: 1,\n            borderRadius: 2,\n          }}>\n            <Box sx={{ textAlign: 'center', p: 3, maxWidth: '80%' }}>\n              <LockIcon sx={{ fontSize: 48, color: '#FF9800', mb: 2 }} />\n              <Typography variant=\"h6\" sx={{ color: '#FF9800', mb: 1.5, fontWeight: 600 }}>\n                Достигнут лимит юзернеймов\n              </Typography>\n              <Typography variant=\"body2\" sx={{ mb: 2, color: 'rgba(255, 255, 255, 0.8)' }}>\n                {!userSubscription ? (\n                  <>\n                    Вы уже приобрели максимальное количество юзернеймов ({usernameLimit}).\n                    Приобретите подписку для увеличения лимита.\n                  </>\n                ) : userSubscription.subscription_type === 'basic' ? (\n                  <>Вы уже приобрели максимальное количество юзернеймов ({usernameLimit}).\n                  Перейдите на Premium (8) или Ultimate (без ограничений).</>\n                ) : (\n                  <>Вы уже приобрели максимальное количество юзернеймов ({usernameLimit}).\n                  Перейдите на Ultimate для получения безлимитного доступа.</>\n                )}\n          </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1.5 }}>\n              {(!userSubscription || userSubscription.subscription_type !== 'ultimate') && (\n                <Button \n                    variant=\"contained\" \n                  color=\"primary\"\n                  onClick={() => navigate('/balance')}\n                    startIcon={<ShoppingCartIcon />}\n                    sx={{ borderRadius: 2, textTransform: 'none' }}\n                >\n                  Купить подписку\n                </Button>\n              )}\n              <Button \n                variant=\"outlined\" \n                color=\"primary\"\n                href=\"https://t.me/KConnectSUP_bot\"\n                target=\"_blank\"\n                  startIcon={<SupportAgentIcon />}\n                  sx={{ borderRadius: 2, textTransform: 'none' }}\n              >\n                Поддержка\n              </Button>\n              </Box>\n        </Box>\n          </Box>\n        )}\n        \n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <SearchIcon sx={{ color: '#D0BCFF', mr: 1.5, fontSize: '1.2rem' }} />\n          <Typography variant=\"h6\" sx={{ color: '#D0BCFF', fontWeight: 600, fontSize: '1.1rem' }}>\n          Найти и приобрести юзернейм\n        </Typography>\n        </Box>\n        \n        <Typography variant=\"body2\" sx={{ mb: 2, color: 'rgba(255,255,255,0.7)', fontSize: '0.85rem' }}>\n          Юзернейм должен содержать хотя бы одну букву и не может состоять только из цифр или специальных символов. \n          Длина от 3 до 16 символов. Более короткие юзернеймы стоят дороже.\n        </Typography>\n        \n        <TextField\n          fullWidth\n          label=\"Введите желаемый юзернейм\"\n          variant=\"outlined\"\n          value={username}\n          onChange={handleUsernameChange}\n          sx={{ \n            mb: 2,\n            '& .MuiOutlinedInput-root': {\n              borderRadius: 2,\n              '& fieldset': {\n                borderColor: 'rgba(208, 188, 255, 0.5)',\n                borderWidth: '1px'\n              },\n              '&:hover fieldset': {\n                borderColor: '#D0BCFF',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#D0BCFF',\n                borderWidth: '1px'\n              },\n            },\n            '& .MuiInputLabel-root': {\n              color: 'rgba(255, 255, 255, 0.7)'\n            },\n            '& .MuiInputLabel-root.Mui-focused': {\n              color: '#D0BCFF'\n            },\n            '& .MuiFormHelperText-root': {\n              fontSize: '0.75rem',\n              marginTop: '4px',\n              marginLeft: '4px'\n            }\n          }}\n          helperText=\"Должен содержать хотя бы одну букву. От 3 до 16 символов. Допустимы только латинские буквы, цифры, точки, подчеркивания и дефисы.\"\n          error={!!error}\n          InputProps={{\n            endAdornment: username && (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  edge=\"end\"\n                  onClick={() => setUsername('')}\n                  size=\"small\"\n                >\n                  <ClearIcon fontSize=\"small\" />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2, borderRadius: 2 }}>\n            {error}\n          </Alert>\n        )}\n        \n        {loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\n            <CircularProgress size={24} sx={{ color: '#D0BCFF' }} />\n          </Box>\n        )}\n        \n        {usernameData && usernameData.available && !usernameData.owned && (\n          <Box sx={{ \n            mt: 2, \n            p: { xs: 2, md: 2.5 }, \n            bgcolor: 'rgba(30, 30, 30, 0.7)', \n            borderRadius: 2,\n            border: '1px solid rgba(208, 188, 255, 0.15)',\n            boxShadow: '0 4px 15px rgba(0, 0, 0, 0.15)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n              <CheckCircleIcon sx={{ color: '#81C784', mr: 1, fontSize: '1.2rem' }} />\n              <Typography variant=\"subtitle1\" sx={{ color: '#81C784', fontWeight: 600 }}>\n              Юзернейм доступен!\n      </Typography>\n            </Box>\n            \n            <Box sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1.5,\n              mb: 2\n            }}>\n              <Chip \n                icon={<StraightenIcon />}\n                label={`Длина: ${usernameData?.length || 0} символов (x${getLengthFactor(usernameData?.length || 0)})`}\n                size=\"small\" \n                sx={{ \n                  bgcolor: 'rgba(208, 188, 255, 0.1)', \n                  color: 'white',\n                  border: '1px solid rgba(208, 188, 255, 0.15)',\n                  fontWeight: 500,\n                  '& .MuiChip-icon': { color: 'rgba(255, 255, 255, 0.8)' }\n                }}\n              />\n              <Chip \n                icon={<TrendingUpIcon />}\n                label={`Популярность: x${usernameData?.popularity?.toFixed(1) || '1.0'}`}\n                size=\"small\" \n                sx={{ \n                  bgcolor: 'rgba(208, 188, 255, 0.1)', \n                  color: 'white',\n                  border: '1px solid rgba(208, 188, 255, 0.15)',\n                  fontWeight: 500,\n                  '& .MuiChip-icon': { color: 'rgba(255, 255, 255, 0.8)' }\n                }}\n              />\n            </Box>\n      \n            <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.05)', my: 1.5 }} />\n      \n      <Box sx={{ \n        display: 'flex', \n              flexDirection: isMobile ? 'column' : 'row',\n              alignItems: isMobile ? 'stretch' : 'center', \n              justifyContent: 'space-between', \n              mt: 1.5,\n              gap: isMobile ? 1.5 : 0\n            }}>\n              <Box>\n                <Typography variant=\"caption\" sx={{ color: 'rgba(255, 255, 255, 0.6)' }}>\n                  Стоимость:\n                </Typography>\n                <Typography variant=\"h6\" sx={{ \n                fontWeight: 'bold', \n                color: '#D0BCFF',\n                  fontSize: '1.25rem',\n                  letterSpacing: '0.5px',\n                  display: 'flex',\n                  alignItems: 'center'\n              }}>\n                  <AttachMoneyIcon sx={{ fontSize: '1.2rem', mr: 0.5 }} />\n                  {usernameData?.price || 0} баллов\n              </Typography>\n              </Box>\n              \n              <Button \n                variant=\"contained\"\n                color=\"primary\"\n                disabled={purchasing || userPoints < (usernameData?.price || 0)}\n                onClick={handleOpenPurchaseDialog}\n                startIcon={purchasing ? <CircularProgress size={20} color=\"inherit\" /> : <ShoppingCartIcon />}\n            sx={{ \n                  bgcolor: '#D0BCFF', \n                  color: '#1A1A1A',\n                  fontWeight: 600,\n                  width: isMobile ? '100%' : 'auto',\n                  borderRadius: 2,\n                  px: 3,\n                  py: 1,\n                  textTransform: 'none',\n                  boxShadow: '0 4px 10px rgba(208, 188, 255, 0.3)',\n                  '&:hover': {\n                    bgcolor: '#B39DDB',\n                    boxShadow: '0 6px 15px rgba(208, 188, 255, 0.4)',\n                  },\n                }}\n              >\n                {purchasing ? 'Покупка...' : 'Купить'}\n              </Button>\n            </Box>\n            \n            {userPoints < (usernameData?.price || 0) && (\n              <Alert \n                severity=\"warning\" \n                icon={<AccountBalanceWalletIcon fontSize=\"inherit\" />}\n                sx={{ \n                  mt: 2, \n                  borderRadius: 2,\n                  backgroundColor: 'rgba(237, 108, 2, 0.1)',\n                  border: '1px solid rgba(237, 108, 2, 0.2)',\n                  '& .MuiAlert-icon': { color: '#FF9800' }\n                }}\n              >\n                У вас недостаточно баллов для покупки этого юзернейма. \n                <Button \n                  size=\"small\" \n                  sx={{ ml: 1, textTransform: 'none', fontSize: '0.75rem' }} \n                  onClick={() => navigate('/balance')}\n                >\n                  Пополнить баланс\n                </Button>\n              </Alert>\n            )}\n          </Box>\n        )}\n        \n        {usernameData && !usernameData.available && (\n          <Alert \n            severity=\"warning\" \n            sx={{ \n              mt: 2, \n              borderRadius: 2,\n              backgroundColor: 'rgba(237, 108, 2, 0.1)',\n              border: '1px solid rgba(237, 108, 2, 0.2)'\n            }}\n          >\n            Юзернейм уже занят\n          </Alert>\n        )}\n        \n        {usernameData && usernameData.owned && (\n          <Alert \n            severity=\"info\" \n            sx={{ \n              mt: 2, \n              borderRadius: 2,\n              backgroundColor: 'rgba(41, 182, 246, 0.1)',\n              border: '1px solid rgba(41, 182, 246, 0.2)'\n            }}\n          >\n            Вы уже владеете этим юзернеймом\n          </Alert>\n        )}\n      </Paper>\n      \n      {/* Мои юзернеймы */}\n      <Paper \n        elevation={0} \n        sx={{ \n          p: { xs: 2, md: 3 }, \n          mb: { xs: 2, md: 4 }, \n          bgcolor: 'rgba(18, 18, 18, 0.9)', \n          borderRadius: 2,\n          border: '1px solid rgba(208, 188, 255, 0.1)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',\n          backdropFilter: 'blur(10px)'\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <BadgeIcon sx={{ color: '#D0BCFF', mr: 1.5, fontSize: '1.2rem' }} />\n          <Typography variant=\"h6\" sx={{ color: '#D0BCFF', fontWeight: 600, fontSize: '1.1rem' }}>\n          Мои юзернеймы\n        </Typography>\n        </Box>\n        \n        {purchased && purchased.length > 0 ? (\n          <>\n            {/* Desktop view */}\n            <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n              <TableContainer sx={{ \n                mt: 1, \n            borderRadius: 2,\n            border: '1px solid rgba(255, 255, 255, 0.05)',\n                backgroundColor: 'transparent'\n              }}>\n                <Table size=\"medium\">\n              <TableHead>\n                    <TableRow sx={{ backgroundColor: 'rgba(208, 188, 255, 0.05)' }}>\n                      <TableCell sx={{ color: '#D0BCFF', fontWeight: 600, borderBottom: '1px solid rgba(255, 255, 255, 0.05)' }}>Юзернейм</TableCell>\n                      <TableCell sx={{ color: '#D0BCFF', fontWeight: 600, borderBottom: '1px solid rgba(255, 255, 255, 0.05)' }}>Цена</TableCell>\n                      <TableCell sx={{ color: '#D0BCFF', fontWeight: 600, borderBottom: '1px solid rgba(255, 255, 255, 0.05)' }}>Дата покупки</TableCell>\n                      <TableCell sx={{ color: '#D0BCFF', fontWeight: 600, borderBottom: '1px solid rgba(255, 255, 255, 0.05)' }}>Статус</TableCell>\n                      <TableCell sx={{ color: '#D0BCFF', fontWeight: 600, borderBottom: '1px solid rgba(255, 255, 255, 0.05)' }}>Действия</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {purchased.map((item) => (\n                  <TableRow key={item.id} sx={{ \n                        bgcolor: item.is_active ? 'rgba(208, 188, 255, 0.05)' : 'transparent',\n                        '&:hover': { bgcolor: 'rgba(208, 188, 255, 0.03)' },\n                        borderBottom: '1px solid rgba(255, 255, 255, 0.03)'\n                  }}>\n                    <TableCell \n                      sx={{ \n                        fontWeight: item.is_active ? 'bold' : 'normal', \n                        color: item.is_active ? '#D0BCFF' : 'inherit',\n                        maxWidth: '120px',\n                        wordBreak: 'break-word',\n                        overflowWrap: 'break-word',\n                            borderBottom: 'none'\n                      }}\n                    >\n                      {item.username}\n                    </TableCell>\n                        <TableCell sx={{ borderBottom: 'none' }}>{item.price_paid} баллов</TableCell>\n                        <TableCell sx={{ borderBottom: 'none' }}>{formatDate(item.purchase_date)}</TableCell>\n                        <TableCell sx={{ borderBottom: 'none' }}>\n                      {item.is_active ? (\n                            <Chip \n                              label=\"Активен\" \n                              color=\"success\" \n                              size=\"small\" \n                              sx={{ \n                                bgcolor: 'rgba(76, 175, 80, 0.15)', \n                                color: '#81C784',\n                                border: '1px solid rgba(76, 175, 80, 0.3)',\n                                fontWeight: 500\n                              }} \n                            />\n                      ) : item.is_current ? (\n                            <Chip \n                              label=\"Текущий\" \n                              color=\"warning\" \n                              size=\"small\" \n                              sx={{ \n                                bgcolor: 'rgba(255, 152, 0, 0.15)', \n                                color: '#FFB74D',\n                                border: '1px solid rgba(255, 152, 0, 0.3)',\n                                fontWeight: 500\n                              }} \n                            />\n                      ) : null}\n                    </TableCell>\n                        <TableCell sx={{ borderBottom: 'none' }}>\n                      {!item.is_active && (\n          <Button \n            variant=\"outlined\" \n            size=\"small\"\n                          onClick={() => handleSetActive(item)}\n            sx={{ \n                            borderColor: '#D0BCFF',\n                            color: '#D0BCFF',\n                                borderRadius: 2,\n                                textTransform: 'none',\n                                fontSize: '0.8125rem',\n                            '&:hover': {\n                              borderColor: '#D0BCFF',\n                              color: '#D0BCFF',\n                              bgcolor: 'rgba(208, 188, 255, 0.05)'\n                            }\n                          }}\n                        >\n                          Использовать\n          </Button>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n            </Box>\n            \n            {/* Mobile view */}\n            <Box sx={{ display: { xs: 'flex', md: 'none' }, flexDirection: 'column', gap: 2, mt: 2 }}>\n              {purchased.map((item) => (\n                <Paper\n                  key={item.id}\n                  elevation={0}\n                  sx={{\n                    p: 2,\n                    borderRadius: 2,\n                    border: `1px solid ${item.is_active ? 'rgba(208, 188, 255, 0.2)' : 'rgba(255, 255, 255, 0.05)'}`,\n                    backgroundColor: item.is_active ? 'rgba(208, 188, 255, 0.05)' : 'rgba(16, 16, 16, 0.5)'\n                  }}\n                >\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1.5 }}>\n                    <Typography \n                      variant=\"subtitle1\" \n                      sx={{ \n                        fontWeight: item.is_active ? 600 : 500, \n                        color: item.is_active ? '#D0BCFF' : 'white',\n                        wordBreak: 'break-word'\n                      }}\n                    >\n                      {item.username}\n                    </Typography>\n                    \n                    {(item.is_active || item.is_current) && (\n                      <Chip\n                        label={item.is_active ? \"Активен\" : \"Текущий\"}\n                        color={item.is_active ? \"success\" : \"warning\"}\n                        size=\"small\"\n                        sx={{ \n                          bgcolor: item.is_active \n                            ? 'rgba(76, 175, 80, 0.15)'\n                            : 'rgba(255, 152, 0, 0.15)',\n                          color: item.is_active ? '#81C784' : '#FFB74D',\n                          border: item.is_active\n                            ? '1px solid rgba(76, 175, 80, 0.3)'\n                            : '1px solid rgba(255, 152, 0, 0.3)',\n                          fontWeight: 500,\n                          height: 24\n                        }}\n                      />\n                    )}\n                  </Box>\n\n                  <Grid container spacing={1} sx={{ mb: 1.5 }}>\n                    <Grid item xs={6}>\n                      <Typography variant=\"caption\" sx={{ color: 'rgba(255, 255, 255, 0.5)' }}>\n                        Цена:\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        {item.price_paid} баллов\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"caption\" sx={{ color: 'rgba(255, 255, 255, 0.5)' }}>\n                        Дата покупки:\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        {formatDate(item.purchase_date)}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n\n                  {!item.is_active && (\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      onClick={() => handleSetActive(item)}\n                      sx={{\n                        borderColor: '#D0BCFF',\n                        color: '#D0BCFF',\n                        borderRadius: 2,\n                        textTransform: 'none',\n                        mt: 1,\n                        '&:hover': {\n                          borderColor: '#D0BCFF',\n                          color: '#D0BCFF',\n                          bgcolor: 'rgba(208, 188, 255, 0.05)'\n                        }\n                      }}\n                    >\n                      Использовать\n                    </Button>\n                  )}\n                </Paper>\n              ))}\n            </Box>\n          </>\n        ) : (\n          <Box sx={{ \n            p: 4, \n            textAlign: 'center', \n            color: 'text.secondary', \n            bgcolor: 'rgba(0, 0, 0, 0.2)',\n            borderRadius: 2, \n            border: '1px solid rgba(255, 255, 255, 0.05)'\n          }}>\n            <BadgeIcon sx={{ fontSize: 40, color: 'rgba(208, 188, 255, 0.3)', mb: 1 }} />\n            <Typography variant=\"subtitle1\" sx={{ color: 'rgba(255, 255, 255, 0.7)', mb: 1 }}>\n            У вас пока нет приобретенных юзернеймов\n            </Typography>\n            <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.5)', mb: 2 }}>\n              Используйте форму выше, чтобы найти и приобрести уникальный юзернейм\n            </Typography>\n          </Box>\n        )}\n      </Paper>\n      \n      {/* Диалоги оставляем без изменений */}\n      <Dialog\n        open={openConfirmDialog}\n        onClose={() => setOpenConfirmDialog(false)}\n        PaperProps={{\n          style: {\n            backgroundColor: '#1e1e1e',\n            color: '#fff',\n            borderRadius: '8px'\n          }\n        }}\n        maxWidth=\"xs\"\n        fullWidth\n      >\n        <DialogTitle sx={{ color: '#D0BCFF', p: isMobile ? 2 : 3 }}>\n          Сменить юзернейм\n        </DialogTitle>\n        <DialogContent sx={{ p: isMobile ? 2 : 3 }}>\n          <DialogContentText sx={{ color: '#eeeeee' }}>\n            Вы уверены, что хотите изменить свой юзернейм на <strong style={{ \n              color: '#D0BCFF', \n              wordBreak: 'break-word',\n              overflowWrap: 'break-word'\n            }}>{selectedUsername?.username}</strong>?\n            <br/><br/>\n            Этот юзернейм будет отображаться в вашем профиле и всех ваших действиях на платформе.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions sx={{ p: isMobile ? 2 : 3, pt: 0 }}>\n          <Button \n            onClick={() => setOpenConfirmDialog(false)} \n            sx={{ color: '#D0BCFF' }}\n            disabled={isChangingActive}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={confirmSetActive} \n            variant=\"contained\" \n            disabled={isChangingActive}\n            startIcon={isChangingActive ? <CircularProgress size={20} color=\"inherit\" /> : null}\n            sx={{ \n              bgcolor: '#D0BCFF', \n              color: '#1A1A1A',\n              '&:hover': {\n                bgcolor: '#B39DDB',\n              }\n            }}\n          >\n            {isChangingActive ? 'Применение...' : 'Применить'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      <Dialog \n        open={openPurchaseDialog} \n        onClose={() => !purchaseAnimation && setOpenPurchaseDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n        PaperProps={{\n          sx: { \n            borderRadius: 3,\n            backgroundImage: 'linear-gradient(135deg, rgba(18, 18, 18, 0.95) 0%, rgba(20, 20, 20, 0.9) 100%)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255, 255, 255, 0.05)'\n          }\n        }}\n      >\n        <PurchaseDialogHeader>\n          <Avatar sx={{ \n            width: isMobile ? 60 : 70, \n            height: isMobile ? 60 : 70, \n            bgcolor: 'rgba(208, 188, 255, 0.15)', \n            mb: 2,\n            border: '2px solid rgba(208, 188, 255, 0.2)'\n          }}>\n            <ShoppingCartIcon sx={{ fontSize: isMobile ? 30 : 40, color: '#d0bcff' }} />\n          </Avatar>\n          <Typography variant=\"h5\" sx={{ color: 'white', fontWeight: 700, mb: 1, fontSize: isMobile ? '1.2rem' : '1.5rem' }}>\n            Покупка юзернейма\n            </Typography>\n          <Typography variant=\"body2\" sx={{ color: 'rgba(255,255,255,0.7)', maxWidth: '80%' }}>\n            Вы собираетесь приобрести юзернейм <strong>{username}</strong>\n          </Typography>\n        </PurchaseDialogHeader>\n        \n        <DialogContent sx={{ p: isMobile ? 2 : 3, mt: isMobile ? 1 : 2 }}>\n          {purchaseAnimation ? (\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', py: isMobile ? 2 : 3 }}>\n              {purchaseComplete ? (\n                <Box sx={{ textAlign: 'center' }}>\n                  <CheckCircleIcon sx={{ fontSize: isMobile ? 50 : 70, color: '#4CAF50', mb: 2 }} />\n                  <Typography variant=\"h6\" sx={{ color: '#4CAF50', fontWeight: 'bold' }}>\n                    Покупка успешно завершена!\n            </Typography>\n        </Box>\n              ) : (\n                <>\n                  <CircularProgress size={isMobile ? 50 : 70} sx={{ mb: 3, color: '#D0BCFF' }} />\n                  <Typography variant=\"h6\" sx={{ mb: 1 }}>\n                    Обработка покупки...\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Пожалуйста, подождите\n                  </Typography>\n                </>\n              )}\n      </Box>\n          ) : (\n            <>\n              <Box sx={{ mb: isMobile ? 2 : 3 }}>\n                <Grid container spacing={isMobile ? 1 : 2}>\n                  <Grid item xs={12}>\n        <Box sx={{ \n                      p: isMobile ? 1.5 : 2, \n                      borderRadius: 2, \n                      bgcolor: 'rgba(30, 30, 30, 0.6)', \n                      border: '1px solid rgba(208, 188, 255, 0.2)',\n                      boxShadow: '0 2px 10px rgba(0,0,0,0.15)'\n                    }}>\n                      <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                        Детали покупки:\n          </Typography>\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'bold', mb: 1 }}>\n                        Юзернейм: <span style={{ \n                          color: '#D0BCFF', \n                          wordBreak: 'break-word',\n                          overflowWrap: 'break-word'\n                        }}>{username}</span>\n                      </Typography>\n                      <Typography variant=\"body1\" sx={{ mb: 1 }}>\n                        Длина: {usernameData?.length || 0} символов (x{getLengthFactor(usernameData?.length || 0)})\n                      </Typography>\n                      <Typography variant=\"body1\" sx={{ mb: 1 }}>\n                        Популярность: x{usernameData?.popularity?.toFixed(1) || '1.0'}\n                      </Typography>\n                      <Divider sx={{ my: 1.5, bgcolor: 'rgba(208, 188, 255, 0.1)' }} />\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                        <Typography variant=\"body1\">Баланс:</Typography>\n                        <Typography variant=\"body1\">{userPoints} баллов</Typography>\n        </Box>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                        <Typography variant=\"body1\">Стоимость:</Typography>\n                        <Typography variant=\"body1\" color=\"error\">-{usernameData?.price || 0} баллов</Typography>\n                      </Box>\n                      <Divider sx={{ my: 1.5, bgcolor: 'rgba(208, 188, 255, 0.1)' }} />\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                        <Typography variant=\"body1\" fontWeight=\"bold\">Останется:</Typography>\n                        <Typography variant=\"body1\" fontWeight=\"bold\">\n                          {userPoints - (usernameData?.price || 0)} баллов\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n            </>\n          )}\n        </DialogContent>\n        \n        {!purchaseAnimation && (\n          <Box sx={{ \n            p: isMobile ? 2 : 3, \n            display: 'flex', \n            justifyContent: 'space-between',\n            borderTop: '1px solid rgba(208, 188, 255, 0.1)'\n          }}>\n          <Button \n              onClick={() => setOpenPurchaseDialog(false)}\n            sx={{ \n                borderRadius: 2,\n                color: 'rgba(255,255,255,0.7)',\n                '&:hover': { bgcolor: 'rgba(255,255,255,0.05)' }\n            }}\n          >\n              Отмена\n          </Button>\n          <Button \n              onClick={handlePurchase}\n              disabled={purchasing}\n              startIcon={<ShoppingCartIcon />}\n            variant=\"contained\" \n            sx={{ \n                bgcolor: '#D0BCFF', \n                color: '#1A1A1A',\n                backgroundImage: 'linear-gradient(135deg, #D0BCFF 0%, #7C4DFF 100%)',\n              '&:hover': {\n                  backgroundImage: 'linear-gradient(135deg, #B39DDB 0%, #673AB7 100%)',\n              }\n            }}\n          >\n              Подтвердить покупку\n          </Button>\n        </Box>\n        )}\n      </Dialog>\n      \n      \n      <Snackbar \n        open={snackbar.open} \n        autoHideDuration={6000} \n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseSnackbar} \n          severity={snackbar.severity} \n          variant=\"filled\"\n          sx={{ \n            width: '100%',\n            bgcolor: severity => severity === 'success' ? 'rgba(46, 125, 50, 0.9)' : \n                      severity === 'error' ? 'rgba(211, 47, 47, 0.9)' :\n                      severity === 'warning' ? 'rgba(237, 108, 2, 0.9)' : 'rgba(2, 136, 209, 0.9)',\n            backdropFilter: 'blur(4px)'\n          }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nconst DecorationItem = styled('img')(({ customStyles }) => ({\n  position: 'absolute',\n  right: 0,\n  height: 'max-content',\n  maxHeight: 60,\n  opacity: 1,\n  pointerEvents: 'none',\n  zIndex: 1,\n  ...customStyles\n}));\n\nconst DecorationPreview = ({ decoration, children }) => {\n  // Определяем тип фона (градиент, изображение или цвет)\n  const isGradient = decoration?.background?.includes('linear-gradient');\n  const isImage = decoration?.background?.includes('/');\n  const isHexColor = decoration?.background?.startsWith('#');\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        width: '100%',\n        height: 60,\n        borderRadius: 1,\n        overflow: 'hidden',\n        bgcolor: 'background.default',\n        background: decoration?.background ? (\n          isImage ? 'none' : decoration.background\n        ) : 'background.default',\n        '&::before': isImage ? {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundImage: `url(${decoration.background})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          opacity: 0.75,\n          zIndex: 0,\n        } : {},\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst SettingsPage = () => {\n\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { user, updateUserData } = useContext(AuthContext);\n  const { themeSettings, updateThemeSettings } = useContext(ThemeSettingsContext);\n  const { enqueueSnackbar } = useSnackbar();\n  \n  const [userDecorations, setUserDecorations] = useState([]);\n  const [loadingDecorations, setLoadingDecorations] = useState(false);\n  const isChannel = user?.account_type === 'channel';\n  \n\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [autoSaveTimeout, setAutoSaveTimeout] = useState(null);\n  \n\n  const [sessionManagerOpen, setSessionManagerOpen] = useState(false);\n  \n\n  const handleOpenSessionManager = () => {\n    setSessionManagerOpen(true);\n  };\n  \n  const handleCloseSessionManager = () => {\n    setSessionManagerOpen(false);\n  };\n  \n\n  const [accountStatus, setAccountStatus] = useState('good'); \n  const [userWarnings, setUserWarnings] = useState([]);\n  const [warningsDialogOpen, setWarningsDialogOpen] = useState(false);\n  const [loadingWarnings, setLoadingWarnings] = useState(false);\n  const [banInfo, setBanInfo] = useState(null);\n  \n  \n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [about, setAbout] = useState('');\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [avatarPreview, setAvatarPreview] = useState('');\n  const [bannerFile, setBannerFile] = useState(null);\n  const [bannerPreview, setBannerPreview] = useState('');\n  const [socials, setSocials] = useState([]);\n  \n  \n  const [userAchievements, setUserAchievements] = useState([]);\n  const [loadingAchievements, setLoadingAchievements] = useState(false);\n  const [updatingActiveBadge, setUpdatingActiveBadge] = useState(false);\n  \n  \n  const [elementConnected, setElementConnected] = useState(false);\n  const [elementLinking, setElementLinking] = useState(false);\n  const [elementToken, setElementToken] = useState('');\n  const [loadingElementStatus, setLoadingElementStatus] = useState(false);\n  \n  \n  const [socialDialogOpen, setSocialDialogOpen] = useState(false);\n  const [newSocialName, setNewSocialName] = useState('');\n  const [newSocialLink, setNewSocialLink] = useState('');\n  \n  \n  const [settings, setSettings] = useState({\n    background_color: '#131313',\n    container_color: '#1c1c1c',\n    welcome_bubble_color: '#131313',\n    avatar_border_color: '#D0BCFF',\n    button_primary_color: '#ffffff00',\n    button_primary_border_color: '#ffffff00',\n    button_edit_color: '#ffffff00',\n    button_edit_border_color: '#ff9800',\n    info_bubble_color: '#242526',\n    info_bubble_border_color: '#cccccc',\n    popup_alert_color: 'rgba(0, 0, 0, 0.8)',\n    header_color: '#1c1c1c',\n    bottom_nav_color: '#1c1c1c',\n    content_color: '#1c1c1c',\n  });\n  \n  \n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  \n  \n  const [notificationPrefs, setNotificationPrefs] = useState({\n    pushNotificationsEnabled: true,\n    telegramNotificationsEnabled: false,\n    telegramConnected: false\n  });\n  const [loadingNotificationPrefs, setLoadingNotificationPrefs] = useState(false);\n  const [savingNotificationPrefs, setSavingNotificationPrefs] = useState(false);\n  const [pushNotificationSupported, setPushNotificationSupported] = useState(false);\n  const [pushSubscriptionStatus, setPushSubscriptionStatus] = useState(false);\n  \n  \n  const [pushSupported, setPushSupported] = useState(false);\n  const [pushPermission, setPushPermission] = useState('default');\n  const [pushSubscribed, setPushSubscribed] = useState(false);\n  const [pushLoading, setPushLoading] = useState(false);\n  \n  \n  const [telegramDialogOpen, setTelegramDialogOpen] = useState(false);\n  const [telegramIdInput, setTelegramIdInput] = useState('');\n  const [telegramIdError, setTelegramIdError] = useState('');\n  const [savingTelegramId, setSavingTelegramId] = useState(false);\n  \n  \n  const [profileData, setProfileData] = useState(null);\n  const [purchasedBadges, setPurchasedBadges] = useState([]);\n  const [loadingPurchasedBadges, setLoadingPurchasedBadges] = useState(false);\n  const [isCustomProfileActive, setIsCustomProfileActive] = useState(false); \n  const [deleteChannelDialogOpen, setDeleteChannelDialogOpen] = useState(false);\n  \n  const [connectionModalOpen, setConnectionModalOpen] = useState(false);\n  \n \n  \n  useEffect(() => {\n    fetchProfileData();\n    \n    fetchUserAchievements();\n    \n    fetchUserWarnings();\n    \n    fetchUserDecorations();\n    \n    \n    \n    \n    const handleStorageChange = (e) => {\n      if (e.key === 'elem_connected' && e.newValue === 'true') {\n        checkElementStatus();\n        localStorage.removeItem('elem_connected'); \n      }\n    };\n    \n    window.addEventListener('storage', handleStorageChange);\n    \n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n  \n  const fetchUserDecorations = async () => {\n    setLoadingDecorations(true);\n    try {\n      const response = await fetch('/api/decorations/current');\n      if (!response.ok) throw new Error('Failed to fetch decorations');\n      \n      const data = await response.json();\n      if (data.success) {\n        setUserDecorations(data.decorations);\n      }\n    } catch (error) {\n      console.error('Error fetching decorations:', error);\n    } finally {\n      setLoadingDecorations(false);\n    }\n  };\n\n  useEffect(() => {\n    const checkElementOnFocus = () => {\n      checkElementStatus();\n    };\n    \n    window.addEventListener('focus', checkElementOnFocus);\n    \n    return () => {\n      window.removeEventListener('focus', checkElementOnFocus);\n    };\n  }, []);\n  \n  \n  const fetchProfileData = async () => {\n    try {\n      setLoading(true);\n      \n      \n      const profileData = await ProfileService.getProfile(user.username);\n      if (profileData && profileData.user) {\n        setName(profileData.user.name || '');\n        setUsername(profileData.user.username || '');\n        setAbout(profileData.user.about || '');\n        setAvatarPreview(profileData.user.avatar_url || '');\n        setBannerPreview(profileData.user.banner_url || '');\n        setSocials(profileData.socials || []);\n        \n        \n        setProfileData(profileData);\n        \n        \n        setIsCustomProfileActive(profileData.user.profile_id === 2);\n        \n        \n        if (profileData.user.element_connected !== undefined) {\n          setElementConnected(profileData.user.element_connected);\n        } else {\n          \n          setElementConnected(!!profileData.user.elem_id);\n        }\n      }\n      \n      \n      const settingsData = await ProfileService.getSettings();\n      if (settingsData && settingsData.success && settingsData.settings) {\n        setSettings(settingsData.settings);\n      }\n      \n      setLoading(false);\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n      showNotification('error', 'Не удалось загрузить данные пользователя');\n      setLoading(false);\n    }\n  };\n  \n  \n  const fetchUserAchievements = async () => {\n    try {\n      setLoadingAchievements(true);\n      const response = await axios.get('/api/profile/achievements');\n      \n      if (response.data && response.data.achievements) {\n        setUserAchievements(response.data.achievements);\n      }\n      \n      setLoadingAchievements(false);\n    } catch (error) {\n      console.error('Ошибка загрузки достижений:', error);\n      setLoadingAchievements(false);\n    }\n  };\n  \n  \n  const fetchPurchasedBadges = async () => {\n    try {\n      setLoadingPurchasedBadges(true);\n      const response = await axios.get('/api/badges/purchases');\n      \n      if (response.data && response.data.purchases) {\n        setPurchasedBadges(response.data.purchases);\n      }\n      \n      setLoadingPurchasedBadges(false);\n    } catch (error) {\n      console.error('Ошибка загрузки приобретенных бейджей:', error);\n      setLoadingPurchasedBadges(false);\n    }\n  };\n  \n  \n  useEffect(() => {\n    if (user) {\n      fetchUserAchievements();\n      fetchPurchasedBadges();\n    }\n  }, [user]);\n  \n  \n  const handleSetActiveBadge = async (achievementId) => {\n    try {\n      setUpdatingActiveBadge(true);\n      const response = await axios.post('/api/profile/achievements/active', {\n        achievement_id: achievementId\n      });\n      \n      if (response.data && response.data.success) {\n        \n        fetchUserAchievements();\n        fetchPurchasedBadges();\n        showNotification('success', 'Активный бейдж обновлен');\n      }\n      \n      setUpdatingActiveBadge(false);\n    } catch (error) {\n      console.error('Ошибка обновления активного бейджа:', error);\n      showNotification('error', 'Не удалось обновить активный бейдж');\n      setUpdatingActiveBadge(false);\n    }\n  };\n  \n  \n  useEffect(() => {\n    if (!user) return;\n    \n    \n    const checkPushSupport = () => {\n      const isSupported = \n        'serviceWorker' in navigator && \n        'PushManager' in window &&\n        'Notification' in window;\n      \n      setPushNotificationSupported(isSupported);\n      \n      \n      setPushSubscriptionStatus(false);\n      \n      \n      if (isSupported && window.PushNotifications) {\n        window.PushNotifications.checkSubscription()\n          .then(isSubscribed => {\n            console.log('Push subscription status:', isSubscribed);\n            setPushSubscriptionStatus(isSubscribed);\n          })\n          .catch(error => {\n            console.error('Ошибка при проверке статуса подписки:', error);\n            setPushSubscriptionStatus(false);\n          });\n      }\n    };\n    \n    \n    const loadNotificationPreferences = async () => {\n      try {\n        setLoadingNotificationPrefs(true);\n        const response = await axios.get('/api/notifications/preferences');\n        \n        if (response.data) {\n          const pushEnabled = response.data.push_notifications_enabled;\n          const telegramEnabled = response.data.telegram_notifications_enabled;\n          const telegramConnected = response.data.telegram_connected;\n          \n          console.log('Notification preferences loaded:', { \n            pushEnabled, \n            telegramEnabled, \n            telegramConnected \n          });\n          \n          setNotificationPrefs({\n            pushNotificationsEnabled: pushEnabled,\n            telegramNotificationsEnabled: telegramEnabled,\n            telegramConnected: telegramConnected\n          });\n        }\n        \n        setLoadingNotificationPrefs(false);\n      } catch (error) {\n        console.error('Ошибка загрузки настроек уведомлений:', error);\n        setLoadingNotificationPrefs(false);\n      }\n    };\n    \n    checkPushSupport();\n    loadNotificationPreferences();\n  }, [user]);\n  \n  \n  useEffect(() => {\n    if (user) {\n      \n      const checkNotificationSupport = async () => {\n        try {\n          const isSupported = await NotificationService.isPushNotificationSupported();\n          setPushSupported(isSupported);\n          \n          if (isSupported) {\n            const permission = await NotificationService.getNotificationPermissionStatus();\n            setPushPermission(permission);\n            \n            \n            const antiCachingActive = window.setupCaching && \n                                      typeof window.setupCaching === 'function';\n            \n            if (antiCachingActive) {\n              console.warn('Anti-caching system may interfere with push notifications');\n            }\n            \n            \n            let swRegistered = false;\n            if ('serviceWorker' in navigator) {\n              try {\n                const registrations = await navigator.serviceWorker.getRegistrations();\n                const pushSW = registrations.find(reg => \n                  reg.active && reg.active.scriptURL && \n                  reg.active.scriptURL.includes('service-worker.js')\n                );\n                \n                swRegistered = !!pushSW;\n                \n                if (pushSW) {\n                  const subscription = await pushSW.pushManager.getSubscription();\n                  setPushSubscribed(!!subscription);\n                } else {\n                  setPushSubscribed(false);\n                  console.warn('Push notification service worker not registered. Notifications may not work.');\n                }\n              } catch (err) {\n                console.error('Error checking service worker registration:', err);\n                setPushSubscribed(false);\n              }\n            } else {\n              setPushSubscribed(false);\n            }\n          }\n        } catch (error) {\n          console.error('Error checking push support:', error);\n        }\n      };\n      \n      checkNotificationSupport();\n    }\n  }, [user]);\n  \n  \n  const handleEnablePushNotifications = async () => {\n    try {\n      setPushLoading(true);\n      console.log('Starting push notification setup...');\n      \n      \n      const isSupported = await NotificationService.isPushNotificationSupported();\n      console.log('Push notifications supported:', isSupported);\n      \n      if (!isSupported) {\n        showNotification('error', 'Push-уведомления не поддерживаются вашим браузером');\n        setPushLoading(false);\n        return;\n      }\n      \n      \n      const permission = await NotificationService.getNotificationPermissionStatus();\n      console.log('Current permission status:', permission);\n      \n      if (permission === 'denied') {\n        showNotification('error', 'Разрешение на уведомления заблокировано. Пожалуйста, измените настройки в браузере.');\n        setPushLoading(false);\n        return;\n      }\n      \n      try {\n        \n        console.log('Subscribing to push notifications...');\n        await NotificationService.subscribeToPushNotifications();\n        setPushSubscribed(true);\n        \n        \n        console.log('Updating notification preferences on server...');\n        try {\n          await axios.post('/api/notifications/preferences', {\n            push_notifications_enabled: true\n          });\n          console.log('Notification preferences updated successfully');\n        } catch (prefError) {\n          console.error('Error updating notification preferences:', prefError);\n          if (prefError.response) {\n            console.error('Server response:', prefError.response.data);\n          }\n        }\n        \n        \n        try {\n          console.log('Sending test notification...');\n          const testResult = await NotificationService.sendTestNotification();\n          console.log('Test notification result:', testResult);\n          showNotification('success', 'Push-уведомления успешно включены');\n        } catch (testError) {\n          console.error('Error sending test notification:', testError);\n          if (testError.response) {\n            console.error('Server response:', testError.response.data);\n          }\n          showNotification('info', 'Push-уведомления включены, но тестовое уведомление не отправлено');\n        }\n        \n      } catch (subError) {\n        console.error('Error in subscription process:', subError);\n        showNotification('error', `Ошибка при подписке на уведомления: ${subError.message}`);\n        setPushLoading(false);\n        return;\n      }\n      \n      setPushLoading(false);\n    } catch (error) {\n      console.error('General error enabling push notifications:', error);\n      showNotification('error', `Ошибка при включении push-уведомлений: ${error.message}`);\n      setPushLoading(false);\n    }\n  };\n  \n  \n  const handleDisablePushNotifications = async () => {\n    try {\n      setPushLoading(true);\n      \n      const success = await NotificationService.unsubscribeFromPushNotifications();\n      \n      \n      try {\n        await axios.post('/api/notifications/preferences', {\n          push_notifications_enabled: false\n        });\n      } catch (prefError) {\n        console.error('Error updating notification preferences:', prefError);\n      }\n      \n      setPushSubscribed(false);\n      showNotification(success ? 'success' : 'info', 'Push-уведомления отключены');\n      setPushLoading(false);\n    } catch (error) {\n      console.error('Error disabling push notifications:', error);\n      showNotification('error', 'Произошла ошибка, но push-уведомления отключены');\n      setPushSubscribed(false);\n      setPushLoading(false);\n    }\n  };\n  \n  \n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  \n  \n  const getTabContent = (tabIndex) => {\n    if (!isChannel) {\n      return tabIndex;\n    }\n    \n    \n    \n    switch(tabIndex) {\n      case 0: return 0; \n      case 1: return 1; \n      case 2: return 3; \n      default: return tabIndex;\n    }\n  };\n  \n  \n  const handleAvatarChange = (file) => {\n    if (!file) return;\n    \n    setAvatarFile(file);\n    \n    \n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setAvatarPreview(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  \n  \n  const handleBannerChange = (file) => {\n    if (!file) return;\n    \n    setBannerFile(file);\n    \n    \n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setBannerPreview(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  \n  \n  const handleSaveProfile = async () => {\n    try {\n      setSaving(true);\n      console.log('Starting profile save...');\n      \n      let hasErrors = false;\n      let responses = [];\n      \n\n      if (name !== user.name) {\n        try {\n          console.log('Updating name...');\n          const formData = new FormData();\n          formData.append('name', name);\n          \n          const response = await axios.post('/api/profile/update-name', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          \n          console.log('Name update response:', response.data);\n          responses.push({ \n            type: 'name', \n            success: response.data.success || false, \n            message: response.data.message || response.data.error || 'Неизвестная ошибка'\n          });\n          \n          if (!response.data.success) hasErrors = true;\n        } catch (error) {\n          console.error('Error updating name:', error);\n          responses.push({ \n            type: 'name', \n            success: false, \n            message: error.response?.data?.error || error.response?.data?.message || 'Ошибка обновления имени'\n          });\n          hasErrors = true;\n        }\n      }\n      \n\n      if (username !== user.username) {\n        try {\n          console.log('Updating username...');\n          const formData = new FormData();\n          formData.append('username', username);\n          \n          const response = await axios.post('/api/profile/update-username', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          \n          console.log('Username update response:', response.data);\n          responses.push({ \n            type: 'username', \n            success: response.data.success || false, \n            message: response.data.message || response.data.error || 'Неизвестная ошибка'\n          });\n          \n          if (!response.data.success) hasErrors = true;\n        } catch (error) {\n          console.error('Error updating username:', error);\n          responses.push({ \n            type: 'username', \n            success: false, \n            message: error.response?.data?.error || error.response?.data?.message || 'Ошибка обновления username'\n          });\n          hasErrors = true;\n        }\n      }\n      \n\n      if (about !== (user.about || '')) {\n        try {\n          console.log('Updating about...');\n          const formData = new FormData();\n          formData.append('about', about);\n          \n          const response = await axios.post('/api/profile/update-about', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          \n          console.log('About update response:', response.data);\n          responses.push({ \n            type: 'about', \n            success: response.data.success || false, \n            message: response.data.message || response.data.error || 'Неизвестная ошибка'\n          });\n          \n          if (!response.data.success) hasErrors = true;\n        } catch (error) {\n          console.error('Error updating about:', error);\n          responses.push({ \n            type: 'about', \n            success: false, \n            message: error.response?.data?.error || error.response?.data?.message || 'Ошибка обновления описания'\n          });\n          hasErrors = true;\n        }\n      }\n      \n\n      if (avatarFile) {\n        try {\n          console.log('Uploading avatar...');\n          const formData = new FormData();\n          formData.append('avatar', avatarFile);\n          \n          const response = await axios.post('/api/profile/upload-avatar', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          \n          console.log('Avatar upload response:', response.data);\n          responses.push({ \n            type: 'avatar', \n            success: response.data.success || false, \n            message: response.data.message || response.data.error || 'Неизвестная ошибка'\n          });\n          \n          if (!response.data.success) hasErrors = true;\n        } catch (error) {\n          console.error('Error uploading avatar:', error);\n          responses.push({ \n            type: 'avatar', \n            success: false, \n            message: error.response?.data?.error || error.response?.data?.message || 'Ошибка загрузки аватара'\n          });\n          hasErrors = true;\n        }\n      }\n      \n\n      if (bannerFile) {\n        try {\n          console.log('Uploading banner...');\n          const formData = new FormData();\n          formData.append('banner', bannerFile);\n          \n          const response = await axios.post('/api/profile/upload-banner', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          \n          console.log('Banner upload response:', response.data);\n          responses.push({ \n            type: 'banner', \n            success: response.data.success || false, \n            message: response.data.message || response.data.error || 'Неизвестная ошибка'\n          });\n          \n          if (!response.data.success) hasErrors = true;\n        } catch (error) {\n          console.error('Error uploading banner:', error);\n          responses.push({ \n            type: 'banner', \n            success: false, \n            message: error.response?.data?.error || error.response?.data?.message || 'Ошибка загрузки баннера'\n          });\n          hasErrors = true;\n        }\n      }\n      \n\n      if (updateUserData) {\n        updateUserData({\n          ...user,\n          name,\n          username,\n          about\n        });\n      }\n      \n\n      if (hasErrors) {\n        let errorMessage = '';\n        const failedResponses = responses.filter(r => !r.success);\n        \n        if (failedResponses.length === 1) {\n          errorMessage = failedResponses[0].message;\n        } else {\n          errorMessage = 'Не удалось сохранить следующие данные:\\n';\n          failedResponses.forEach(resp => {\n            errorMessage += `• ${resp.type}: ${resp.message}\\n`;\n          });\n        }\n        \n        console.error('Save errors:', failedResponses);\n        showNotification('error', errorMessage);\n      } else {\n        console.log('All operations successful');\n        showNotification('success', 'Профиль успешно сохранен');\n        \n\n        navigate(`/profile/${username}`);\n      }\n    } catch (error) {\n      console.error('Error saving profile:', error);\n      showNotification('error', 'Произошла ошибка при сохранении профиля: ' + (error.message || 'Неизвестная ошибка'));\n    } finally {\n      setSaving(false);\n    }\n  };\n  \n  \n  const handleSaveSettings = async () => {\n    setSaving(true);\n    setSuccess(false);\n    \n    try {\n\n      const settingsToSave = {\n        background_color: settings.background_color,\n        container_color: settings.container_color,\n        welcome_bubble_color: settings.welcome_bubble_color,\n        avatar_border_color: settings.avatar_border_color,\n        info_bubble_color: settings.info_bubble_color,\n        info_bubble_border_color: settings.info_bubble_border_color,\n        \n        header_color: settings.header_color || settings.container_color,\n        bottom_nav_color: settings.bottom_nav_color || settings.container_color,\n        content_color: settings.content_color || settings.container_color,\n      };\n      \n\n      const response = await axios.post('/api/profile/settings', settingsToSave, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.data && response.data.success) {\n        setSuccess(true);\n        showNotification('success', 'Настройки успешно сохранены');\n        \n\n        themeSettings.updateThemeSettings({\n          backgroundColor: response.data.settings.background_color,\n          paperColor: response.data.settings.container_color,\n          headerColor: response.data.settings.header_color || response.data.settings.container_color,\n          bottomNavColor: response.data.settings.bottom_nav_color || response.data.settings.container_color,\n          contentColor: response.data.settings.content_color || response.data.settings.container_color,\n          primaryColor: response.data.settings.avatar_border_color\n        });\n      } else {\n        throw new Error(response.data?.error || 'Не удалось сохранить настройки');\n      }\n    } catch (error) {\n      console.error('Ошибка при сохранении настроек:', error);\n      \n      showNotification('error', error.message || 'Ошибка при сохранении настроек');\n    } finally {\n      setSaving(false);\n      \n\n      setTimeout(() => {\n        setSuccess(false);\n      }, 3000);\n    }\n  };\n  \n  \n  const handleColorChange = (colorType, color) => {\n    \n    if (colorType === 'background_color') {\n      setSettings(prev => ({ ...prev, background_color: color }));\n      updateThemeSettings({ backgroundColor: color });\n      \n      document.documentElement.style.setProperty('--background-color', color);\n      localStorage.setItem('backgroundColor', color);\n    } else if (colorType === 'container_color') {\n      setSettings(prev => ({ ...prev, container_color: color }));\n      updateThemeSettings({ paperColor: color });\n      \n      document.documentElement.style.setProperty('--paper-color', color);\n      localStorage.setItem('paperColor', color);\n    } else if (colorType === 'welcome_bubble_color') {\n      setSettings(prev => ({ ...prev, welcome_bubble_color: color }));\n      updateThemeSettings({ welcomeBubbleColor: color });\n      \n      document.documentElement.style.setProperty('--welcome-bubble-color', color);\n      localStorage.setItem('welcomeBubbleColor', color);\n    } else if (colorType === 'avatar_border_color') {\n      setSettings(prev => ({ ...prev, avatar_border_color: color }));\n      updateThemeSettings({ primaryColor: color });\n      \n      document.documentElement.style.setProperty('--primary-color', color);\n      localStorage.setItem('primaryColor', color);\n    } else if (colorType === 'info_bubble_color') {\n      setSettings(prev => ({ ...prev, info_bubble_color: color }));\n      updateThemeSettings({ infoBubbleColor: color });\n      \n      document.documentElement.style.setProperty('--info-bubble-color', color);\n      localStorage.setItem('infoBubbleColor', color);\n    } else if (colorType === 'header_color') {\n      setSettings(prev => ({ ...prev, header_color: color }));\n      updateThemeSettings({ headerColor: color });\n      \n      document.documentElement.style.setProperty('--header-color', color);\n      localStorage.setItem('headerColor', color);\n    } else if (colorType === 'bottom_nav_color') {\n      setSettings(prev => ({ ...prev, bottom_nav_color: color }));\n      updateThemeSettings({ bottomNavColor: color });\n      \n      document.documentElement.style.setProperty('--bottom-nav-color', color);\n      localStorage.setItem('bottomNavColor', color);\n    } else if (colorType === 'content_color') {\n      setSettings(prev => ({ ...prev, content_color: color }));\n      updateThemeSettings({ contentColor: color });\n      \n      document.documentElement.style.setProperty('--content-color', color);\n      localStorage.setItem('contentColor', color);\n    }\n\n    \n    window.dispatchEvent(new Event('storage'));\n    \n    \n    if (autoSaveTimeout) {\n      clearTimeout(autoSaveTimeout);\n    }\n    \n    setAutoSaveTimeout(setTimeout(() => {\n      handleSaveSettings();\n    }, 1000));\n  };\n\n  \n  const getContrastTextColor = (hexColor) => {\n    \n    \n    const color = hexColor.charAt(0) === '#' ? hexColor.substring(1) : hexColor;\n    \n    \n    const r = parseInt(color.substr(0, 2), 16);\n    const g = parseInt(color.substr(2, 2), 16);\n    const b = parseInt(color.substr(4, 2), 16);\n    \n    \n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    \n    \n    return luminance > 0.5 ? '#000000' : '#FFFFFF';\n  };\n  \n  \n  const handleAddSocial = async () => {\n    try {\n      setSaving(true);\n      \n      \n      if (!newSocialName || !newSocialLink) {\n        showNotification('error', 'Пожалуйста, заполните все поля');\n        setSaving(false);\n        return;\n      }\n      \n      \n      let url = newSocialLink;\n      if (!url.startsWith('http://') && !url.startsWith('https://')) {\n        url = 'https://' + url;\n      }\n      \n      \n      if (socials.some(social => social.name.toLowerCase() === newSocialName.toLowerCase())) {\n        showNotification('error', `Социальная сеть ${newSocialName} уже добавлена`);\n        setSaving(false);\n        return;\n      }\n      \n      const response = await ProfileService.addSocial(newSocialName, url);\n      \n      if (response.success) {\n        \n        setSocials([...socials, { name: newSocialName, link: url }]);\n        showNotification('success', 'Социальная сеть добавлена');\n        \n        \n        setSocialDialogOpen(false);\n        setNewSocialName('');\n        setNewSocialLink('');\n      } else {\n        \n        showNotification('error', response.error || 'Ошибка добавления социальной сети');\n      }\n      \n      setSaving(false);\n    } catch (error) {\n      console.error('Ошибка добавления социальной сети:', error);\n      showNotification('error', error.response?.data?.error || error.message || 'Не удалось добавить социальную сеть');\n      setSaving(false);\n    }\n  };\n  \n  \n  const handleDeleteSocial = async (name) => {\n    try {\n      setSaving(true);\n      \n      const response = await ProfileService.deleteSocial(name);\n      \n      if (response.success) {\n        setSocials(socials.filter(social => social.name !== name));\n        showNotification('success', 'Социальная сеть удалена');\n      } else {\n        throw new Error(response.error || 'Failed to delete social network');\n      }\n      \n      setSaving(false);\n    } catch (error) {\n      console.error('Ошибка удаления социальной сети:', error);\n      showNotification('error', 'Ошибка удаления социальной сети');\n      setSaving(false);\n    }\n  };\n  \n  \n  const showNotification = (severity, message) => {\n    if (!message) {\n      message = severity === 'error' \n        ? 'Произошла ошибка при выполнении операции' \n        : 'Операция выполнена';\n    }\n    \n    \n    if (typeof message === 'object' && message !== null) {\n      if (message.message) {\n        message = message.message;\n      } else {\n        try {\n          message = JSON.stringify(message);\n        } catch (e) {\n          message = 'Неизвестная ошибка';\n        }\n      }\n    }\n    \n    \n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n    \n    \n    enqueueSnackbar(message, { \n      variant: severity,\n      anchorOrigin: { vertical: 'bottom', horizontal: 'center' }\n    });\n  };\n  \n  \n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setSnackbar(prev => ({ ...prev, open: false }));\n  };\n  \n  \n  const applyTheme = async (theme) => {\n    try {\n      setSaving(true);\n      let newSettings = {...settings};\n      \n      \n      const saveThemeSetting = (key, value) => {\n        \n        localStorage.setItem(key, value);\n        \n        \n        sessionStorage.setItem(key, value);\n        \n        \n        try {\n          const expires = new Date();\n          expires.setTime(expires.getTime() + 365 * 24 * 60 * 60 * 1000);\n          document.cookie = `${key}=${value};expires=${expires.toUTCString()};path=/;SameSite=Lax`;\n        } catch (e) {\n          console.error('Error setting cookie:', e);\n        }\n        \n        \n        if (key === 'theme' || key === 'themeMode') {\n          document.documentElement.setAttribute('data-theme', value);\n        } else {\n          const cssKey = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n          document.documentElement.style.setProperty(`--${cssKey}`, value);\n        }\n      };\n      \n      \n      const themeData = {};\n      \n      \n      if (theme === 'dark') {\n        \n        newSettings = {\n          ...newSettings,\n          background_color: '#131313',\n          container_color: '#1c1c1c',\n          welcome_bubble_color: '#131313',\n          avatar_border_color: '#D0BCFF',\n          info_bubble_color: '#242526',\n          header_color: '#1c1c1c',\n          bottom_nav_color: '#1c1c1c',\n          content_color: '#1c1c1c',\n        };\n\n        \n        updateThemeSettings({ \n          mode: 'dark',\n          backgroundColor: '#131313',\n          paperColor: '#1c1c1c',\n          headerColor: '#1c1c1c',\n          bottomNavColor: '#1c1c1c',\n          contentColor: '#1c1c1c',\n          primaryColor: '#D0BCFF',\n          textColor: '#FFFFFF'\n        });\n\n        \n        saveThemeSetting('theme', 'dark');\n        saveThemeSetting('themeMode', 'dark');\n        saveThemeSetting('backgroundColor', '#131313');\n        saveThemeSetting('paperColor', '#1c1c1c');\n        saveThemeSetting('headerColor', '#1c1c1c');\n        saveThemeSetting('bottomNavColor', '#1c1c1c');\n        saveThemeSetting('contentColor', '#1c1c1c');\n        saveThemeSetting('primaryColor', '#D0BCFF');\n        saveThemeSetting('textColor', '#FFFFFF');\n        \n        \n        themeData.mode = 'dark';\n        themeData.theme = 'dark';\n        themeData.themeMode = 'dark';\n        themeData.backgroundColor = '#131313';\n        themeData.paperColor = '#1c1c1c';\n        themeData.headerColor = '#1c1c1c';\n        themeData.bottomNavColor = '#1c1c1c';\n        themeData.contentColor = '#1c1c1c';\n        themeData.primaryColor = '#D0BCFF';\n        themeData.textColor = '#FFFFFF';\n        \n      } else if (theme === 'light') {\n        \n        newSettings = {\n          ...newSettings,\n          background_color: '#f5f5f5',\n          container_color: '#ffffff',\n          welcome_bubble_color: '#f0f0f0',\n          avatar_border_color: '#8c52ff',\n          info_bubble_color: '#e0e0e0',\n          header_color: '#ffffff',\n          bottom_nav_color: '#ffffff',\n          content_color: '#ffffff',\n        };\n\n        \n        updateThemeSettings({ \n          mode: 'light',\n          backgroundColor: '#f5f5f5',\n          paperColor: '#ffffff',\n          headerColor: '#ffffff',\n          bottomNavColor: '#ffffff',\n          contentColor: '#ffffff',\n          primaryColor: '#8c52ff',\n          textColor: '#121212'\n        });\n        \n        \n        saveThemeSetting('theme', 'light');\n        saveThemeSetting('themeMode', 'light');\n        saveThemeSetting('backgroundColor', '#f5f5f5');\n        saveThemeSetting('paperColor', '#ffffff');\n        saveThemeSetting('headerColor', '#ffffff');\n        saveThemeSetting('bottomNavColor', '#ffffff');\n        saveThemeSetting('contentColor', '#ffffff');\n        saveThemeSetting('primaryColor', '#8c52ff');\n        saveThemeSetting('textColor', '#121212');\n        \n        \n        themeData.mode = 'light';\n        themeData.theme = 'light';\n        themeData.themeMode = 'light';\n        themeData.backgroundColor = '#f5f5f5';\n        themeData.paperColor = '#ffffff';\n        themeData.headerColor = '#ffffff';\n        themeData.bottomNavColor = '#ffffff';\n        themeData.contentColor = '#ffffff';\n        themeData.primaryColor = '#8c52ff';\n        themeData.textColor = '#121212';\n        \n      } else if (theme === 'contrast') {\n        \n        newSettings = {\n          ...newSettings,\n          background_color: '#080808', \n          container_color: '#101010', \n          welcome_bubble_color: '#0A0A0A',\n          avatar_border_color: '#7B46E3', \n          info_bubble_color: '#151515',\n          header_color: '#101010',\n          bottom_nav_color: '#101010',\n          content_color: '#101010',\n        };\n\n        \n        updateThemeSettings({ \n          mode: 'contrast',\n          backgroundColor: '#080808',\n          paperColor: '#101010',\n          headerColor: '#101010',\n          bottomNavColor: '#101010',\n          contentColor: '#101010',\n          primaryColor: '#7B46E3',\n          textColor: '#FFFFFF'\n        });\n        \n        \n        saveThemeSetting('theme', 'contrast');\n        saveThemeSetting('themeMode', 'contrast');\n        saveThemeSetting('backgroundColor', '#080808');\n        saveThemeSetting('paperColor', '#101010');\n        saveThemeSetting('headerColor', '#101010');\n        saveThemeSetting('bottomNavColor', '#101010');\n        saveThemeSetting('contentColor', '#101010');\n        saveThemeSetting('primaryColor', '#7B46E3');\n        saveThemeSetting('textColor', '#FFFFFF');\n        \n        \n        themeData.mode = 'contrast';\n        themeData.theme = 'contrast';\n        themeData.themeMode = 'contrast';\n        themeData.backgroundColor = '#080808';\n        themeData.paperColor = '#101010';\n        themeData.headerColor = '#101010';\n        themeData.bottomNavColor = '#101010';\n        themeData.contentColor = '#101010';\n        themeData.primaryColor = '#7B46E3';\n        themeData.textColor = '#FFFFFF';\n      }\n      \n      \n      try {\n        localStorage.setItem('themeData', JSON.stringify(themeData));\n        sessionStorage.setItem('themeData', JSON.stringify(themeData));\n      } catch (e) {\n        console.error('Error saving theme data JSON:', e);\n      }\n      \n      setSettings(newSettings);\n      \n      \n      const response = await ProfileService.updateSettings(newSettings);\n      \n      if (response.success) {\n        setSuccess(true);\n        showNotification('success', `Тема \"${theme}\" применена`);\n        \n        \n        window.dispatchEvent(new Event('storage'));\n      } else {\n        throw new Error('Failed to apply theme');\n      }\n      \n      setSaving(false);\n    } catch (error) {\n      console.error('Ошибка применения темы:', error);\n      showNotification('error', 'Ошибка применения темы');\n      setSaving(false);\n    }\n  };\n  \n  \n  const handleTogglePushNotifications = async () => {\n    try {\n      setSavingNotificationPrefs(true);\n      \n      \n      if (!pushNotificationSupported) {\n        console.error('Push-уведомления не поддерживаются в этом браузере');\n        showNotification('error', 'Ваш браузер не поддерживает push-уведомления');\n        setSavingNotificationPrefs(false);\n        return;\n      }\n      \n      const newPushEnabled = !notificationPrefs.pushNotificationsEnabled;\n      console.log('Переключение push-уведомлений на:', newPushEnabled);\n      \n      try {\n        if (newPushEnabled) {\n          \n          if (window.PushNotifications) {\n            console.log('Инициализация push-уведомлений...');\n            const success = await window.PushNotifications.initialize();\n            if (!success) {\n              console.error('Не удалось инициализировать push-уведомления');\n              showNotification('error', 'Не удалось включить push-уведомления. Возможно, вы отклонили разрешение.');\n              setSavingNotificationPrefs(false);\n              return;\n            }\n            console.log('Push-уведомления успешно инициализированы');\n            setPushSubscriptionStatus(true);\n          } else {\n            console.error('window.PushNotifications не найден');\n            showNotification('error', 'Модуль push-уведомлений не загружен');\n            setSavingNotificationPrefs(false);\n            return;\n          }\n        } else {\n          \n          if (window.PushNotifications && pushSubscriptionStatus) {\n            console.log('Отписка от push-уведомлений...');\n            const registration = await navigator.serviceWorker.ready;\n            const success = await window.PushNotifications.unsubscribe(registration);\n            if (success) {\n              console.log('Успешная отписка от push-уведомлений');\n              setPushSubscriptionStatus(false);\n            } else {\n              console.error('Не удалось отписаться от push-уведомлений');\n            }\n          }\n        }\n        \n        \n        console.log('Отправка настроек на сервер...');\n        const response = await axios.post('/api/notifications/preferences', {\n          push_notifications_enabled: newPushEnabled,\n          telegram_notifications_enabled: notificationPrefs.telegramNotificationsEnabled\n        });\n        \n        console.log('Ответ сервера при изменении настроек push-уведомлений:', response.data);\n        \n        if (response.data && response.data.success) {\n          setNotificationPrefs({\n            ...notificationPrefs,\n            pushNotificationsEnabled: newPushEnabled\n          });\n          \n          showNotification('success', newPushEnabled ? \n            'Push-уведомления включены' : \n            'Push-уведомления отключены');\n        } else {\n          throw new Error(response.data?.error || response.data?.message || 'Ошибка сохранения настроек');\n        }\n      } catch (apiError) {\n        console.error('Ошибка API при переключении push-уведомлений:', apiError);\n        showNotification('error', apiError.message || 'Не удалось изменить настройки push-уведомлений');\n      }\n      \n      setSavingNotificationPrefs(false);\n    } catch (error) {\n      console.error('Ошибка при переключении push-уведомлений:', error);\n      showNotification('error', error.message || 'Не удалось изменить настройки push-уведомлений');\n      setSavingNotificationPrefs(false);\n    }\n  };\n  \n  \n  const handleToggleTelegramNotifications = async () => {\n    try {\n      setSavingNotificationPrefs(true);\n      \n      \n      if (!notificationPrefs.telegramConnected) {\n        console.error('Telegram не подключен, невозможно включить Telegram-уведомления');\n        showNotification('warning', 'Для получения уведомлений сначала подключите Telegram в профиле');\n        setSavingNotificationPrefs(false);\n        return;\n      }\n      \n      const newTelegramEnabled = !notificationPrefs.telegramNotificationsEnabled;\n      console.log('Переключение Telegram уведомлений на:', newTelegramEnabled);\n      \n      try {\n        \n        const response = await axios.post('/api/notifications/preferences', {\n          push_notifications_enabled: notificationPrefs.pushNotificationsEnabled,\n          telegram_notifications_enabled: newTelegramEnabled\n        });\n        \n        console.log('Ответ сервера при изменении настроек Telegram-уведомлений:', response.data);\n        \n        if (response.data && response.data.success) {\n          setNotificationPrefs({\n            ...notificationPrefs,\n            telegramNotificationsEnabled: newTelegramEnabled\n          });\n          \n          showNotification('success', newTelegramEnabled ? \n            'Telegram-уведомления включены' : \n            'Telegram-уведомления отключены');\n        } else {\n          throw new Error(response.data?.error || response.data?.message || 'Ошибка сохранения настроек');\n        }\n      } catch (apiError) {\n        console.error('Ошибка API при переключении Telegram-уведомлений:', apiError);\n        showNotification('error', apiError.message || 'Не удалось изменить настройки Telegram-уведомлений');\n      }\n      \n      setSavingNotificationPrefs(false);\n    } catch (error) {\n      console.error('Ошибка при переключении Telegram-уведомлений:', error);\n      showNotification('error', error.message || 'Не удалось изменить настройки Telegram-уведомлений');\n      setSavingNotificationPrefs(false);\n    }\n  };\n  \n  \n  const handleSaveTelegramId = async () => {\n    try {\n      \n      setTelegramIdError('');\n      setSavingTelegramId(true);\n      \n      \n      if (!telegramIdInput.trim()) {\n        setTelegramIdError('Telegram ID не может быть пустым');\n        setSavingTelegramId(false);\n        return;\n      }\n      \n      \n      if (!/^\\d+$/.test(telegramIdInput.trim())) {\n        setTelegramIdError('Telegram ID должен быть числом');\n        setSavingTelegramId(false);\n        return;\n      }\n      \n      \n      const response = await axios.post('/api/profile/telegram-connect', {\n        telegram_id: telegramIdInput.trim()\n      });\n      \n      if (response.data && response.data.success) {\n        \n        setNotificationPrefs({\n          ...notificationPrefs,\n          telegramConnected: true\n        });\n        \n        \n        showNotification('success', 'Telegram аккаунт успешно привязан');\n        \n        \n        setTelegramDialogOpen(false);\n        setTelegramIdInput('');\n      } else {\n        throw new Error(response.data?.error || 'Не удалось привязать Telegram ID');\n      }\n      \n      setSavingTelegramId(false);\n    } catch (error) {\n      console.error('Ошибка при привязке Telegram ID:', error);\n      setTelegramIdError(error.response?.data?.error || error.message || 'Произошла ошибка при привязке Telegram ID');\n      setSavingTelegramId(false);\n    }\n  };\n  \n  \n  const checkElementStatus = async () => {\n    try {\n      \n      if (!loadingElementStatus && elementConnected !== null) {\n        return elementConnected;\n      }\n      \n      setLoadingElementStatus(true);\n      const response = await axios.get('/api/profile/element/status');\n      \n      const isConnected = response.data && response.data.connected;\n      if (isConnected) {\n        setElementConnected(true);\n      } else {\n        setElementConnected(false);\n      }\n      setLoadingElementStatus(false);\n      return isConnected;\n    } catch (error) {\n      console.error('Ошибка при проверке статуса Element:', error);\n      setElementConnected(false);\n      setLoadingElementStatus(false);\n      return false;\n    }\n  };\n  \n  \n  const generateElementToken = async () => {\n    try {\n      setElementLinking(true);\n      \n      \n      const randomToken = Math.random().toString(36).substring(2, 15) + \n                          Math.random().toString(36).substring(2, 15);\n      \n      setElementToken(randomToken);\n      showNotification('info', 'Перейдите по ссылке, чтобы привязать Element аккаунт');\n      \n    } catch (error) {\n      console.error('Ошибка при генерации токена Element:', error);\n      showNotification('error', 'Не удалось сгенерировать токен для Element');\n      setElementLinking(false);\n    }\n  };\n  \n  \n  const handleLinkElement = () => {\n    generateElementToken();\n    \n    \n    const checkInterval = setInterval(() => {\n      checkElementStatus().then(isConnected => {\n        if (isConnected) {\n          \n          clearInterval(checkInterval);\n          setElementLinking(false);\n          setElementToken('');\n          showNotification('success', 'Element аккаунт успешно подключен!');\n        }\n      });\n    }, 2000); \n    \n    \n    localStorage.setItem('element_auth_pending', 'true');\n    \n    \n    setTimeout(() => {\n      clearInterval(checkInterval);\n      localStorage.removeItem('element_auth_pending');\n    }, 120000);\n  };\n  \n  \n  const handleCancelElementLinking = () => {\n    setElementToken('');\n    setElementLinking(false);\n    \n    localStorage.removeItem('element_auth_pending');\n  };\n  \n  \n  const handleClearActiveBadge = async () => {\n    try {\n      setUpdatingActiveBadge(true);\n      const response = await axios.post('/api/profile/achievements/deactivate');\n      \n      if (response.data && response.data.success) {\n        \n        fetchUserAchievements();\n        fetchPurchasedBadges();\n        showNotification('success', 'Активный бейдж удален');\n      }\n      \n      setUpdatingActiveBadge(false);\n    } catch (error) {\n      console.error('Ошибка удаления активного бейджа:', error);\n      showNotification('error', 'Не удалось удалить активный бейдж');\n      setUpdatingActiveBadge(false);\n    }\n  };\n  \n  \n  const handleStatusUpdate = (statusData) => {\n    \n    setProfileData(prevData => ({\n      ...prevData,\n      status_text: statusData.status_text,\n      status_color: statusData.status_color\n    }));\n  };\n  \n  \n  const fetchUserWarnings = async () => {\n    try {\n      setLoadingWarnings(true);\n      const response = await axios.get('/api/user/warnings');\n      \n      if (response.data.success) {\n        setUserWarnings(response.data.warnings || []);\n        setAccountStatus(response.data.account_status || 'good');\n        setBanInfo(response.data.ban_info);\n      } else {\n        console.error('Error fetching user warnings:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching user warnings:', error);\n    } finally {\n      setLoadingWarnings(false);\n    }\n  };\n  \n  \n  const formatWarningDate = (dateString) => {\n    if (!dateString) return 'Неизвестно';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleString('ru-RU', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch (e) {\n      return dateString;\n    }\n  };\n  \n  const openWarningsDialog = () => {\n    fetchUserWarnings();\n    setWarningsDialogOpen(true);\n  };\n  \n  \n  const StatusSettings = ({ profileData, subscription, onStatusUpdate }) => {\n    const theme = useTheme();\n    const [statusText, setStatusText] = useState('');\n    const [statusColor, setStatusColor] = useState('#D0BCFF');\n    const [hasError, setHasError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [isSaving, setIsSaving] = useState(false);\n    const [isPremium, setIsPremium] = useState(false);\n    const [isUltimate, setIsUltimate] = useState(false);\n    const [initialLoaded, setInitialLoaded] = useState(false);\n    const [selectedIcon, setSelectedIcon] = useState(null);\n    const [customColorOpen, setCustomColorOpen] = useState(false);\n    const maxLength = 50;\n    const { user } = useContext(AuthContext);\n    const isChannel = user?.account_type === 'channel';\n  \n    \n    const presetColors = [\n      '#D0BCFF', \n      '#90CAF9', \n      '#A5D6A7', \n      '#FFCC80', \n      '#EF9A9A', \n      '#CE93D8', \n      '#FFF59D', \n      '#B0BEC5', \n      '#F48FB1', \n      '#81D4FA'  \n    ];\n    \n    \n    const availableIcons = [\n      { name: 'cloud', component: <CloudIcon sx={{ fontSize: 24 }} /> },\n      { name: 'minion', component: (\n        <SvgIcon sx={{ fontSize: 24 }}>\n          <svg width=\"800\" height=\"800\" viewBox=\"0 0 800 800\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M402.667 518C367.33 518 332.786 507.523 303.405 487.89C274.023 468.257 251.123 440.353 237.6 407.707C224.077 375.06 220.539 339.137 227.433 304.478C234.327 269.82 251.343 237.984 276.33 212.997C301.317 188.01 333.153 170.994 367.81 164.1C402.47 157.206 438.393 160.744 471.04 174.267C503.687 187.79 531.59 210.69 551.223 240.072C570.853 269.453 581.333 303.997 581.333 339.333C581.333 362.797 576.713 386.03 567.733 407.707C558.753 429.383 545.593 449.08 529.003 465.67C512.413 482.26 492.717 495.42 471.04 504.4C449.363 513.38 426.13 518 402.667 518ZM402.667 210.667C377.22 210.667 352.343 218.213 331.183 232.351C310.024 246.489 293.533 266.584 283.794 290.095C274.056 313.606 271.508 339.477 276.472 364.437C281.437 389.393 293.691 412.32 311.686 430.313C329.68 448.31 352.607 460.563 377.567 465.527C402.523 470.493 428.393 467.943 451.907 458.207C475.417 448.467 495.51 431.977 509.65 410.817C523.787 389.657 531.333 364.78 531.333 339.333C531.333 305.209 517.777 272.482 493.647 248.353C469.517 224.223 436.79 210.667 402.667 210.667Z\" fill=\"currentColor\"/>\n          <path d=\"M400 643.667C376.53 643.72 353.28 639.123 331.597 630.14C309.913 621.157 290.224 607.97 273.667 591.333C269.251 586.593 266.847 580.327 266.961 573.85C267.075 567.373 269.699 561.193 274.28 556.613C278.86 552.033 285.04 549.407 291.516 549.293C297.993 549.18 304.261 551.583 309 556C333.693 579.057 366.216 591.88 400 591.88C433.783 591.88 466.31 579.057 491 556C495.74 551.583 502.006 549.18 508.483 549.293C514.96 549.407 521.14 552.033 525.72 556.613C530.303 561.193 532.926 567.373 533.04 573.85C533.153 580.327 530.75 586.593 526.333 591.333C509.776 607.97 490.086 621.157 468.403 630.14C446.72 639.123 423.47 643.72 400 643.667Z\" fill=\"currentColor\"/>\n          <path d=\"M402.667 400C436.173 400 463.333 372.837 463.333 339.333C463.333 305.828 436.173 278.666 402.667 278.666C369.163 278.666 342 305.828 342 339.333C342 372.837 369.163 400 402.667 400Z\" fill=\"currentColor\"/>\n          <path d=\"M666.666 755.333C660.036 755.333 653.676 752.7 648.99 748.01C644.3 743.323 641.666 736.963 641.666 730.333V333.333C637.156 272.944 609.983 216.492 565.596 175.297C521.21 134.102 462.89 111.209 402.333 111.209C341.776 111.209 283.457 134.102 239.07 175.297C194.684 216.492 167.511 272.944 163 333.333V730.333C163 736.963 160.366 743.323 155.678 748.01C150.989 752.7 144.631 755.333 138 755.333C131.37 755.333 125.011 752.7 120.322 748.01C115.634 743.323 113 736.963 113 730.333V333.333C115.55 258.166 147.202 186.929 201.278 134.656C255.354 82.3832 327.623 53.1636 402.833 53.1636C478.043 53.1636 550.313 82.3832 604.39 134.656C658.466 186.929 690.116 258.166 692.666 333.333V730.333C692.623 733.69 691.913 737.003 690.58 740.08C689.246 743.16 687.313 745.943 684.893 748.27C682.476 750.597 679.62 752.417 676.49 753.63C673.36 754.843 670.023 755.423 666.666 755.333Z\" fill=\"currentColor\"/>\n          <path d=\"M666.666 755.333H138C131.37 755.333 125.011 752.7 120.322 748.01C115.634 743.323 113 736.963 113 730.333C113 723.703 115.634 717.343 120.322 712.657C125.011 707.967 131.37 705.333 138 705.333H666.666C673.296 705.333 679.656 707.967 684.343 712.657C689.033 717.343 691.666 723.703 691.666 730.333C691.666 736.963 689.033 743.323 684.343 748.01C679.656 752.7 673.296 755.333 666.666 755.333Z\" fill=\"currentColor\"/>\n          </svg>\n        </SvgIcon>\n      ) },\n      { name: 'heart', component: (\n        <SvgIcon sx={{ fontSize: 24 }}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12,21.35l-1.45-1.32C5.4,15.36,2,12.28,2,8.5C2,5.42,4.42,3,7.5,3c1.74,0,3.41,0.81,4.5,2.09C13.09,3.81,14.76,3,16.5,3 C19.58,3,22,5.42,22,8.5c0,3.78-3.4,6.86-8.55,11.54L12,21.35z\"/>\n          </svg>\n        </SvgIcon>\n      ) },\n      { name: 'star', component: (\n        <SvgIcon sx={{ fontSize: 24 }}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12,17.27L18.18,21l-1.64-7.03L22,9.24l-7.19-0.61L12,2L9.19,8.63L2,9.24l5.46,4.73L5.82,21L12,17.27z\"/>\n          </svg>\n        </SvgIcon>\n      ) },\n      { name: 'music', component: <MusicNoteIcon sx={{ fontSize: 24 }} /> },\n      { name: 'location', component: <LocationOnIcon sx={{ fontSize: 24 }} /> },\n      { name: 'cake', component: <CakeIcon sx={{ fontSize: 24 }} /> },\n      { name: 'chat', component: <ChatIcon sx={{ fontSize: 24 }} /> },\n      { name: 'info', component: <InfoIcon sx={{ fontSize: 24 }} /> },\n    ];\n  \n    \n    useEffect(() => {\n      if (profileData) {\n        if (isChannel && profileData.user && profileData.user.main_account_id) {\n          const hasValidSubscription = \n            (subscription && \n              (subscription.type === 'premium' || \n              subscription.type === 'ultimate' || \n              subscription.type === 'pick-me') && \n              subscription.active) ||\n            (profileData.main_account_subscription && \n              (profileData.main_account_subscription.type === 'premium' || \n              profileData.main_account_subscription.type === 'ultimate' || \n              profileData.main_account_subscription.type === 'pick-me') && \n              profileData.main_account_subscription.active);\n          \n          setIsPremium(hasValidSubscription);\n          \n          const hasUltimateSubscription = \n            (subscription && \n              subscription.type === 'ultimate' && \n              subscription.active) ||\n            (profileData.main_account_subscription && \n              profileData.main_account_subscription.type === 'ultimate' && \n              profileData.main_account_subscription.active);\n          \n          setIsUltimate(hasUltimateSubscription);\n        } else {\n          setIsPremium(subscription && \n            (subscription.type === 'premium' || \n             subscription.type === 'ultimate' || \n             subscription.type === 'pick-me') && \n            subscription.active);\n          \n          setIsUltimate(subscription && \n            subscription.type === 'ultimate' && \n            subscription.active);\n        }\n        \n        \n        const statusTextToUse = profileData.user?.status_text || profileData.status_text;\n        if (statusTextToUse) {\n          const parsedStatus = parseStatusText(statusTextToUse);\n          setStatusText(parsedStatus.text);\n          setSelectedIcon(parsedStatus.iconName);\n          console.log(\"Loaded status text:\", parsedStatus.text, \"icon:\", parsedStatus.iconName);\n        }\n        \n        \n        const statusColorToUse = profileData.user?.status_color || profileData.status_color;\n        if (statusColorToUse) {\n          setStatusColor(statusColorToUse);\n          console.log(\"Loaded status color:\", statusColorToUse);\n        }\n        \n        setInitialLoaded(true);\n      }\n    }, [profileData, subscription, isChannel]);\n    \n    \n    const parseStatusText = (text) => {\n      \n      const iconTagRegex = /\\{(\\w+)\\}/;\n      const match = text.match(iconTagRegex);\n      \n      \n      const result = {\n        text: text,\n        iconName: null\n      };\n      \n      if (match) {\n        \n        result.iconName = match[1].toLowerCase();\n        \n        result.text = text.replace(iconTagRegex, '').trim();\n      }\n      \n      return result;\n    };\n\n    const handleStatusTextChange = (e) => {\n      const value = e.target.value;\n      \n      if (value.length <= maxLength) {\n        setStatusText(value);\n        setHasError(false);\n        setErrorMessage('');\n      }\n    };\n\n    const handlePresetColorClick = (color) => {\n      if (!color || color.trim() === '') {\n        setStatusColor('#D0BCFF');\n        return;\n      }\n      setStatusColor(color);\n    };\n    \n    const handleIconSelect = (iconName) => {\n      setSelectedIcon(iconName === selectedIcon ? null : iconName);\n    };\n    \n    \n    const getFullStatusText = () => {\n      return selectedIcon ? `{${selectedIcon}} ${statusText}` : statusText;\n    };\n\n    const getContrastTextColor = (hexColor) => {\n      \n      const r = parseInt(hexColor.substr(1, 2), 16);\n      const g = parseInt(hexColor.substr(3, 2), 16);\n      const b = parseInt(hexColor.substr(5, 2), 16);\n      \n      \n      const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n      \n      \n      return brightness > 128 ? '#000000' : '#FFFFFF';\n    };\n\n    const saveStatus = async () => {\n      if (!isPremium) {\n        setHasError(true);\n        if (isChannel) {\n          setErrorMessage('Для установки статуса необходимо, чтобы основной аккаунт имел подписку Premium, Ultimate или Pick-me!');\n        } else {\n          setErrorMessage('Для установки статуса необходима подписка Premium, Ultimate или Pick-me!');\n        }\n        return;\n      }\n  \n      setIsSaving(true);\n      \n      try {\n        const response = await fetch('/api/profile/v2update-profilestatus', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            status_text: getFullStatusText(),\n            status_color: statusColor,\n            is_channel: isChannel\n          }),\n        });\n        \n        const data = await response.json();\n        \n        if (response.ok) {\n          setHasError(false);\n          setErrorMessage('');\n          \n          \n          showNotification('success', 'Статус успешно обновлен');\n          \n          \n          if (onStatusUpdate) {\n            onStatusUpdate({\n              status_text: getFullStatusText(),\n              status_color: statusColor\n            });\n          }\n        } else {\n          setHasError(true);\n          setErrorMessage(data.error || 'Ошибка при обновлении статуса');\n          showNotification('error', 'Ошибка при обновлении статуса');\n        }\n      } catch (error) {\n        console.error('Ошибка при обновлении статуса:', error);\n        setHasError(true);\n        setErrorMessage('Ошибка соединения. Попробуйте позже.');\n        showNotification('error', 'Ошибка соединения. Попробуйте позже.');\n      } finally {\n        setIsSaving(false);\n      }\n    };\n  \n    \n    const StatusPreview = () => {\n      \n      const createGradientColor = (hexColor) => {\n        \n        let r = parseInt(hexColor.substr(1, 2), 16);\n        let g = parseInt(hexColor.substr(3, 2), 16);\n        let b = parseInt(hexColor.substr(5, 2), 16);\n        \n        \n        const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n        \n        \n        if (brightness < 128) {\n          \n          r = Math.min(255, r + 30);\n          g = Math.min(255, g + 30);\n          b = Math.min(255, b + 30);\n        } else {\n          \n          r = Math.max(0, r - 30);\n          g = Math.max(0, g - 30);\n          b = Math.max(0, b - 30);\n        }\n        \n        \n        return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n      };\n\n      \n      const gradientColor = createGradientColor(statusColor || '#D0BCFF');\n      const textColor = getContrastTextColor(statusColor || '#D0BCFF');\n      \n      \n      const getIconByName = (iconName) => {\n        const icon = availableIcons.find(icon => icon.name === iconName);\n        return icon ? icon.component : availableIcons[0].component; \n      };\n\n      return (\n        <Box sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          background: alpha(theme.palette.background.paper, 0.5),\n          borderRadius: 2,\n          padding: 2,\n          marginBottom: 2,\n          position: 'relative'\n        }}>\n          <Avatar sx={{ width: 50, height: 50, marginRight: 3 }}>\n            <PersonIcon />\n          </Avatar>\n          \n          {statusText || selectedIcon ? (\n            <Box sx={{ \n              position: 'relative',\n              ml: 1,\n            }}>\n              <Box sx={{\n                position: 'relative',\n                filter: `drop-shadow(0 4px 8px rgba(0,0,0,0.2))`,\n                '&:before': {\n                  content: '\"\"',\n                  position: 'absolute',\n                  top: '40%',\n                  left: -14,\n                  width: 0,\n                  height: 0,\n                  borderStyle: 'solid',\n                  borderWidth: '0 14px 14px 0',\n                  borderColor: `transparent ${statusColor || '#D0BCFF'} transparent transparent`,\n                  transform: 'rotate(40deg)',\n                  filter: 'drop-shadow(-3px 2px 2px rgba(0,0,0,0.1))',\n                  zIndex: 0\n                }\n              }}>\n                <Box sx={{\n                  background: `linear-gradient(135deg, ${statusColor || '#D0BCFF'} 0%, ${gradientColor} 100%)`,\n                  color: textColor,\n                  padding: '8px 12px',\n                  borderRadius: '18px',\n                  fontSize: '14px',\n                  fontWeight: 500,\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  boxShadow: `inset 0 0 10px rgba(255,255,255,0.15), \n                             0 1px 1px rgba(0,0,0,0.1),\n                             0 4px 10px rgba(0,0,0,0.15)`,\n                  backdropFilter: 'blur(4px)',\n                  border: `1px solid ${statusColor === '#ffffff' ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.2)'}`,\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '6px',\n                  maxWidth: '200px'\n                }}>\n                  {selectedIcon ? getIconByName(selectedIcon) : <ChatIcon sx={{ fontSize: 16, opacity: 0.7 }} />}\n                  {statusText}\n                </Box>\n              </Box>\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Здесь будет отображаться ваш статус\n            </Typography>\n          )}\n        </Box>\n      );\n    };\n  \n    return (\n      <Box sx={{ mt: 4 }}>\n        <SectionTitle variant=\"h6\">\n          <ChatIcon /> \n          Статус профиля\n          {!isPremium && (\n            <Chip\n              label=\"Premium\"\n              size=\"small\"\n              color=\"secondary\"\n              sx={{ ml: 1 }}\n            />\n          )}\n        </SectionTitle>\n        \n        {!initialLoaded ? (\n          <CircularProgress />\n        ) : (\n          <>\n            {!isPremium ? (\n              <Alert \n                severity=\"info\" \n                variant=\"filled\"\n                sx={{ \n                  mb: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  '& .MuiAlert-icon': {\n                    fontSize: '1.5rem'\n                  }\n                }}\n              >\n                <AlertTitle>Функция доступна только для Premium-подписки</AlertTitle>\n                Статус профиля доступен только пользователям с подписками <strong>Premium</strong>, <strong>Ultimate</strong> или <strong>Pick-me</strong>. Оформите подписку, чтобы установить свой уникальный статус и выделиться среди других пользователей.\n              </Alert>\n            ) : (\n              <>\n                <StatusPreview />\n                \n                <Box sx={{ mb: 3 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Выберите иконку для статуса\n                  </Typography>\n                  <Box\n                    sx={{\n                      display: 'grid',\n                      gridTemplateColumns: 'repeat(auto-fill, minmax(60px, 1fr))',\n                      gap: 1,\n                      mt: 1,\n                    }}\n                  >\n                    {availableIcons.map((icon) => (\n                      <IconButton\n                        key={icon.name}\n                        onClick={() => handleIconSelect(icon.name)}\n                        sx={{\n                          borderRadius: 2,\n                          padding: 1,\n                          bgcolor: selectedIcon === icon.name ? alpha(theme.palette.primary.main, 0.2) : 'transparent',\n                          color: selectedIcon === icon.name ? theme.palette.primary.main : 'inherit',\n                          border: selectedIcon === icon.name ? `1px solid ${theme.palette.primary.main}` : '1px solid rgba(255,255,255,0.1)',\n                          '&:hover': {\n                            bgcolor: alpha(theme.palette.primary.main, 0.1),\n                          },\n                        }}\n                      >\n                        {icon.component}\n                      </IconButton>\n                    ))}\n                  </Box>\n                </Box>\n                \n                <TextField\n                  label=\"Текст статуса\"\n                  value={statusText}\n                  onChange={handleStatusTextChange}\n                  fullWidth\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  helperText={`${statusText.length}/${maxLength} символов`}\n                  error={hasError}\n                  FormHelperTextProps={{\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                    },\n                  }}\n                  InputProps={{\n                    startAdornment: selectedIcon && (\n                      <InputAdornment position=\"start\">\n                        {availableIcons.find(icon => icon.name === selectedIcon)?.component}\n                      </InputAdornment>\n                    ),\n                  }}\n                  sx={{ mb: 2 }}\n                />\n                \n                {hasError && (\n                  <Typography color=\"error\" variant=\"body2\" sx={{ mb: 2 }}>\n                    {errorMessage}\n                  </Typography>\n                )}\n                \n                <Typography variant=\"subtitle2\" sx={{ mt: 2, mb: 1 }}>\n                  Цвет статуса\n                </Typography>\n                \n                <Box \n                  sx={{ \n                    display: 'flex', \n                    flexWrap: 'wrap', \n                    gap: 1, \n                    mb: 2,\n                    mt: 1,\n                    alignItems: 'center' \n                  }}\n                >\n                  {presetColors.map(color => (\n                    <Box\n                      key={color}\n                      onClick={() => handlePresetColorClick(color)}\n                      sx={{\n                        width: 36,\n                        height: 36,\n                        borderRadius: '50%',\n                        bgcolor: color,\n                        cursor: 'pointer',\n                        transition: 'all 0.2s ease',\n                        transform: statusColor === color ? 'scale(1.2)' : 'scale(1)',\n                        border: statusColor === color ? `2px solid white` : '2px solid transparent',\n                        boxShadow: statusColor === color ? \n                          `0 0 0 2px ${theme.palette.primary.main}, 0 0 10px rgba(0,0,0,0.2)` : \n                          'none',\n                        '&:hover': {\n                          transform: 'scale(1.1)',\n                          boxShadow: '0 0 10px rgba(0,0,0,0.2)'\n                        },\n                      }}\n                    />\n                  ))}\n                  \n                  {isUltimate && (\n                    <Button \n                      variant=\"outlined\" \n                      onClick={() => setCustomColorOpen(true)}\n                      startIcon={<ColorizeIcon />}\n                      sx={{ \n                        ml: 1,\n                        borderColor: alpha(theme.palette.primary.main, 0.5),\n                        '&:hover': {\n                          borderColor: theme.palette.primary.main,\n                          bgcolor: alpha(theme.palette.primary.main, 0.08)\n                        }\n                      }}\n                    >\n                      Выбрать цвет с палитры\n                    </Button>\n                  )}\n                </Box>\n                \n                {isUltimate && (\n                  <Dialog \n                    open={customColorOpen} \n                    onClose={() => setCustomColorOpen(false)}\n                    maxWidth=\"sm\"\n                    PaperProps={{\n                      sx: { \n                        bgcolor: theme.palette.background.paper, \n                        color: theme.palette.text.primary,\n                        borderRadius: 2,\n                        boxShadow: theme.shadows[24],\n                        '@media (max-width: 600px)': {\n                          width: '100%',\n                          maxWidth: '100%',\n                          margin: 0,\n                          borderRadius: 0,\n                        }\n                      }\n                    }}\n                  >\n                    <DialogTitle sx={{ \n                      display: 'flex', \n                      alignItems: 'center', \n                      justifyContent: 'space-between',\n                      borderBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n                      pb: 2\n                    }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <PaletteIcon fontSize=\"small\" color=\"primary\" />\n                        <Typography variant=\"h6\">Выберите любой цвет</Typography>\n                        <Chip \n                          label=\"Ultimate\" \n                          size=\"small\" \n                          color=\"secondary\" \n                        />\n                      </Box>\n                      <IconButton size=\"small\" onClick={() => setCustomColorOpen(false)} color=\"inherit\">\n                        <CloseIcon fontSize=\"small\" />\n                      </IconButton>\n                    </DialogTitle>\n                    \n                    <DialogContent sx={{ pt: 3 }}>\n                      <Box sx={{ \n                        height: 100, \n                        width: '100%', \n                        backgroundColor: statusColor, \n                        borderRadius: 2, \n                        mb: 3,\n                        boxShadow: `0 4px 20px ${alpha(statusColor, 0.5)}`,\n                        border: `1px solid ${alpha(theme.palette.divider, 0.1)}`\n                      }} />\n                      \n                      <input \n                        type=\"color\" \n                        value={statusColor}\n                        onChange={(e) => handlePresetColorClick(e.target.value)}\n                        style={{ \n                          width: '100%', \n                          height: 60,\n                          border: 'none',\n                          borderRadius: 8,\n                          cursor: 'pointer',\n                          background: 'none'\n                        }}\n                      />\n                      \n                      <TextField\n                        label=\"HEX код\"\n                        value={statusColor}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (value === '' || /^#([0-9A-F]{3}){1,2}$/i.test(value)) {\n                            handlePresetColorClick(value || '#D0BCFF');\n                          }\n                        }}\n                        fullWidth\n                        margin=\"normal\"\n                        placeholder=\"#RRGGBB\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Box sx={{ height: 16, width: 16, backgroundColor: statusColor, borderRadius: 1 }} />\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n\n                      <Typography variant=\"subtitle2\" sx={{ mt: 3, mb: 1 }}>\n                        Предустановленные цвета\n                      </Typography>\n                      \n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                        {[\n                          '#000000', '#FFFFFF', '#F44336', '#E91E63', '#9C27B0', '#673AB7',\n                          '#3F51B5', '#2196F3', '#03A9F4', '#00BCD4', '#009688', '#4CAF50',\n                          '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800', '#FF5722'\n                        ].map((presetColor) => (\n                          <Box\n                            key={presetColor}\n                            onClick={() => handlePresetColorClick(presetColor)}\n                            sx={{\n                              height: 32,\n                              width: 32,\n                              backgroundColor: presetColor,\n                              borderRadius: 1,\n                              cursor: 'pointer',\n                              border: '1px solid rgba(255, 255, 255, 0.2)',\n                              transform: statusColor === presetColor ? 'scale(1.1)' : 'scale(1)',\n                              transition: 'all 0.2s ease',\n                              '&:hover': {\n                                transform: 'scale(1.1)',\n                                boxShadow: '0 0 10px rgba(0,0,0,0.2)'\n                              },\n                            }}\n                          />\n                        ))}\n                      </Box>\n                    </DialogContent>\n                    \n                    <DialogActions sx={{ p: 2, pt: 1 }}>\n                      <Button onClick={() => setCustomColorOpen(false)} color=\"primary\" variant=\"contained\">\n                        Выбрать\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                )}\n                \n                <Box \n                  sx={{ \n                    mt: 1,\n                    mb: 2,\n                    p: 2,\n                    borderRadius: 2,\n                    bgcolor: alpha(theme.palette.primary.main, 0.1),\n                    border: '1px solid',\n                    borderColor: isUltimate ? theme.palette.primary.main : alpha(theme.palette.primary.main, 0.2),\n                  }}\n                >\n                  <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', color: theme.palette.primary.light }}>\n                    <InfoIcon fontSize=\"small\" sx={{ mr: 1 }} />\n                    {isUltimate ? \n                      'С подпиской Ultimate вы можете выбрать любой цвет для вашего профиля!' : \n                      'Оформите подписку Ultimate, чтобы выбрать любой цвет для вашего профиля!'}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={saveStatus}\n                  disabled={isSaving}\n                  startIcon={isSaving ? <CircularProgress size={20} /> : <CheckIcon />}\n                  fullWidth\n                  sx={{ mt: 1, width: 'auto'}}\n                >\n                  {isSaving ? 'Сохранение...' : 'Сохранить статус'}\n                </Button>\n                </Box>\n              </>\n            )}\n          </>\n        )}\n      </Box>\n    );\n  };\n  \n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  const handleDeleteChannelSuccess = (data) => {\n    showNotification('success', 'Канал успешно удален');\n    // После удаления канала перенаправляем на главную страницу\n    window.location.href = '/';\n  };\n  \n  const handleDeleteAvatar = async () => {\n    try {\n      const response = await axios.post('/api/profile/delete-avatar');\n      if (response.data.success) {\n        setAvatarPreview('');\n        setAvatarFile(null);\n        showNotification('success', 'Аватар успешно удален');\n        if (updateUserData) {\n          updateUserData({\n            ...user,\n            photo: null\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting avatar:', error);\n      showNotification('error', error.response?.data?.error || 'Ошибка при удалении аватара');\n    }\n  };\n  \n  const handleDeleteBanner = async () => {\n    try {\n      const response = await axios.post('/api/profile/delete-banner');\n      if (response.data.success) {\n        setBannerPreview('');\n        setBannerFile(null);\n        showNotification('success', 'Баннер успешно удален');\n        if (updateUserData) {\n          updateUserData({\n            ...user,\n            banner: null\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting banner:', error);\n      showNotification('error', error.response?.data?.error || 'Ошибка при удалении баннера');\n    }\n  };\n  \n\n\n\n  const handleToggleDecoration = async (decorationId, isActive) => {\n    try {\n      const response = await fetch('/api/decorations/toggle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          decoration_id: decorationId,\n          is_active: isActive\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to toggle decoration');\n      \n      // Обновляем список декораций\n      fetchUserDecorations();\n    } catch (error) {\n      console.error('Error toggling decoration:', error);\n    }\n  };\n\n  const renderDecorationSettings = () => {\n    if (loadingDecorations) {\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    if (userDecorations.length === 0) {\n      return (\n        <Typography color=\"textSecondary\">\n          У вас пока нет декораций\n        </Typography>\n      );\n    }\n\n    return userDecorations.map(item => {\n      const decoration = item.decoration;\n      return (\n        <Paper\n          key={decoration.id}\n          sx={{\n            p: 2,\n            mb: 2,\n            backgroundColor: 'background.paper',\n            borderRadius: 2\n          }}\n        >\n          <DecorationPreview decoration={decoration}>\n            {decoration.item_path && (() => {\n              const [path, ...styles] = decoration.item_path.split(';');\n              const styleObj = styles.reduce((acc, style) => {\n                const [key, value] = style.split(':').map(s => s.trim());\n                return { ...acc, [key]: value };\n              }, {});\n              \n              return (\n                <DecorationItem\n                  src={path}\n                  alt=\"\"\n                  customStyles={styleObj}\n                />\n              );\n            })()}\n          </DecorationPreview>\n          <Box sx={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center',\n            mt: 1 \n          }}>\n            <Typography variant=\"subtitle1\">\n              {decoration.name}\n            </Typography>\n            <IOSSwitch\n              checked={item.is_active}\n              onChange={(e) => handleToggleDecoration(decoration.id, e.target.checked)}\n            />\n          </Box>\n        </Paper>\n      );\n    });\n  };\n  \n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.3 }}\n    >\n      <SettingsContainer maxWidth=\"lg\">\n        <SettingsHeader>\n          <IconButton onClick={() => navigate(-1)}>\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h4\" fontWeight={600}>Настройки профиля</Typography>\n        </SettingsHeader>\n        \n        <StyledTabs\n          value={activeTab}\n          onChange={handleTabChange}\n          variant={isMobile ? \"scrollable\" : \"standard\"}\n          scrollButtons=\"auto\"\n          allowScrollButtonsMobile\n          centered={!isMobile}\n          sx={{\n            display: { xs: 'none', md: 'flex' },\n            '& .MuiTabs-scroller': {\n              overflowX: 'auto',\n              '&::-webkit-scrollbar': {\n                display: 'none'\n              },\n              scrollbarWidth: 'none'\n            }\n          }}\n        >\n          <StyledTab icon={<AccountCircleIcon />} label=\"Профиль\" />\n          <StyledTab icon={<BrushIcon />} label=\"Оформление\" />\n          {!isChannel && <StyledTab icon={<NotificationsIcon />} label=\"Уведомления\" />}\n          <StyledTab icon={<EmojiEventsIcon />} label=\"Бейджи\" />\n          {!isChannel && <StyledTab icon={<AlternateEmailIcon />} label=\"Юзернеймы\" />}\n          {!isChannel && <StyledTab icon={<LockIcon />} label=\"Вход по паролю\" />}\n        </StyledTabs>\n        \n        \n        {getTabContent(activeTab) === 0 && (\n          <Box component={motion.div} \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n          >\n            \n            <SettingsCard>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\">\n                  <PersonIcon />\n                  Основная информация\n                </SectionTitle>\n                \n                <Box sx={{ \n                  position: 'relative', \n                  mb: 4,\n                  borderRadius: 2,\n                  backgroundColor: 'rgba(18, 18, 18, 0.9)',\n                  border: '1px solid rgba(255, 255, 255, 0.05)',\n                  display: 'flex', \n                  flexDirection: 'column',\n                }}>\n                  {/* New Compact Profile Layout */}\n                  <Grid container sx={{ p: 2 }}>\n                    {/* Left column - Avatar */}\n                    <Grid item xs={12} sm={4} md={3} sx={{ \n                      display: 'flex', \n                      flexDirection: 'column',\n                  alignItems: 'center', \n                      justifyContent: 'center',\n                      p: 2\n                    }}>\n                      <Box sx={{ \n                        position: 'relative',\n                        width: { xs: 120, sm: 140 },\n                        height: { xs: 120, sm: 140 },\n                        borderRadius: '50%',\n                        border: `4px solid ${settings.avatar_border_color || theme.palette.primary.main}`,\n                        boxShadow: '0 4px 20px rgba(0, 0, 0, 0.4)',\n                        backgroundColor: 'rgba(18, 18, 18, 0.7)',\n                      mb: 2, \n                        '&:hover .avatar-overlay': {\n                          opacity: 1\n                        }\n                      }}>\n                        <Avatar\n                          src={avatarPreview || (user?.photo ? `/static/uploads/avatar/${user.id}/${user.photo}` : undefined)}\n                          sx={{\n                            width: '100%',\n                            height: '100%',\n                          }}\n                        />\n                        <Box \n                          className=\"avatar-overlay\"\n                          sx={{\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0,\n                            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                            transition: 'all 0.2s',\n                            opacity: 0,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            gap: 1,\n                            borderRadius: '50%',\n                            '&:hover': {\n                              opacity: 1\n                            }\n                          }}\n                        >\n                          <label htmlFor=\"avatar-input\">\n                            <IconButton component=\"span\" sx={{ bgcolor: 'rgba(0, 0, 0, 0.6)', color: '#fff', p: 1 }}>\n                              <PhotoCameraIcon />\n                            </IconButton>\n                          </label>\n                          <IconButton\n                            onClick={handleDeleteAvatar}\n                            sx={{ bgcolor: 'rgba(0, 0, 0, 0.6)', color: '#fff', p: 1 }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                          <FileInput\n                            id=\"avatar-input\"\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={(e) => handleAvatarChange(e.target.files[0])}\n                          />\n                        </Box>\n                      </Box>\n                      \n                      <Typography variant=\"subtitle2\" sx={{ mt: 1, mb: 0.5, textAlign: 'center' }}>\n                        Аватар профиля\n                      </Typography>\n                      \n                      {/* Removing the Цвет обводки TextField */}\n                  </Grid>\n                  \n                    {/* Right column - Banner */}\n                    <Grid item xs={12} sm={8} md={9} sx={{ p: 2 }}>\n                      <Box sx={{ \n                        position: 'relative', \n                        height: { xs: 150, sm: 180 },\n                        width: '100%', \n                        overflow: 'hidden', \n                        borderRadius: 2,\n                        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)',\n                        border: '1px solid rgba(255,255,255,0.1)',\n                      }}>\n                        <Box \n                          component=\"img\"\n                          src={bannerPreview || (user?.banner ? `/static/uploads/banner/${user.id}/${user.banner}` : undefined)}\n                          alt=\"Banner\"\n                          sx={{ \n                            width: '100%',\n                            height: '100%',\n                            objectFit: 'cover'\n                          }}\n                          onError={(e) => {\n                            e.target.onerror = null; \n                            e.target.src = generatePlaceholder(800, 200, 'Banner', '#424242', '#ffffff');\n                          }}\n                        />\n                        <Box \n                          sx={{ \n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0,\n                            backgroundColor: 'rgba(0, 0, 0, 0.3)',\n                            transition: 'all 0.2s',\n                            opacity: 0,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            gap: 2,\n                            '&:hover': {\n                              opacity: 1\n                            }\n                          }}\n                        >\n                          <label htmlFor=\"banner-input\">\n                            <IconButton component=\"span\" sx={{ bgcolor: 'rgba(0, 0, 0, 0.6)', color: '#fff' }}>\n                              <PhotoCameraIcon />\n                            </IconButton>\n                          </label>\n                          <IconButton\n                            onClick={handleDeleteBanner}\n                            sx={{ bgcolor: 'rgba(0, 0, 0, 0.6)', color: '#fff' }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                          <FileInput\n                            id=\"banner-input\"\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={(e) => handleBannerChange(e.target.files[0])}\n                          />\n                        </Box>\n                      </Box>\n                      \n                      <Typography variant=\"subtitle2\" sx={{ mt: 2, mb: 0.5 }}>\n                        Баннер профиля\n                      </Typography>\n                      \n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                        Рекомендуемый размер: 1200×300 пикселей\n                    </Typography>\n                  </Grid>\n                </Grid>\n                </Box>\n                \n                <Grid container spacing={2} sx={{ mt: 7 }}> {/* Увеличиваем отступ для аватара */}\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      label=\"Имя\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      helperText={`${name?.length || 0}/15 символов`}\n                      inputProps={{ maxLength: 15 }}\n                      FormHelperTextProps={{ sx: { ml: 0 } }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      label=\"Имя пользователя\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      helperText={`${username?.length || 0}/16 символов, без пробелов`}\n                      inputProps={{ maxLength: 16 }}\n                      FormHelperTextProps={{ sx: { ml: 0 } }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      label=\"О себе\"\n                      value={about}\n                      onChange={(e) => setAbout(e.target.value)}\n                      fullWidth\n                      multiline\n                      rows={4}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      helperText={`${about?.length || 0}/200 символов`}\n                      inputProps={{ maxLength: 200 }}\n                      FormHelperTextProps={{ sx: { ml: 0 } }}\n                    />\n                  </Grid>\n                </Grid>\n                \n                {/* Status Settings */}\n                <StatusSettings \n                  profileData={profileData} \n                  subscription={profileData?.subscription} \n                  onStatusUpdate={handleStatusUpdate}\n                />\n\n\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n\n                    startIcon={<FavoriteIcon />}\n                    onClick={() => setConnectionModalOpen(true)}\n                    sx={{\n                    }}\n                  >\n                    Коннект\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={saving ? <CircularProgress size={20} /> : success ? <CheckIcon /> : <SaveIcon />}\n                    onClick={handleSaveProfile}\n                    disabled={saving}\n                    sx={{ borderRadius: '12px', py: 1 }}\n                  >\n                    {saving ? 'Сохранение...' : success ? 'Сохранено' : 'Сохранить изменения'}\n                  </Button>\n                </Box>\n              </SettingsCardContent>\n            </SettingsCard>\n            \n            <SettingsCard>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\">\n                  <PublicIcon />\n                  Социальные сети\n                </SectionTitle>\n                \n                <List sx={{ bgcolor: 'rgba(16, 16, 16, 0.8)', borderRadius: 2, mb: 3, border: '1px solid rgba(255, 255, 255, 0.05)' }}>\n                  {socials.length === 0 ? (\n                    <ListItem>\n                      <ListItemText \n                        primary={\n                          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                            У вас нет добавленных социальных сетей\n                          </Typography>\n                        } \n                      />\n                    </ListItem>\n                  ) : (\n                    socials.map((social, index) => (\n                      <ListItem \n                        key={index} \n                        divider={index < socials.length - 1}\n                        sx={{ \n                          borderRadius: index === 0 ? '8px 8px 0 0' : index === socials.length - 1 ? '0 0 8px 8px' : '0',\n                          overflow: 'hidden',\n                          transition: 'all 0.2s ease',\n                          '&:hover': { bgcolor: alpha(theme.palette.primary.main, 0.08) }\n                        }}\n                      >\n                        <Box sx={{ mr: 2, color: 'primary.main' }}>\n                          {getSocialIcon(social.name, social.link)}\n                        </Box>\n                        <ListItemText \n                          primary={\n                            <Typography variant=\"subtitle2\" fontWeight={500}>\n                              {social.name}\n                            </Typography>\n                          } \n                          secondary={\n                            <Typography \n                              variant=\"body2\" \n                              component=\"a\" \n                              href={social.link} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\" \n                              sx={{ color: 'primary.main', textDecoration: 'none', '&:hover': { textDecoration: 'underline' } }}\n                            >\n                              {social.link}\n                            </Typography>\n                          }\n                        />\n                        <ListItemSecondaryAction>\n                          <IconButton \n                            edge=\"end\" \n                            onClick={() => handleDeleteSocial(social.name)} \n                            sx={{ \n                              color: 'error.main',\n                              '&:hover': { bgcolor: alpha(theme.palette.error.main, 0.1) }\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))\n                  )}\n                </List>\n                \n                <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    startIcon={<AddIcon />}\n                    onClick={() => setSocialDialogOpen(true)}\n                    sx={{ borderRadius: '12px', py: 1, px: 3 }}\n                  >\n                    Добавить социальную сеть\n                  </Button>\n                </Box>\n                \n                \n                <Dialog \n                  open={socialDialogOpen} \n                  onClose={() => setSocialDialogOpen(false)}\n                  maxWidth=\"sm\"\n                  PaperProps={{\n                    sx: { \n                      bgcolor: theme.palette.background.paper, \n                      color: theme.palette.text.primary,\n                      borderRadius: 2\n                    }\n                  }}\n                >\n                  <DialogTitle sx={{ borderBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}` }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                      <Typography variant=\"h6\">Добавить социальную сеть</Typography>\n                      <IconButton onClick={() => setSocialDialogOpen(false)} size=\"small\">\n                        <CloseIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Box>\n                  </DialogTitle>\n                  <DialogContent sx={{ mt: 2 }}>\n                    <FormControl fullWidth margin=\"normal\">\n                      <InputLabel>Социальная сеть</InputLabel>\n                      <Select\n                        value={newSocialName}\n                        onChange={(e) => setNewSocialName(e.target.value)}\n                        label=\"Социальная сеть\"\n                      >\n                        <MenuItem value=\"Element\">Element</MenuItem>\n                        <MenuItem value=\"Aumbent\">Aumbent</MenuItem>\n                        <MenuItem value=\"VK\">ВКонтакте</MenuItem>\n                        <MenuItem value=\"TikTok\">TikTok</MenuItem>\n\n                        <MenuItem value=\"Telegram\">Telegram</MenuItem>\n                        <MenuItem value=\"YouTube\">YouTube</MenuItem>\n                        <MenuItem value=\"Website\">Веб-сайт</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <TextField\n                      label=\"Ссылка\"\n                      value={newSocialLink}\n                      onChange={(e) => setNewSocialLink(e.target.value)}\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"https://\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {getSocialIcon(newSocialName)}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </DialogContent>\n                  <DialogActions sx={{ p: 2, pt: 0 }}>\n                    <Button onClick={() => setSocialDialogOpen(false)} color=\"inherit\">Отмена</Button>\n                    <Button \n                      onClick={handleAddSocial} \n                      color=\"primary\" \n                      variant=\"contained\"\n                      disabled={!newSocialName || !newSocialLink || saving}\n                      startIcon={saving ? <CircularProgress size={16} /> : <AddIcon />}\n                    >\n                      {saving ? 'Добавление...' : 'Добавить'}\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </SettingsCardContent>\n            </SettingsCard>\n            \n            {/* Account status moved to the bottom */}\n            <SettingsCard>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\">\n                  <SecurityIcon />\n                  Состояние учетной записи\n                </SectionTitle>\n                \n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  p: 2, \n                  borderRadius: 2,\n                  bgcolor: 'rgba(18, 18, 18, 0.9)',\n                  border: '1px solid rgba(255, 255, 255, 0.05)',\n                  mb: accountStatus !== 'good' ? 2 : 0,\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'\n                }}>\n                  <Box sx={{ mr: 2 }}>\n                    {accountStatus === 'good' && (\n                      <VerifiedUserIcon sx={{ color: '#81C784', fontSize: 30 }} />\n                    )}\n                    {accountStatus === 'warning' && (\n                      <WarningAmberIcon sx={{ color: '#FFB74D', fontSize: 30 }} />\n                    )}\n                    {accountStatus === 'banned' && (\n                      <BlockIcon sx={{ color: '#E57373', fontSize: 30 }} />\n                    )}\n          </Box>\n                  \n                  <Box>\n                    <Typography variant=\"subtitle1\" sx={{ fontWeight: 600 }}>\n                      {accountStatus === 'good' && 'Всё в порядке'}\n                      {accountStatus === 'warning' && 'Есть предупреждения'}\n                      {accountStatus === 'banned' && 'Аккаунт заблокирован'}\n                    </Typography>\n                    {accountStatus !== 'good' && (\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {accountStatus === 'warning' && `${userWarnings.length} активных предупреждений`}\n                        {accountStatus === 'banned' && 'Временная блокировка'}\n                      </Typography>\n                    )}\n                  </Box>\n                  \n                  <Box sx={{ ml: 'auto' }}>\n                    <Button\n                      variant=\"text\"\n                      size=\"small\"\n                      onClick={openWarningsDialog}\n                      startIcon={<HistoryIcon fontSize=\"small\" />}\n                      sx={{\n                        textTransform: 'none',\n                        fontSize: '0.8rem',\n                        color: accountStatus === 'good' ? '#81C784' : \n                                accountStatus === 'warning' ? '#FFB74D' : '#E57373',\n                      }}\n                    >\n                      История\n                    </Button>\n                  </Box>\n                </Box>\n                \n                {accountStatus === 'banned' && banInfo && (\n                  <Box \n                    sx={{ \n                      p: 2, \n                      borderRadius: 2, \n                      bgcolor: 'rgba(18, 18, 18, 0.9)', \n                      border: `1px solid ${alpha('#d32f2f', 0.3)}`\n                    }}\n                  >\n                    <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\n                      <strong>Причина блокировки:</strong> {banInfo.reason}\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\n                      <strong>До:</strong> {formatWarningDate(banInfo.end_date)}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      <strong>Осталось дней:</strong> {banInfo.remaining_days}\n                    </Typography>\n                    {banInfo.details && (\n                      <Typography variant=\"body2\" sx={{ mt: 1, fontStyle: 'italic' }}>\n                        {banInfo.details}\n                      </Typography>\n                    )}\n                  </Box>\n                )}\n              </SettingsCardContent>\n            </SettingsCard>\n          </Box>\n        )}\n        \n        \n        {getTabContent(activeTab) === 1 && (\n          <Box component={motion.div} \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n          >\n            \n            {/* Theme selector for customizing appearance */}\n            <ThemeSelector onThemeSelect={applyTheme} />\n            \n            {/* Profile style toggle - only for Ultimate subscription */}\n            {profileData?.subscription?.type === 'ultimate' && (\n              <Box sx={{ mt: 4, mb: 2 }}>\n                <Paper sx={{ p: 2, borderRadius: 2, bgcolor: 'rgba(18, 18, 18, 0.9)' }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Box>\n                      <Typography variant=\"subtitle1\" fontWeight={600}>\n                        Необычный профиль\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Изменить внешний вид профиля\n                      </Typography>\n                    </Box>\n                    <IOSSwitch \n                      checked={isCustomProfileActive}\n                      onChange={async () => {\n                        try {\n                          const newProfileId = isCustomProfileActive ? 1 : 2;\n                          const response = await fetch('/api/user/profile-style', {\n                            method: 'POST',\n                            headers: {\n                              'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({ profile_id: newProfileId })\n                          });\n                          \n                          const data = await response.json();\n                          if (data.success) {\n                            setIsCustomProfileActive(!isCustomProfileActive);\n                            showNotification('success', 'Стиль профиля обновлен');\n                          } else {\n                            showNotification('error', data.error || 'Не удалось обновить стиль профиля');\n                          }\n                        } catch (error) {\n                          console.error('Error updating profile style:', error);\n                          showNotification('error', 'Ошибка при обновлении стиля профиля');\n                        }\n                      }}\n                    />\n                  </Box>\n                </Paper>\n              </Box>\n            )}\n            \n            <Divider sx={{ my: 3 }} />\n            \n            \n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\n              Настройка цветов интерфейса\n            </Typography>\n            \n            <SettingsCard>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\">\n                  <PaletteIcon />\n                  Цветовая схема\n                </SectionTitle>\n                \n                <Box sx={{ textAlign: 'center', my: 4 }}>\n                  <Typography variant=\"h4\" color=\"primary\" fontWeight=\"600\" gutterBottom>\n                    Скоро\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\n                    Новые возможности кастомизации внешнего вида появятся в ближайшем обновлении\n                  </Typography>\n                </Box>\n              </SettingsCardContent>\n            </SettingsCard>\n\n      {/* Декорации профиля */}\n      <Box sx={{ mt: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Декорации профиля\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 2 }}>\n          Выберите и активируйте декорации для вашего профиля\n        </Typography>\n        \n        {loadingDecorations ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n            <CircularProgress />\n          </Box>\n        ) : userDecorations.length === 0 ? (\n          <Paper sx={{ p: 3, textAlign: 'center', bgcolor: 'background.paper' }}>\n            <Typography color=\"textSecondary\">\n              У вас пока нет декораций\n            </Typography>\n          </Paper>\n        ) : (\n          <Grid container spacing={2}>\n            {userDecorations.map(item => {\n              const decoration = item.decoration;\n              return (\n                <Grid item xs={12} md={6} key={decoration.id}>\n                  <Paper \n                    sx={{ \n                      p: 2,\n                      bgcolor: 'background.paper',\n                      transition: 'transform 0.2s, box-shadow 0.2s',\n                      height: '100%',\n                      '&:hover': {\n                        transform: 'translateY(-2px)',\n                        boxShadow: (theme) => theme.shadows[4]\n                      }\n                    }}\n                  >\n                    <DecorationPreview decoration={decoration}>\n                      {decoration.item_path && (() => {\n                        const [path, ...styles] = decoration.item_path.split(';');\n                        const styleObj = styles.reduce((acc, style) => {\n                          const [key, value] = style.split(':').map(s => s.trim());\n                          return { ...acc, [key]: value };\n                        }, {});\n                        \n                        return (\n                          <DecorationItem\n                            src={path}\n                            alt=\"\"\n                            customStyles={styleObj}\n                          />\n                        );\n                      })()}\n                    </DecorationPreview>\n                    <Box sx={{ \n                      display: 'flex', \n                      justifyContent: 'space-between', \n                      alignItems: 'center',\n                      mt: 1 \n                    }}>\n                      <Box>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\n                          {decoration.name} \n                        </Typography>\n                      </Box>\n                      <IOSSwitch\n                        checked={item.is_active}\n                        onChange={(e) => handleToggleDecoration(decoration.id, e.target.checked)}\n                      />\n                    </Box>\n                  </Paper>\n                </Grid>\n              );\n            })}\n          </Grid>\n        )}\n      </Box>\n            \n            <SettingsCard sx={{ mt: 3 }}>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\">\n                  <BrushIcon />\n                  Дополнительные настройки\n                </SectionTitle>\n                \n                {/* Profile background upload for Ultimate */}\n                {profileData?.subscription?.type === 'ultimate' && (\n                  <Box sx={{ mt: 3 }}>\n                    <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\n                      Фоновая картинка профиля\n                    </Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                      {profileData.user?.profile_background_url ? (\n                        <Box sx={{ position: 'relative' }}>\n                          <Avatar\n                            variant=\"rounded\"\n                            src={profileData.user.profile_background_url}\n                            alt=\"Profile Background\"\n                            sx={{ width: 96, height: 96, borderRadius: 3, boxShadow: 2 }}\n                          />\n                          <IconButton\n                            size=\"small\"\n                            color=\"error\"\n                            sx={{ position: 'absolute', top: 0, right: 0, bgcolor: 'rgba(0,0,0,0.5)' }}\n                            onClick={async () => {\n                              try {\n                                await axios.delete('/api/profile/background');\n                                showNotification('success', 'Фон успешно удалён');\n                                // Обновить профиль\n                                if (fetchProfileData) fetchProfileData();\n                              } catch (e) {\n                                showNotification('error', e?.response?.data?.error || 'Ошибка удаления фона');\n                              }\n                            }}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Box>\n                      ) : (\n                        <Avatar\n                          variant=\"rounded\"\n                          sx={{ width: 96, height: 96, borderRadius: 3, bgcolor: 'background.default', color: 'text.disabled', boxShadow: 1 }}\n                        >\n                          <PhotoCameraIcon fontSize=\"large\" />\n                        </Avatar>\n                      )}\n                      <Box>\n                        <Button\n                          variant=\"contained\"\n                          component=\"label\"\n                          startIcon={<PhotoCameraIcon />}\n                        >\n                          Загрузить фон\n                          <input\n                            type=\"file\"\n                            accept=\"image/png, image/jpeg, image/jpg, image/gif\"\n                            hidden\n                            onChange={async (e) => {\n                              const file = e.target.files[0];\n                              if (!file) return;\n                              const formData = new FormData();\n                              formData.append('background', file);\n                              try {\n                                await axios.post('/api/profile/background', formData, {\n                                  headers: { 'Content-Type': 'multipart/form-data' }\n                                });\n                                showNotification('success', 'Фон успешно загружен');\n                                if (fetchProfileData) fetchProfileData();\n                              } catch (e) {\n                                showNotification('error', e?.response?.data?.error || 'Ошибка загрузки фона');\n                              }\n                            }}\n                          />\n                        </Button>\n                        <Typography variant=\"caption\" sx={{ display: 'block', mt: 1, color: 'text.secondary' }}>\n                          Только для подписки Ultimate. PNG, JPG, GIF. До 5MB.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                )}\n              </SettingsCardContent>\n            </SettingsCard>\n          </Box>\n        )}\n        \n        \n        {getTabContent(activeTab) === 2 && !isChannel && (\n          <Box component={motion.div} \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <SectionTitle variant=\"h5\">\n              <NotificationsActiveIcon />\n              Настройки уведомлений\n            </SectionTitle>\n\n            \n            \n            \n            <SettingsCard sx={{ mt: 3 }}>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\" sx={{ mb: 2 }}>\n                  <NotificationsIcon sx={{ mr: 1 }} />\n                  Уведомления\n                </SectionTitle>\n                \n                {!pushSupported ? (\n                  <Alert severity=\"warning\" sx={{ mb: 2 }}>\n                    Ваш браузер не поддерживает push-уведомления\n                  </Alert>\n                ) : (\n                  <>\n                    {pushPermission === 'denied' && (\n                      <Alert severity=\"error\" sx={{ mb: 2 }}>\n                        Вы заблокировали разрешение на отправку уведомлений.\n                      </Alert>\n                    )}\n                    \n                    <List disablePadding sx={{ mb: 1 }}>\n                      {/* Push-уведомления */}\n                      <ListItem \n                        sx={{ \n                          py: 1.5, \n                          px: 2, \n                      borderRadius: 2,\n                      bgcolor: alpha(theme.palette.background.default, 0.4),\n                          border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n                          mb: 1\n                        }}\n                      >\n                        <ListItemIcon sx={{ minWidth: 40 }}>\n                          <NotificationsActiveIcon color={pushSubscribed ? \"success\" : \"action\"} />\n                        </ListItemIcon>\n                        <ListItemText \n                          primary=\"Push-уведомления\" \n                          primaryTypographyProps={{ fontWeight: 500 }}\n                        />\n                        {pushLoading ? (\n                          <CircularProgress size={24} sx={{ color: '#D0BCFF' }} />\n                        ) : (\n                          <IOSSwitch\n                            checked={pushSubscribed}\n                            onChange={pushSubscribed ? handleDisablePushNotifications : handleEnablePushNotifications}\n                            disabled={pushPermission === 'denied'}\n                          />\n                        )}\n                      </ListItem>\n                      \n                      {/* Telegram-уведомления */}\n                      <ListItem \n                        sx={{ \n                          py: 1.5, \n                          px: 2,\n                      borderRadius: 2,\n                      bgcolor: alpha(theme.palette.background.default, 0.4),\n                      border: `1px solid ${alpha(theme.palette.divider, 0.1)}`\n                        }}\n                      >\n                        <ListItemIcon sx={{ minWidth: 40 }}>\n                          <TelegramIcon color={notificationPrefs.telegramNotificationsEnabled ? \"success\" : \"action\"} />\n                        </ListItemIcon>\n                        <ListItemText \n                          primary=\"Telegram-уведомления\" \n                          primaryTypographyProps={{ fontWeight: 500 }}\n                          secondary={!notificationPrefs.telegramConnected ? \"Подключите Telegram\" : undefined}\n                        />\n                        {savingNotificationPrefs ? (\n                          <CircularProgress size={24} sx={{ color: '#D0BCFF' }} />\n                        ) : (\n                          <IOSSwitch\n                            checked={notificationPrefs.telegramNotificationsEnabled}\n                            onChange={handleToggleTelegramNotifications}\n                            disabled={!notificationPrefs.telegramConnected}\n                          />\n                        )}\n                      </ListItem>\n                    </List>\n                    \n                    <Typography variant=\"caption\" sx={{ display: 'block', mt: 2, color: 'text.disabled', textAlign: 'center' }}>\n                      Push-уведомления работают даже когда браузер закрыт\n                    </Typography>\n                  </>\n                )}\n              </SettingsCardContent>\n            </SettingsCard>\n            \n            \n            <SettingsCard sx={{ mt: 3 }}>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\" sx={{ mb: 2 }}>\n                  <LinkIcon sx={{ mr: 1 }} />\n                  Связанные аккаунты\n                </SectionTitle>\n                \n                <List disablePadding>\n                  {/* Element аккаунт */}\n                  <ListItem \n                    sx={{ \n                      py: 1.5, \n                      px: 2, \n                  borderRadius: 2,\n                  bgcolor: alpha(theme.palette.background.default, 0.4),\n                  border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n                  mb: 1\n                    }}\n                  >\n                    <ListItemIcon sx={{ minWidth: 40 }}>\n                      <ElementIcon sx={{ color: elementConnected ? '#D0BCFF' : '#777' }} />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Element\"\n                      primaryTypographyProps={{ fontWeight: 500 }}\n                      secondary={loadingElementStatus ? \"Проверка статуса...\" : (elementConnected ? \"Подключен\" : \"Не подключен\")}\n                    />\n                          {loadingElementStatus ? (\n                      <CircularProgress size={24} sx={{ color: '#D0BCFF' }} />\n                    ) : (\n                      elementLinking ? (\n                        <IconButton \n                          edge=\"end\" \n                          color=\"error\" \n                          onClick={handleCancelElementLinking}\n                          size=\"small\"\n                        >\n                          <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    ) : (\n                      <Button\n                          variant=\"contained\"\n                          size=\"small\"\n                          onClick={elementConnected ? null : handleLinkElement}\n                          disabled={elementConnected}\n                          sx={{\n                            bgcolor: elementConnected ? 'transparent' : 'rgba(208, 188, 255, 0.1)',\n                            color: elementConnected ? 'success.main' : '#D0BCFF',\n                            border: elementConnected ? 'none' : '1px solid rgba(208, 188, 255, 0.3)',\n                            boxShadow: 'none',\n                            minWidth: 'auto',\n                            px: 2,\n                            '&:hover': {\n                              bgcolor: 'rgba(208, 188, 255, 0.2)',\n                            }\n                          }}\n                        >\n                          {elementConnected ? (\n                            <CheckIcon fontSize=\"small\" />\n                          ) : 'Подключить'}\n                      </Button>\n                      )\n                    )}\n                  </ListItem>\n                  \n                  {/* Telegram аккаунт */}\n                  <ListItem \n                    sx={{ \n                      py: 1.5, \n                      px: 2,\n                  borderRadius: 2,\n                  bgcolor: alpha(theme.palette.background.default, 0.4),\n                  border: `1px solid ${alpha(theme.palette.divider, 0.1)}`\n                    }}\n                  >\n                    <ListItemIcon sx={{ minWidth: 40 }}>\n                      <TelegramIcon sx={{ color: notificationPrefs.telegramConnected ? '#D0BCFF' : '#777' }} />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Telegram\"\n                      primaryTypographyProps={{ fontWeight: 500 }}\n                      secondary={notificationPrefs.telegramConnected ? \"Подключен\" : \"Не подключен\"}\n                    />\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={() => setTelegramDialogOpen(true)}\n                      disabled={false}\n                      sx={{\n                        bgcolor: notificationPrefs.telegramConnected ? 'transparent' : 'rgba(208, 188, 255, 0.1)',\n                        color: notificationPrefs.telegramConnected ? 'success.main' : '#D0BCFF',\n                        border: notificationPrefs.telegramConnected ? 'none' : '1px solid rgba(208, 188, 255, 0.3)',\n                        boxShadow: 'none',\n                        minWidth: 'auto',\n                        px: 2,\n                        '&:hover': {\n                          bgcolor: 'rgba(208, 188, 255, 0.2)',\n                        }\n                      }}\n                    >\n                      {notificationPrefs.telegramConnected ? (\n                        <CheckIcon fontSize=\"small\" />\n                      ) : 'Подключить'}\n                    </Button>\n                  </ListItem>\n                </List>\n              </SettingsCardContent>\n            </SettingsCard>\n          </Box>\n        )}\n        \n        \n        {getTabContent(activeTab) === 3 && (\n          <Box component={motion.div} \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <SettingsCard>\n              <SettingsCardContent>\n                <SectionTitle variant=\"h5\">\n                  <EmojiEventsIcon />\n                  Управление бейджами\n                </SectionTitle>\n                \n                <Typography variant=\"body2\" sx={{ mb: 3, color: 'text.secondary' }}>\n                  Выберите бейдж, который будет отображаться рядом с вашим именем в профиле и публикациях\n                </Typography>\n                \n                {loadingAchievements || loadingPurchasedBadges ? (\n                  <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                    <CircularProgress />\n                  </Box>\n                ) : (\n                  <Box sx={{ width: '100%' }}>\n                      {userAchievements.some(achievement => achievement.is_active) && (\n                      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"error\"\n                          size=\"small\"\n                          startIcon={<RemoveCircleOutlineIcon />}\n                          onClick={handleClearActiveBadge}\n                          disabled={updatingActiveBadge}\n                          sx={{ \n                            borderRadius: '10px', \n                            textTransform: 'none', \n                            '&:hover': {\n                              backgroundColor: alpha(theme.palette.error.main, 0.08),\n                            }\n                          }}\n                        >\n                          Убрать бейдж\n                        </Button>\n                      </Box>\n                    )}\n                    \n                    {userAchievements.length > 0 && (\n                      <>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, mt: 2 }}>\n                          <ShieldIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\n                          <Typography variant=\"h6\" color=\"primary\" sx={{ fontWeight: 600 }}>\n                            Заработанные достижения\n                          </Typography>\n                    </Box>\n                    \n                        <Grid container spacing={1.5}>\n                          {userAchievements\n                            .filter(achievement => !achievement.image_path.includes('shop/'))\n                            .map((achievement) => (\n                              <Grid item xs={4} sm={3} md={2} key={achievement.id}>\n                          <Card \n                                  elevation={0}\n                            sx={{ \n                              position: 'relative',\n                              height: '100%',\n                              borderRadius: 2,\n                                    background: 'transparent',\n                              border: achievement.is_active \n                                ? `2px solid ${theme.palette.primary.main}` \n                                : `1px solid rgba(255, 255, 255, 0.05)`,\n                                    transition: 'all 0.2s ease',\n                              overflow: 'visible',\n                              '&:hover': { \n                                      transform: 'translateY(-3px)',\n                                      boxShadow: achievement.is_active ? theme.shadows[4] : 'none'\n                              }\n                            }}\n                          >\n                            {achievement.is_active && (\n                              <Box \n                                sx={{\n                                  position: 'absolute',\n                                        top: -6,\n                                        right: -6,\n                                  backgroundColor: theme.palette.success.main,\n                                        color: '#fff',\n                                  borderRadius: '50%',\n                                        width: 16,\n                                        height: 16,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  zIndex: 2\n                                }}\n                              >\n                                      <CheckIcon sx={{ fontSize: 12 }} />\n                              </Box>\n                            )}\n                            \n                            <CardContent sx={{ \n                              display: 'flex', \n                              flexDirection: 'column',\n                              alignItems: 'center',\n                              textAlign: 'center',\n                                    p: 1.5,\n                                    '&:last-child': { pb: 1.5 }\n                              }}>\n                                <Box \n                                  component=\"img\" \n                                  src={`/static/images/bages/${achievement.image_path}`}\n                                  alt={achievement.name || achievement.bage}\n                                  sx={{ \n                                        width: 50, \n                                        height: 50,\n                                    objectFit: 'contain',\n                                        mb: 1,\n                                    filter: achievement.is_active ? 'none' : 'grayscale(30%)',\n                                    transition: 'all 0.3s ease',\n                                  }}\n                                  onError={(e) => {\n                                    e.target.onerror = null;\n                                    e.target.src = '/static/images/bages/default-badge.png';\n                                  }}\n                                />\n                              \n                              <Typography \n                                      variant=\"caption\" \n                                sx={{ \n                                  fontWeight: 600,\n                                        mb: 0.5,\n                                  display: '-webkit-box',\n                                        WebkitLineClamp: 1,\n                                  WebkitBoxOrient: 'vertical',\n                                  overflow: 'hidden',\n                                  textOverflow: 'ellipsis'\n                                }}\n                              >\n                                      {achievement.name || achievement.bage}\n                              </Typography>\n\n                                <Button \n                                      variant={achievement.is_active ? \"text\" : \"contained\"}\n                                      color={achievement.is_active ? \"success\" : \"primary\"}\n                                      onClick={() => handleSetActiveBadge(achievement.id)}\n                                      size=\"small\"\n                                  sx={{ \n                                        fontSize: '0.7rem',\n                                        minHeight: 0,\n                                        py: 0.5,\n                                    width: '100%',\n                                        minWidth: 'auto',\n                                        borderRadius: '8px',\n                                    textTransform: 'none',\n                                        boxShadow: 'none'\n                                  }}\n                                      disabled={updatingActiveBadge}\n                                >\n                                      {achievement.is_active ? \"Активен\" : \"Выбрать\"}\n                                </Button>\n                                  </CardContent>\n                                </Card>\n                              </Grid>\n                          ))}\n                        </Grid>\n                        \n                        <Box sx={{ mt: 1, mb: 3, display: 'flex', justifyContent: 'center' }}>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            Собирайте новые достижения, участвуя в сообществе\n                          </Typography>\n                        </Box>\n                      </>\n                    )}\n                    \n                    {/* Purchased Badges Section */}\n                    {purchasedBadges.length > 0 && (\n                      <>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, mt: 3 }}>\n                          <ShoppingBagIcon sx={{ mr: 1, color: theme.palette.secondary.main }} />\n                          <Typography variant=\"h6\" color=\"secondary\" sx={{ fontWeight: 600 }}>\n                            Приобретенные бейджи\n                          </Typography>\n                        </Box>\n                        \n                        <Grid container spacing={1.5}>\n                          {userAchievements\n                            .filter(achievement => achievement.image_path.includes('shop/'))\n                            .map((achievement) => (\n                              <Grid item xs={4} sm={3} md={2} key={achievement.id}>\n                                <Card \n                                  elevation={0}\n                                  sx={{ \n                                    position: 'relative',\n                                    height: '100%',\n                                    borderRadius: 2,\n                                    background: 'transparent',\n                                    border: achievement.is_active \n                                      ? `2px solid ${theme.palette.secondary.main}` \n                                      : `1px solid rgba(255, 255, 255, 0.05)`,\n                                    transition: 'all 0.2s ease',\n                                    overflow: 'visible',\n                                    '&:hover': { \n                                      transform: 'translateY(-3px)',\n                                      boxShadow: achievement.is_active ? theme.shadows[4] : 'none'\n                                    }\n                                  }}\n                                >\n                                  {achievement.is_active && (\n                                    <Box \n                                      sx={{\n                                        position: 'absolute',\n                                        top: -6,\n                                        right: -6,\n                                        backgroundColor: theme.palette.success.main,\n                                        color: '#fff',\n                                        borderRadius: '50%',\n                                        width: 16,\n                                        height: 16,\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        zIndex: 2\n                                      }}\n                                    >\n                                      <CheckIcon sx={{ fontSize: 12 }} />\n                                    </Box>\n                                  )}\n                                  \n                                  <Box\n                                    sx={{\n                                      position: 'absolute',\n                                      top: -4,\n                                      left: -4,\n                                      backgroundColor: theme.palette.secondary.main,\n                                      color: '#fff',\n                                      borderRadius: '50%',\n                                      width: 14,\n                                      height: 14,\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      zIndex: 2\n                                    }}\n                                  >\n                                    <ShoppingBagIcon sx={{ fontSize: 8 }} />\n                                  </Box>\n                                  \n                                  <CardContent sx={{ \n                                    display: 'flex', \n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                    textAlign: 'center',\n                                    p: 1.5,\n                                    '&:last-child': { pb: 1.5 }\n                                    }}>\n                                      <Box \n                                        component=\"img\" \n                                        src={`/static/images/bages/${achievement.image_path}`}\n                                        alt={achievement.name || achievement.bage}\n                                        sx={{ \n                                        width: 50, \n                                        height: 50,\n                                          objectFit: 'contain',\n                                        mb: 1,\n                                          filter: achievement.is_active ? 'none' : 'grayscale(30%)',\n                                          transition: 'all 0.3s ease',\n                                        }}\n                                        onError={(e) => {\n                                          e.target.onerror = null;\n                                          e.target.src = '/static/images/bages/default-badge.png';\n                                        }}\n                                      />\n                                    \n                                    <Typography \n                                      variant=\"caption\" \n                                      sx={{ \n                                        fontWeight: 600,\n                                        mb: 0.5,\n                                        display: '-webkit-box',\n                                        WebkitLineClamp: 1,\n                                        WebkitBoxOrient: 'vertical',\n                                        overflow: 'hidden',\n                                        textOverflow: 'ellipsis'\n                                      }}\n                                    >\n                                      {achievement.name || achievement.bage}\n                                    </Typography>\n\n                                <Button \n                                      variant={achievement.is_active ? \"text\" : \"contained\"}\n                                      color={achievement.is_active ? \"success\" : \"secondary\"}\n                                  onClick={() => handleSetActiveBadge(achievement.id)}\n                                      size=\"small\"\n                                  sx={{ \n                                        fontSize: '0.7rem',\n                                        minHeight: 0,\n                                        py: 0.5,\n                                    width: '100%',\n                                        minWidth: 'auto',\n                                        borderRadius: '8px',\n                                    textTransform: 'none',\n                                        boxShadow: 'none'\n                                  }}\n                                  disabled={updatingActiveBadge}\n                                >\n                                      {achievement.is_active ? \"Активен\" : \"Выбрать\"}\n                                </Button>\n                            </CardContent>\n                          </Card>\n                        </Grid>\n                      ))}\n                    </Grid>\n                    \n                        <Box sx={{ mt: 1, mb: 2, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mr: 1 }}>\n                            Покупайте новые бейджи в магазине \n                      </Typography>\n                          <Link href=\"/badge-shop\" sx={{ textDecoration: 'none' }}>\n                            <Button \n                              variant=\"text\" \n                              color=\"secondary\" \n                              size=\"small\"\n                              startIcon={<StorefrontIcon sx={{ fontSize: 14 }} />}\n                              sx={{ \n                                textTransform: 'none',\n                                py: 0,\n                                ml: -1\n                              }}\n                            >\n                              Перейти в магазин\n                            </Button>\n                          </Link>\n                    </Box>\n                      </>\n                    )}\n                  </Box>\n                )}\n                \n                <Box \n                  component=\"style\"\n                  dangerouslySetInnerHTML={{\n                    __html: `\n                      @keyframes pulse {\n                        0% {\n                          transform: scale(1);\n                          opacity: 0.8;\n                        }\n                        50% {\n                          transform: scale(1.05);\n                          opacity: 0.5;\n                        }\n                        100% {\n                          transform: scale(1);\n                          opacity: 0.8;\n                        }\n                      }\n                      \n                      @keyframes badge-glow {\n                        0% {\n                          box-shadow: 0 0 5px 0px ${theme.palette.primary.main};\n                        }\n                        50% {\n                          box-shadow: 0 0 15px 2px ${theme.palette.primary.main};\n                        }\n                        100% {\n                          box-shadow: 0 0 5px 0px ${theme.palette.primary.main};\n                        }\n                      }\n                    `\n                  }}\n                />\n              </SettingsCardContent>\n            </SettingsCard>\n          </Box>\n        )}\n        \n        \n        {getTabContent(activeTab) === 4 && !isChannel && (\n          <Box component={motion.div} \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <SectionTitle variant=\"h5\">\n              <AlternateEmailIcon />\n              Магазин Юзернеймов\n            </SectionTitle>\n            \n            <SettingsCard>\n              <SettingsCardContent sx={{ \n                p: { xs: 1, sm: 2, md: 3 } \n              }}>\n                <UsernameShopTab \n                  activeTab={activeTab}\n                />\n              </SettingsCardContent>\n            </SettingsCard>\n          </Box>\n        )}\n        \n        \n        {getTabContent(activeTab) === 5 && !isChannel && (\n          <Box component={motion.div} \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n          >\n            <LoginSettingsTab />\n          </Box>\n        )}\n        \n        \n        <Snackbar \n          open={snackbar.open} \n          autoHideDuration={6000} \n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert \n            onClose={handleCloseSnackbar} \n            severity={snackbar.severity} \n            variant=\"filled\"\n            sx={{ \n              width: '100%',\n              bgcolor: severity => severity === 'success' ? 'rgba(46, 125, 50, 0.9)' : \n                        severity === 'error' ? 'rgba(211, 47, 47, 0.9)' :\n                        severity === 'warning' ? 'rgba(237, 108, 2, 0.9)' : 'rgba(2, 136, 209, 0.9)',\n              backdropFilter: 'blur(4px)'\n            }}\n          >\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n        \n        \n        <Dialog\n          open={telegramDialogOpen}\n          onClose={() => setTelegramDialogOpen(false)}\n          aria-labelledby=\"telegram-dialog-title\"\n          maxWidth=\"sm\"\n          fullWidth\n          PaperProps={{\n            sx: {\n              borderRadius: 3,\n              boxShadow: theme.shadows[10],\n              background: 'rgba(18, 18, 18, 0.95)',\n              border: '1px solid rgba(255, 255, 255, 0.05)'\n            }\n          }}\n        >\n          <DialogTitle sx={{ borderBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}` }}>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"h6\">Подключение Telegram</Typography>\n              <IconButton onClick={() => setTelegramDialogOpen(false)} size=\"small\">\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </Box>\n          </DialogTitle>\n          <DialogContent sx={{ mt: 2 }}>\n            <Typography variant=\"body2\" sx={{ mb: 3 }}>\n              Для подключения Telegram введите ваш Telegram ID, который вы можете получить через бота <strong>@getmyid_bot</strong>.\n            </Typography>\n            \n            <Alert severity=\"warning\" sx={{ mb: 3 }}>\n              <Typography variant=\"body2\">\n                <strong>Внимание:</strong> Не вводите чужой ID. Это может привести к отправке уведомлений не тому человеку.\n              </Typography>\n            </Alert>\n            \n            <TextField\n              fullWidth\n              label=\"Telegram ID\"\n              variant=\"outlined\"\n              value={telegramIdInput}\n              onChange={(e) => setTelegramIdInput(e.target.value)}\n              error={!!telegramIdError}\n              helperText={telegramIdError || 'Введите ваш числовой ID из Telegram'}\n              disabled={savingTelegramId}\n              sx={{\n                '& .MuiOutlinedInput-root': {\n                  borderRadius: 2\n                }\n              }}\n            />\n            \n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                href=\"https://t.me/getmyid_bot\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                startIcon={<TelegramIcon />}\n                sx={{ borderRadius: 2, textTransform: 'none' }}\n              >\n                Открыть @getmyid_bot\n              </Button>\n            </Box>\n          </DialogContent>\n          <DialogActions sx={{ p: 2, pt: 0 }}>\n            <Button \n              onClick={() => setTelegramDialogOpen(false)} \n              color=\"inherit\"\n              sx={{ borderRadius: 2 }}\n            >\n              Отмена\n            </Button>\n            <Button \n              onClick={handleSaveTelegramId} \n              variant=\"contained\" \n              color=\"primary\"\n              disabled={savingTelegramId || !telegramIdInput.trim()}\n              sx={{ borderRadius: 2, textTransform: 'none' }}\n            >\n              {savingTelegramId ? (\n                <>\n                  <CircularProgress size={20} sx={{ mr: 1 }} color=\"inherit\" />\n                  Сохранение...\n                </>\n              ) : \"Подключить Telegram\"}\n            </Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Dialog\n          open={warningsDialogOpen}\n          onClose={() => setWarningsDialogOpen(false)}\n          maxWidth=\"md\"\n          fullWidth\n          sx={{\n            '& .MuiDialog-paper': {\n              borderRadius: 1, \n              background: 'rgba(12, 12, 12, 0.95)',\n              backdropFilter: 'blur(10px)',\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',\n              border: '1px solid rgba(255, 255, 255, 0.05)'\n            }\n          }}\n        >\n          <DialogTitle>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <HistoryIcon sx={{ mr: 1 }} />\n              История предупреждений\n            </Box>\n          </DialogTitle>\n          \n          <DialogContent dividers>\n            {loadingWarnings ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n                <CircularProgress size={40} />\n              </Box>\n            ) : userWarnings.length > 0 ? (\n              <Box>\n                \n                <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n                  <TableContainer component={Paper} sx={{ bgcolor: 'background.paper', borderRadius: 2 }}>\n                    <Table>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Дата</TableCell>\n                          <TableCell>Причина</TableCell>\n                          <TableCell>Детали</TableCell>\n                          <TableCell>Статус</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {userWarnings.map((warning) => (\n                          <TableRow key={warning.id}>\n                            <TableCell>{formatWarningDate(warning.created_at)}</TableCell>\n                            <TableCell>{warning.reason}</TableCell>\n                            <TableCell sx={{ maxWidth: 250, overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                              {warning.details}\n                            </TableCell>\n                            <TableCell>\n                              <Chip \n                                label={warning.active ? \"Активно\" : \"Снято\"} \n                                color={warning.active ? \"warning\" : \"default\"}\n                                size=\"small\"\n                              />\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Box>\n                \n                \n                <Box sx={{ display: { xs: 'flex', md: 'none' }, flexDirection: 'column', gap: 2 }}>\n                  {userWarnings.map((warning) => (\n                    <Paper \n                      key={warning.id} \n                      elevation={1} \n                      sx={{ \n                        p: 2, \n                        borderRadius: 2,\n                        border: `1px solid ${warning.active ? alpha(theme.palette.warning.main, 0.3) : alpha(theme.palette.divider, 0.2)}`,\n                        background: warning.active ? alpha(theme.palette.warning.main, 0.05) : 'transparent'\n                      }}\n                    >\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                        <Typography variant=\"subtitle2\" sx={{ fontWeight: 600 }}>\n                          {warning.reason}\n                        </Typography>\n                        <Chip \n                          label={warning.active ? \"Активно\" : \"Снято\"} \n                          color={warning.active ? \"warning\" : \"default\"}\n                          size=\"small\"\n                          sx={{ height: 22, fontSize: '0.75rem' }}\n                        />\n                      </Box>\n                      \n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\" sx={{ mb: 1 }}>\n                        {formatWarningDate(warning.created_at)}\n                      </Typography>\n                      \n                      {warning.details && (\n                        <Typography variant=\"body2\" sx={{ \n                          mt: 1, \n                          fontSize: '0.875rem',\n                          color: alpha(theme.palette.text.primary, 0.8) \n                        }}>\n                          {warning.details}\n                        </Typography>\n                      )}\n                    </Paper>\n                  ))}\n                </Box>\n              </Box>\n            ) : (\n              <Box sx={{ p: 3, textAlign: 'center' }}>\n                <VerifiedUserIcon sx={{ fontSize: 48, color: 'success.main', mb: 2 }} />\n                <Typography variant=\"h6\">\n                  Нет предупреждений\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  У вас нет активных или прошлых предупреждений.\n                </Typography>\n              </Box>\n            )}\n          </DialogContent>\n          \n          <DialogActions>\n            <Button onClick={() => setWarningsDialogOpen(false)} color=\"primary\">\n              Закрыть\n            </Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <SettingsBottomNavigation \n          activeTab={activeTab} \n          onTabChange={handleTabChange}\n          user={user}\n        />\n        \n        <Box sx={{ mt: 4, borderTop: '1px solid rgba(255, 255, 255, 0.12)', pt: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Безопасность и устройства\n          </Typography>\n          \n          <Button\n            variant=\"contained\"\n            onClick={handleOpenSessionManager}\n            sx={{ \n              mt: 2, \n              borderRadius: 2,\n              py: 1.8,\n              justifyContent: 'flex-start',\n              textTransform: 'none',\n              backgroundColor: 'rgba(16, 16, 16, 0.9)',\n              backgroundImage: 'linear-gradient(45deg, rgba(16, 16, 16, 0.9), rgba(22, 22, 22, 0.9))',\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              border: '1px solid rgba(208, 188, 255, 0.1)',\n              color: '#fff',\n              '&:hover': {\n                backgroundColor: 'rgba(22, 22, 22, 0.9)',\n                backgroundImage: 'linear-gradient(45deg, rgba(22, 22, 22, 0.9), rgba(30, 30, 30, 0.9))',\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n                transform: 'translateY(-2px)',\n                transition: 'all 0.3s ease'\n              },\n              width: '100%'\n            }}\n            startIcon={\n              <DevicesIcon sx={{ \n                color: '#d0bcff',\n                fontSize: '1.5rem'\n              }} />\n            }\n          >\n            <Box sx={{ \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'flex-start',\n              ml: 1\n            }}>\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 500, color: '#fff' }}>\n                Управление сессиями\n              </Typography>\n              <Typography variant=\"caption\" sx={{ color: '#d0bcff' }}>\n                Устройства, подключенные к аккаунту\n              </Typography>\n            </Box>\n          </Button>\n        </Box>\n        \n        {/* Session Manager Dialog */}\n        <SessionManager \n          open={sessionManagerOpen} \n          onClose={handleCloseSessionManager} \n        />\n\n        {/* Добавляем кнопку удаления канала только если это канал */}\n        {profileData?.user?.account_type === 'channel' && (\n          <Box sx={{ mt: 4, mb: 4, textAlign: 'center' }}>\n            <Button\n              onClick={() => setDeleteChannelDialogOpen(true)}\n              sx={{\n                color: 'text.secondary',\n                '&:hover': {\n                  color: 'error.main',\n                },\n              }}\n            >\n              Удалить канал\n            </Button>\n          </Box>\n        )}\n\n        <DeleteChannelDialog\n          open={deleteChannelDialogOpen}\n          onClose={() => setDeleteChannelDialogOpen(false)}\n          channelId={profileData?.user?.id}\n          onDelete={handleDeleteChannelSuccess}\n        />\n\n        {/* Add this button where you want it to appear */}\n\n             <ConnectionModal \n          open={connectionModalOpen}\n          onClose={() => setConnectionModalOpen(false)}\n        /> \n      </SettingsContainer>\n    </motion.div>\n  );\n};\n\n\nconst ThemeSelector = ({ onThemeSelect }) => {\n  const theme = useTheme();\n  const { themeSettings } = useContext(ThemeSettingsContext);\n  const currentTheme = localStorage.getItem('theme') || 'dark';\n  \n  const themes = [\n    {\n      id: 'dark',\n      name: 'Темная тема',\n      bg: '#131313',\n      paper: '#1c1c1c',\n      primary: '#D0BCFF',\n      textColor: '#FFFFFF'\n    },\n    {\n      id: 'light',\n      name: 'Светлая тема',\n      bg: '#f5f5f5',\n      paper: '#ffffff',\n      primary: '#8c52ff',\n      textColor: '#121212'\n    },\n    {\n      id: 'contrast',\n      name: 'Контрастная',\n      bg: '#080808',\n      paper: '#101010',\n      primary: '#7B46E3',\n      textColor: '#FFFFFF'\n    }\n  ];\n\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Готовые темы оформления\n      </Typography>\n      <Grid container spacing={2}>\n        {themes.map(themeOption => (\n          <Grid item xs={12} sm={4} key={themeOption.id}>\n            <Box\n              onClick={() => onThemeSelect(themeOption.id)}\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                border: `2px solid ${currentTheme === themeOption.id ? \n                  (themeSettings.primaryColor || theme.palette.primary.main) : \n                  theme.palette.mode === 'light' ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.1)'}`,\n                borderRadius: 2,\n                overflow: 'hidden',\n                cursor: 'pointer',\n                transition: 'all 0.2s',\n                '&:hover': {\n                  transform: 'translateY(-4px)',\n                  boxShadow: theme.palette.mode === 'light' \n                    ? '0 4px 20px rgba(0,0,0,0.1)' \n                    : '0 4px 20px rgba(0,0,0,0.2)'\n                }\n              }}\n            >\n              <Box sx={{ height: 120, bgcolor: themeOption.bg, position: 'relative', p: 1 }}>\n                <Box sx={{ height: 24, bgcolor: themeOption.paper, borderRadius: 1, mb: 1 }} />\n                <Box sx={{ display: 'flex', gap: 1, height: 60 }}>\n                  <Box sx={{ width: '30%', bgcolor: themeOption.paper, borderRadius: 1 }} />\n                  <Box sx={{ width: '70%', bgcolor: themeOption.paper, borderRadius: 1, position: 'relative' }}>\n                    <Box sx={{ position: 'absolute', width: 30, height: 6, bgcolor: themeOption.primary, borderRadius: 1, top: 10, left: 10 }} />\n                  </Box>\n                </Box>\n              </Box>\n              <Box \n                sx={{ \n                  p: 1.5, \n                  bgcolor: themeOption.paper, \n                  color: themeOption.textColor\n                }}\n              >\n                <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                  {themeOption.name}\n                </Typography>\n              </Box>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\n\nconst handleOpenSessionManager = () => {\n  setSessionManagerOpen(true);\n};\n\nconst handleCloseSessionManager = () => {\n  setSessionManagerOpen(false);\n};\n\nexport default SettingsPage;\n"],"names":["NotificationService$1","getVapidPublicKey","hardcodedVapidKey","registerServiceWorker","navigator","Error","existingRegistrations","serviceWorker","getRegistrations","reg","active","scriptURL","includes","registration","register","scope","updateViaCache","installing","addEventListener","e","target","state","error","subscribeToPushNotifications","Notification","permission","this","requestNotificationPermission","controller","ready","vapidPublicKey","convertedVapidKey","urlBase64ToUint8Array","subscription","pushManager","getSubscription","currentServerKey","Uint8Array","options","applicationServerKey","needsResubscribe","length","i","unsubscribe","subscribe","userVisibleOnly","subscribeError","saveSubscription","unsubscribeFromPushNotifications","axios","delete","data","endpoint","subscriptionJSON","payload","toJSON","send_test","platform","getBrowserInfo","url","post","response","userAgent","browserName","match","getNotificationPermissionStatus","window","requestPermission","isPushNotificationSupported","parseNotificationLink","link","startsWith","type","username","split","postId","commentId","replyId","fetchNotificationContent","notification","linkInfo","postResponse","get","success","post_data","commentResponse","comment_data","comment","replyResponse","reply_data","base64String","base64","replace","binaryStr","atob","outputArray","charCodeAt","isSafari","test","isIOS","message","sendTestNotification","title","body","_interopRequireDefault","require$$0","Object","defineProperty","Brush","value","default","_createSvgIcon","_jsxRuntime","require$$2","jsx","d","SettingsBottomNavigation","activeTab","onTabChange","user","navigate","useNavigate","isChannel","account_type","theme","useTheme","themeSettings","useContext","ThemeSettingsContext","borderColor","palette","mode","alpha","divider","common","white","textColor","text","primary","Paper","sx","position","bottom","left","right","display","xs","md","zIndex","borderTop","background","backdropFilter","WebkitBackdropFilter","boxShadow","elevation","children","jsxs","BottomNavigation","onChange","event","newValue","bgcolor","height","justifyContent","alignItems","marginTop","color","primaryColor","main","BottomNavigationAction","label","icon","Icon","width","minWidth","fontSize","BrushIcon","AlternateEmailIcon","LoginSettingsTab","setUsername","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","hasCredentials","setHasCredentials","isLoading","setIsLoading","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","snackbar","setSnackbar","open","severity","useEffect","async","fetch","method","credentials","headers","ok","json","checkCredentials","showNotification","handleCloseSnackbar","SettingsCard","SettingsCardContent","SectionTitle","variant","Alert","mb","onSubmit","preventDefault","validateForm","isValid","JSON","stringify","Grid","container","spacing","item","TextField","fullWidth","helperText","margin","Button","disabled","mt","CircularProgress","size","Snackbar","autoHideDuration","onClose","Straighten","ConnectionModal","searchQuery","setSearchQuery","searchResults","setSearchResults","connections","setConnections","pendingConnection","setPendingConnection","receivedConnection","setReceivedConnection","loading","setLoading","setError","view","setView","anchorEl","setAnchorEl","menuUserId","setMenuUserId","fetchConnections","pending","find","conn","connection_status","received","some","err","addConnection","connection_type","removeConnection","timer","setTimeout","query","encodeURIComponent","results","searchUsers","clearTimeout","handleMenuOpen","handleMenuClose","isMobile","innerWidth","Modal","maxWidth","minHeight","borderRadius","overflow","backgroundImage","IconButton","onClick","top","CloseIcon","Box","p","textAlign","Typography","Avatar","src","id","photo","alt","mr","name","gap","map","connection","days","dateStr","date","Date","now","diff","Math","floor","getDaysSince","confirmed_at","flex","is_confirmed","Fragment","userId","currentTarget","MoreVertIcon","Menu","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ml","placeholder","InputProps","startAdornment","InputAdornment","SearchIcon","List","ListItem","ListItemAvatar","ListItemText","secondary","is_connected","py","Palette","Facebook","__esModule","t","_getRequireWildcardCache","_interopRequireWildcard","has","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","set","require$$1","require$$3","WeakMap","r","Twitter","Instagram","YouTube","NotificationsActive","Cloud","ShoppingBag","Colorize","DeleteChannelDialog","channelId","onDelete","confirmationText","setConfirmationText","isDeleting","setIsDeleting","Dialog","DialogTitle","DialogContent","gutterBottom","DialogActions","IOSSwitch","styled","props","Switch","focusVisibleClassName","disableRipple","padding","transitionDuration","transform","backgroundColor","opacity","border","grey","boxSizing","transition","transitions","create","duration","SettingsContainer","Container","marginBottom","breakpoints","down","paddingBottom","SettingsHeader","Card","paper","CardContent","fontWeight","black","shape","bg","cursor","StyledTabs","Tabs","textTransform","StyledTab","Tab","FileInput","ElementIcon","SvgIcon","AumbentIcon","viewBox","x","y","rx","fill","getSocialIcon","lowerUrl","toLowerCase","FacebookIcon","TwitterIcon","InstagramIcon","TelegramIcon","YouTubeIcon","xmlns","lowerName","PublicIcon","PurchaseDialogHeader","flexDirection","UsernameShopTab","useMediaQuery","enqueueSnackbar","useSnackbar","usernameData","setUsernameData","purchasing","setPurchasing","purchased","setPurchased","userPoints","setUserPoints","openConfirmDialog","setOpenConfirmDialog","selectedUsername","setSelectedUsername","isChangingActive","setIsChangingActive","openPurchaseDialog","setOpenPurchaseDialog","purchaseAnimation","setPurchaseAnimation","purchaseComplete","setPurchaseComplete","limitReached","setLimitReached","userSubscription","setUserSubscription","usernameLimit","setUsernameLimit","reason","prev","fetchPurchasedUsernames","fetchUserPoints","newLimit","subscriptionType","subscription_type","Infinity","fetchSubscriptionStatus","usernames","points","handleSetActive","usernameObj","getLengthFactor","formatDate","dateString","Intl","DateTimeFormat","year","month","day","hour","minute","format","mx","InfoIcon","paragraph","style","Divider","my","StraightenIcon","flexWrap","Chip","TrendingUpIcon","AttachMoneyIcon","startIcon","ShoppingCartIcon","alignSelf","LockIcon","href","SupportAgentIcon","trim","delayDebounceFn","calculateUsernamePrice","borderWidth","marginLeft","endAdornment","edge","ClearIcon","available","owned","CheckCircleIcon","popularity","toFixed","letterSpacing","price","handleOpenPurchaseDialog","px","AccountBalanceWalletIcon","BadgeIcon","TableContainer","Table","TableHead","TableRow","TableCell","borderBottom","TableBody","is_active","wordBreak","overflowWrap","price_paid","purchase_date","is_current","PaperProps","DialogContentText","pt","username_id","userDataStr","localStorage","getItem","userData","parse","setItem","Promise","resolve","new_balance","errorData","errorMessage","limit_reached","donation_url","DecorationItem","customStyles","maxHeight","pointerEvents","DecorationPreview","decoration","isImage","content","backgroundSize","backgroundPosition","SettingsPage","updateUserData","AuthContext","updateThemeSettings","userDecorations","setUserDecorations","loadingDecorations","setLoadingDecorations","setActiveTab","saving","setSaving","setSuccess","autoSaveTimeout","setAutoSaveTimeout","sessionManagerOpen","setSessionManagerOpen","accountStatus","setAccountStatus","userWarnings","setUserWarnings","warningsDialogOpen","setWarningsDialogOpen","loadingWarnings","setLoadingWarnings","banInfo","setBanInfo","setName","about","setAbout","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","bannerFile","setBannerFile","bannerPreview","setBannerPreview","socials","setSocials","userAchievements","setUserAchievements","loadingAchievements","setLoadingAchievements","updatingActiveBadge","setUpdatingActiveBadge","elementConnected","setElementConnected","elementLinking","setElementLinking","elementToken","setElementToken","loadingElementStatus","setLoadingElementStatus","socialDialogOpen","setSocialDialogOpen","newSocialName","setNewSocialName","newSocialLink","setNewSocialLink","settings","setSettings","background_color","container_color","welcome_bubble_color","avatar_border_color","button_primary_color","button_primary_border_color","button_edit_color","button_edit_border_color","info_bubble_color","info_bubble_border_color","popup_alert_color","header_color","bottom_nav_color","content_color","notificationPrefs","setNotificationPrefs","pushNotificationsEnabled","telegramNotificationsEnabled","telegramConnected","loadingNotificationPrefs","setLoadingNotificationPrefs","savingNotificationPrefs","setSavingNotificationPrefs","pushNotificationSupported","setPushNotificationSupported","pushSubscriptionStatus","setPushSubscriptionStatus","pushSupported","setPushSupported","pushPermission","setPushPermission","pushSubscribed","setPushSubscribed","pushLoading","setPushLoading","telegramDialogOpen","setTelegramDialogOpen","telegramIdInput","setTelegramIdInput","telegramIdError","setTelegramIdError","savingTelegramId","setSavingTelegramId","profileData","setProfileData","purchasedBadges","setPurchasedBadges","loadingPurchasedBadges","setLoadingPurchasedBadges","isCustomProfileActive","setIsCustomProfileActive","deleteChannelDialogOpen","setDeleteChannelDialogOpen","connectionModalOpen","setConnectionModalOpen","fetchProfileData","fetchUserAchievements","fetchUserWarnings","fetchUserDecorations","handleStorageChange","key","checkElementStatus","removeItem","removeEventListener","decorations","checkElementOnFocus","ProfileService","getProfile","avatar_url","banner_url","profile_id","undefined","element_connected","elem_id","settingsData","getSettings","achievements","fetchPurchasedBadges","purchases","handleSetActiveBadge","achievementId","achievement_id","checkPushSupport","isSupported","PushNotifications","checkSubscription","then","isSubscribed","catch","pushEnabled","push_notifications_enabled","telegramEnabled","telegram_notifications_enabled","telegram_connected","loadNotificationPreferences","NotificationService","setupCaching","swRegistered","pushSW","checkNotificationSupport","handleTabChange","getTabContent","tabIndex","isConnected","connected","warnings","account_status","ban_info","formatWarningDate","toLocaleString","StatusSettings","onStatusUpdate","statusText","setStatusText","statusColor","setStatusColor","hasError","setHasError","setErrorMessage","isSaving","setIsSaving","isPremium","setIsPremium","isUltimate","setIsUltimate","initialLoaded","setInitialLoaded","selectedIcon","setSelectedIcon","customColorOpen","setCustomColorOpen","availableIcons","component","CloudIcon","MusicNoteIcon","LocationOnIcon","CakeIcon","ChatIcon","main_account_id","hasValidSubscription","main_account_subscription","hasUltimateSubscription","statusTextToUse","status_text","parsedStatus","parseStatusText","iconName","statusColorToUse","status_color","iconTagRegex","result","handlePresetColorClick","getFullStatusText","StatusPreview","gradientColor","hexColor","parseInt","substr","g","b","min","max","toString","padStart","createGradientColor","marginRight","PersonIcon","filter","borderStyle","whiteSpace","textOverflow","getIconByName","gridTemplateColumns","handleIconSelect","FormHelperTextProps","presetColors","ColorizeIcon","shadows","pb","PaletteIcon","presetColor","light","is_channel","CheckIcon","AlertTitle","motion","div","initial","animate","exit","ArrowBackIcon","scrollButtons","allowScrollButtonsMobile","centered","overflowX","scrollbarWidth","AccountCircleIcon","NotificationsIcon","EmojiEventsIcon","sm","className","htmlFor","PhotoCameraIcon","DeleteIcon","accept","file","reader","FileReader","onloadend","readAsDataURL","handleAvatarChange","files","banner","objectFit","onError","onerror","generatePlaceholder","handleBannerChange","inputProps","maxLength","multiline","rows","statusData","prevData","FavoriteIcon","SaveIcon","hasErrors","responses","formData","FormData","append","push","failedResponses","forEach","resp","align","social","index","rel","textDecoration","ListItemSecondaryAction","deleteSocial","handleDeleteSocial","AddIcon","FormControl","InputLabel","Select","addSocial","SecurityIcon","VerifiedUserIcon","WarningAmberIcon","BlockIcon","openWarningsDialog","HistoryIcon","end_date","remaining_days","details","fontStyle","ThemeSelector","onThemeSelect","newSettings","saveThemeSetting","expires","setTime","getTime","cookie","toUTCString","documentElement","setAttribute","cssKey","document","setProperty","themeData","paperColor","headerColor","bottomNavColor","contentColor","themeMode","sessionStorage","updateSettings","dispatchEvent","Event","checked","newProfileId","item_path","path","styles","styleObj","reduce","acc","s","handleToggleDecoration","decorationId","isActive","decoration_id","profile_background_url","hidden","NotificationsActiveIcon","disablePadding","ListItemIcon","primaryTypographyProps","prefError","testError","subError","newTelegramEnabled","apiError","LinkIcon","handleCancelElementLinking","handleLinkElement","randomToken","random","substring","generateElementToken","checkInterval","setInterval","clearInterval","achievement","RemoveCircleOutlineIcon","ShieldIcon","image_path","bage","WebkitLineClamp","WebkitBoxOrient","ShoppingBagIcon","Link","StorefrontIcon","dangerouslySetInnerHTML","__html","telegram_id","dividers","warning","created_at","handleOpenSessionManager","DevicesIcon","SessionManager","handleCloseSessionManager","location","currentTheme","themes","themeOption"],"mappings":"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","x_google_ignoreList":[1,4,6,7,8,9,10,11,12,13,14]}