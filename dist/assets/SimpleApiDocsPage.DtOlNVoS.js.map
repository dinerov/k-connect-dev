{"version":3,"file":"SimpleApiDocsPage.DtOlNVoS.js","sources":["../../node_modules/@mui/icons-material/Api.js","../../node_modules/@mui/icons-material/Http.js","../../src/pages/Info/SimpleApiDocsPage.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14 12-2 2-2-2 2-2zm-2-6 2.12 2.12 2.5-2.5L12 1 7.38 5.62l2.5 2.5zm-6 6 2.12-2.12-2.5-2.5L1 12l4.62 4.62 2.5-2.5zm12 0-2.12 2.12 2.5 2.5L23 12l-4.62-4.62-2.5 2.5zm-6 6-2.12-2.12-2.5 2.5L12 23l4.62-4.62-2.5-2.5z\"\n}), 'Api');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5zm2.5-.5h1.5V15H10v-4.5h1.5V9H7zm5.5 0H14V15h1.5v-4.5H17V9h-4.5zm9-1.5H18v6h1.5v-2h2c.8 0 1.5-.7 1.5-1.5v-1c0-.8-.7-1.5-1.5-1.5m0 2.5h-2v-1h2z\"\n}), 'Http');","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Divider,\n  Paper,\n  Tabs,\n  Tab,\n  Card,\n  CardContent,\n  Chip,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport ApiIcon from '@mui/icons-material/Api';\nimport HttpIcon from '@mui/icons-material/Http';\nimport CodeIcon from '@mui/icons-material/Code';\nimport LockIcon from '@mui/icons-material/Lock';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport PeopleIcon from '@mui/icons-material/People';\nimport SearchIcon from '@mui/icons-material/Search';\nimport QueueMusicIcon from '@mui/icons-material/QueueMusic';\nimport StorefrontIcon from '@mui/icons-material/Storefront';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport SportsEsportsIcon from '@mui/icons-material/SportsEsports';\nconst PageContainer = styled(Container)(({ theme }) => ({\n  paddingTop: theme.spacing(4),\n  paddingBottom: theme.spacing(8),\n}));\nconst ApiTitle = styled(Typography)(({ theme }) => ({\n  fontWeight: 700,\n  marginBottom: theme.spacing(3),\n  padding: theme.spacing(1, 0),\n  borderBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n  display: 'flex',\n  alignItems: 'center',\n  '& svg': {\n    marginRight: theme.spacing(1),\n    color: theme.palette.primary.main,\n  }\n}));\nconst SectionTitle = styled(Typography)(({ theme }) => ({\n  fontWeight: 600,\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  '& svg': {\n    marginRight: theme.spacing(1),\n    color: theme.palette.primary.main,\n  }\n}));\nconst ApiCard = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(3),\n  borderRadius: theme.spacing(2),\n  overflow: 'visible',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    boxShadow: theme.shadows[4],\n    transform: 'translateY(-2px)',\n  }\n}));\nconst MethodChip = styled(Chip)(({ theme, method }) => {\n  const colors = {\n    GET: {\n      bg: '#e3f2fd',\n      color: '#1565c0'\n    },\n    POST: {\n      bg: '#e8f5e9',\n      color: '#2e7d32'\n    },\n    PUT: {\n      bg: '#fff8e1',\n      color: '#f57f17'\n    },\n    DELETE: {\n      bg: '#ffebee',\n      color: '#c62828'\n    },\n    PATCH: {\n      bg: '#e0f7fa',\n      color: '#00838f'\n    }\n  };\n  const defaultColor = {\n    bg: alpha(theme.palette.text.primary, 0.1),\n    color: theme.palette.text.primary\n  };\n  const color = colors[method] || defaultColor;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? alpha(color.color, 0.2) : color.bg,\n    color: color.color,\n    fontWeight: 600,\n    fontSize: '0.75rem',\n    height: 24,\n  };\n});\nconst EndpointPath = styled(Typography)(({ theme }) => ({\n  fontFamily: 'monospace',\n  padding: theme.spacing(0.5, 1),\n  backgroundColor: alpha(theme.palette.background.default, 0.5),\n  borderRadius: theme.spacing(0.5),\n  fontSize: '0.9rem',\n  fontWeight: 500,\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}));\nconst CodeBlock = styled(Box)(({ theme }) => ({\n  fontFamily: 'monospace',\n  fontSize: '0.9rem',\n  padding: theme.spacing(1.5),\n  backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.background.default, 0.4) : alpha(theme.palette.background.default, 0.7),\n  borderRadius: theme.spacing(1),\n  overflowX: 'auto',\n  border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n  '&::-webkit-scrollbar': {\n    height: '4px',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    backgroundColor: alpha(theme.palette.primary.main, 0.2),\n    borderRadius: '2px',\n  }\n}));\nconst ApiEndpoint = ({ method, path, description, authRequired, request, response }) => {\n  const theme = useTheme();\n  return (\n    <ApiCard elevation={2}>\n      <CardContent>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n          <MethodChip \n            label={method} \n            method={method}\n            size=\"small\"\n            sx={{ mr: 2 }}\n          />\n          <EndpointPath>\n            {path}\n          </EndpointPath>\n          {authRequired && (\n            <Chip \n              icon={<LockIcon fontSize=\"small\" />}\n              label=\"Требуется авторизация\"\n              size=\"small\"\n              sx={{ ml: 2, fontSize: '0.7rem' }}\n            />\n          )}\n        </Box>\n        <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n          {description}\n        </Typography>\n        <Divider sx={{ my: 2 }} />\n        <Typography variant=\"subtitle2\" sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n          <HttpIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Пример запроса:\n        </Typography>\n        <CodeBlock>\n          {request}\n        </CodeBlock>\n        <Typography variant=\"subtitle2\" sx={{ mt: 2, mb: 1, display: 'flex', alignItems: 'center' }}>\n          <CodeIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Пример ответа:\n        </Typography>\n        <CodeBlock>\n          {response}\n        </CodeBlock>\n      </CardContent>\n    </ApiCard>\n  );\n};\nconst SimpleApiDocsPage = () => {\n  const theme = useTheme();\n  const [activeTab, setActiveTab] = React.useState(0);\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  return (\n    <PageContainer maxWidth=\"lg\">\n      <ApiTitle variant=\"h4\">\n        <ApiIcon fontSize=\"large\" />\n        Документация API К-Коннект\n      </ApiTitle>\n      <Typography variant=\"body1\" paragraph>\n        Здесь вы найдете документацию по API К-Коннект с примерами запросов и ответов.\n        API позволяет взаимодействовать с системой программно для разработки собственных интеграций.\n      </Typography>\n      <Paper sx={{ borderRadius: theme.spacing(2), mb: 4 }}>\n        <Tabs \n          value={activeTab} \n          onChange={handleTabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          sx={{ px: 2 }}\n        >\n          <Tab label=\"Авторизация\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Профиль\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Посты\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Комментарии\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Уведомления\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Лидерборд\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Поиск\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Музыка\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Магазин бейджиков\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Баг-репорты\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n          <Tab label=\"Мини-игры\" sx={{ textTransform: 'none', fontWeight: 500 }} />\n        </Tabs>\n      </Paper>\n      {activeTab === 0 && (\n        <>\n          <Box sx={{ \n            mb: 4, \n            p: 3, \n            borderRadius: 2,\n            backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.primary.main, 0.05) : alpha(theme.palette.primary.main, 0.03),\n            border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`,\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <SecurityIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\n              <Typography variant=\"h6\">API доступ и безопасность</Typography>\n            </Box>\n            <Typography variant=\"body2\" paragraph>\n              API К-Коннект защищено от несанкционированного доступа с помощью CORS и механизма проверки API-ключей. Для использования API из внешних приложений или скриптов необходимо получить API-ключ.\n            </Typography>\n            \n            <SectionTitle variant=\"subtitle2\">Ограничения CORS</SectionTitle>\n            <Typography variant=\"body2\" paragraph>\n              По умолчанию API доступно только для запросов с домена k-connect.ru и локальных разработочных сред. Для доступа из внешних приложений используйте API-ключ.\n            </Typography>\n            \n            <SectionTitle variant=\"subtitle2\">Использование API-ключа</SectionTitle>\n            <Typography variant=\"body2\" paragraph>\n              Для обхода ограничений CORS и получения доступа к API из любого приложения, необходимо добавить специальный заголовок <code>X-API-Key</code> ко всем запросам.\n            </Typography>\n            \n            <CodeBlock>\n{`// Пример запроса с API-ключом\nfetch('https://k-connect.ru/api/posts', {\n  method: 'GET',\n  headers: {\n    'X-API-Key': 'ваш-api-ключ-здесь'\n  }\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Ошибка:', error));`}\n            </CodeBlock>\n            \n            <SectionTitle variant=\"subtitle2\">Получение API-ключа</SectionTitle>\n            <Typography variant=\"body2\" paragraph>\n              API-ключ можно получить у администрации К-Коннект. Для получения ключа необходимо:\n            </Typography>\n            <ol>\n              <li>Быть зарегистрированным пользователем К-Коннект</li>\n              <li>Отправить запрос администрации с описанием цели использования API</li>\n              <li>После одобрения запроса вам будет выдан персональный API-ключ</li>\n            </ol>\n            <Typography variant=\"body2\" sx={{ \n              mt: 2, \n              p: 2, \n              borderRadius: 1,\n              backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.warning.main, 0.1) : alpha(theme.palette.warning.main, 0.05),\n              color: theme.palette.warning.main,\n              border: `1px solid ${alpha(theme.palette.warning.main, 0.3)}`,\n            }}>\n              <b>Важно:</b> Храните ваш API-ключ в безопасности и не передавайте его третьим лицам. Ключ может быть отозван в случае нарушения правил использования API.\n            </Typography>\n          </Box>\n          \n          <Box sx={{ \n            mb: 4, \n            p: 3, \n            borderRadius: 2,\n            backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.primary.main, 0.05) : alpha(theme.palette.primary.main, 0.03),\n            border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`,\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <SecurityIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\n              <Typography variant=\"h6\">Общая информация об авторизации</Typography>\n            </Box>\n            <Typography variant=\"body2\" paragraph>\n              В К-Коннект используется авторизация через cookie-сессии. После успешного входа, сервер устанавливает HTTP-only cookie с JWT-токеном, который автоматически отправляется с каждым последующим запросом. Безопасность обеспечивается использованием HTTP-only cookies, проверкой источника запроса и другими механизмами защиты.\n            </Typography>\n            <SectionTitle variant=\"subtitle2\">Авторизация и сессии</SectionTitle>\n            <ul>\n              <li>Для авторизации используется JWT-токен, который хранится в HTTP-only cookie</li>\n              <li>После успешного входа в систему, токен будет автоматически включаться с каждым последующим запросом</li>\n              <li>Безопасность обеспечивается через использование HTTP-only cookies и проверку источника запроса</li>\n            </ul>\n            <SectionTitle variant=\"subtitle2\">Процесс авторизации:</SectionTitle>\n            <ol>\n              <li>Выполните запрос на <code>/api/auth/login</code> с указанием логина и пароля</li>\n              <li>При успешной авторизации сервер вернет токен в HTTP-only cookie</li>\n              <li>Для запросов, требующих авторизации, токен будет автоматически включаться в запрос</li>\n            </ol>\n          </Box>\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/auth/login\"\n            description=\"Авторизация пользователя в системе. Успешный вход устанавливает cookie для сессии.\"\n            authRequired={false}\n            request={\n`POST /api/auth/login\nContent-Type: application/json\n{\n  \"email\": \"user@example.com\",\n  \"password\": \"password\"\n}`\n            }\n            response={\n`{\n  \"success\": true,\n  \"user\": {\n    \"id\": 123,\n    \"username\": \"username\",\n    \"name\": \"Имя Пользователя\",\n    \"photo\": \"/static/uploads/avatar/123/photo.jpg\",\n    \"is_admin\": false\n  }\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/auth/logout\"\n            description=\"Выход из системы и удаление сессии.\"\n            authRequired={true}\n            request={\n`POST /api/auth/logout`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Logged out successfully\"\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/auth/register\"\n            description=\"Регистрация нового пользователя.\"\n            authRequired={false}\n            request={\n`POST /api/auth/register\nContent-Type: application/json\n{\n  \"email\": \"user@example.com\",\n  \"password\": \"password\",\n  \"name\": \"Имя Пользователя\",\n  \"username\": \"username\"\n}`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Registration successful\",\n  \"user\": {\n    \"id\": 123,\n    \"username\": \"username\",\n    \"email\": \"user@example.com\"\n  }\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/auth/check\"\n            description=\"Проверка текущего статуса авторизации.\"\n            authRequired={false}\n            request={\n`GET /api/auth/check`\n            }\n            response={\n`{\n  \"authenticated\": true,\n  \"user\": {\n    \"id\": 123,\n    \"username\": \"username\",\n    \"name\": \"Имя Пользователя\",\n    \"photo\": \"/static/uploads/avatar/123/photo.jpg\"\n  }\n}`\n            }\n          />\n        </>\n      )}\n      {activeTab === 1 && (\n        <>\n          <SectionTitle variant=\"h5\">\n            <ApiIcon fontSize=\"medium\" sx={{ mr: 1 }} />\n            API профиля пользователя\n          </SectionTitle>\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/profile/:username\"\n            description=\"Получение информации о профиле пользователя по username.\"\n            authRequired={false}\n            request={\n`GET /api/profile/username`\n            }\n            response={\n`{\n  \"user\": {\n    \"id\": 123,\n    \"username\": \"username\",\n    \"name\": \"Имя Пользователя\",\n    \"photo\": \"/static/uploads/avatar/123/photo.jpg\",\n    \"about\": \"Информация о пользователе\",\n    \"created_at\": \"2023-05-20T12:00:00Z\",\n    \"followers_count\": 42,\n    \"following_count\": 21,\n    \"posts_count\": 15,\n    \"verified\": true,\n    \"is_followed\": false\n  }\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"PUT\"\n            path=\"/api/profile/edit\"\n            description=\"Обновление информации о своем профиле.\"\n            authRequired={true}\n            request={\n`PUT /api/profile/edit\nContent-Type: application/json\n{\n  \"name\": \"Новое имя\",\n  \"about\": \"Новая информация о себе\",\n  \"status\": \"Новый статус\"\n}`\n            }\n            response={\n`{\n  \"success\": true,\n  \"user\": {\n    \"id\": 123,\n    \"username\": \"username\",\n    \"name\": \"Новое имя\",\n    \"about\": \"Новая информация о себе\",\n    \"status\": \"Новый статус\"\n  }\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/profile/:username/follow\"\n            description=\"Подписка на пользователя.\"\n            authRequired={true}\n            request={\n`POST /api/profile/username/follow`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Вы подписались на пользователя\",\n  \"is_followed\": true,\n  \"followers_count\": 43\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/profile/:username/unfollow\"\n            description=\"Отписка от пользователя.\"\n            authRequired={true}\n            request={\n`POST /api/profile/username/unfollow`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Вы отписались от пользователя\",\n  \"is_followed\": false,\n  \"followers_count\": 42\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/profile/:username/followers\"\n            description=\"Получение списка подписчиков пользователя.\"\n            authRequired={false}\n            request={\n`GET /api/profile/username/followers?page=1&per_page=20`\n            }\n            response={\n`{\n  \"followers\": [\n    {\n      \"id\": 124,\n      \"username\": \"follower1\",\n      \"name\": \"Подписчик 1\",\n      \"photo\": \"/static/uploads/avatar/124/photo.jpg\",\n      \"is_followed\": true\n    },\n  ],\n  \"total\": 42,\n  \"page\": 1,\n  \"pages\": 3\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/profile/:username/following\"\n            description=\"Получение списка подписок пользователя.\"\n            authRequired={false}\n            request={\n`GET /api/profile/username/following?page=1&per_page=20`\n            }\n            response={\n`{\n  \"following\": [\n    {\n      \"id\": 126,\n      \"username\": \"following1\",\n      \"name\": \"Подписка 1\",\n      \"photo\": \"/static/uploads/avatar/126/photo.jpg\",\n      \"is_followed\": true\n    },\n  ],\n  \"total\": 21,\n  \"page\": 1,\n  \"pages\": 2\n}`\n            }\n          />\n        </>\n      )}\n      {activeTab === 2 && (\n        <>\n          <SectionTitle variant=\"h5\">\n            <ApiIcon fontSize=\"medium\" sx={{ mr: 1 }} />\n            API постов\n          </SectionTitle>\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/posts\"\n            description=\"Получение списка постов. По умолчанию возвращает глобальную ленту.\"\n            authRequired={false}\n            request={\n`GET /api/posts?page=1&per_page=20`\n            }\n            response={\n`{\n  \"posts\": [\n    {\n      \"id\": 456,\n      \"text\": \"Пример текста поста\",\n      \"author\": {\n        \"id\": 123,\n        \"username\": \"author\",\n        \"name\": \"Автор поста\",\n        \"photo\": \"/static/uploads/avatar/123/photo.jpg\"\n      },\n      \"created_at\": \"2023-05-20T12:00:00Z\",\n      \"likes_count\": 10,\n      \"comments_count\": 5,\n      \"is_liked\": false,\n      \"media\": [\"/static/uploads/post/456/image.jpg\"]\n    }\n  ],\n  \"total\": 50,\n  \"page\": 1,\n  \"pages\": 3\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/posts/feed\"\n            description=\"Получение персонализированной ленты постов (от тех, на кого подписан пользователь).\"\n            authRequired={true}\n            request={\n`GET /api/posts/feed?page=1&per_page=20`\n            }\n            response={\n`{\n  \"posts\": [\n    {\n      \"id\": 457,\n      \"text\": \"Пост из ленты подписок\",\n      \"author\": {\n        \"id\": 124,\n        \"username\": \"followed\",\n        \"name\": \"Пользователь из подписок\",\n        \"photo\": \"/static/uploads/avatar/124/photo.jpg\"\n      },\n      \"created_at\": \"2023-05-20T13:00:00Z\",\n      \"likes_count\": 15,\n      \"comments_count\": 3,\n      \"is_liked\": true,\n      \"media\": []\n    }\n  ],\n  \"total\": 30,\n  \"page\": 1,\n  \"pages\": 2\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/posts/:post_id\"\n            description=\"Получение детальной информации о конкретном посте.\"\n            authRequired={false}\n            request={\n`GET /api/posts/456`\n            }\n            response={\n`{\n  \"post\": {\n    \"id\": 456,\n    \"text\": \"Пример текста поста\",\n    \"author\": {\n      \"id\": 123,\n      \"username\": \"author\",\n      \"name\": \"Автор поста\",\n      \"photo\": \"/static/uploads/avatar/123/photo.jpg\"\n    },\n    \"created_at\": \"2023-05-20T12:00:00Z\",\n    \"likes_count\": 10,\n    \"comments_count\": 5,\n    \"is_liked\": false,\n    \"media\": [\"/static/uploads/post/456/image.jpg\"],\n    \"comments\": [\n      {\n        \"id\": 789,\n        \"text\": \"Комментарий к посту\",\n        \"author\": {\n          \"id\": 125,\n          \"username\": \"commenter\",\n          \"name\": \"Комментатор\",\n          \"photo\": \"/static/uploads/avatar/125/photo.jpg\"\n        },\n        \"created_at\": \"2023-05-20T12:30:00Z\",\n        \"likes_count\": 2,\n        \"is_liked\": false\n      }\n    ]\n  }\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/posts\"\n            description=\"Создание нового поста.\"\n            authRequired={true}\n            request={\n`POST /api/posts\nContent-Type: application/json\n{\n  \"text\": \"Текст нового поста\",\n  \"media\": [\"/static/uploads/post/temp/image.jpg\"]\n}`\n            }\n            response={\n`{\n  \"success\": true,\n  \"post\": {\n    \"id\": 458,\n    \"text\": \"Текст нового поста\",\n    \"author\": {\n      \"id\": 123,\n      \"username\": \"author\",\n      \"name\": \"Автор поста\",\n      \"photo\": \"/static/uploads/avatar/123/photo.jpg\"\n    },\n    \"created_at\": \"2023-05-20T14:00:00Z\",\n    \"likes_count\": 0,\n    \"comments_count\": 0,\n    \"is_liked\": false,\n    \"media\": [\"/static/uploads/post/458/image.jpg\"]\n  }\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"DELETE\"\n            path=\"/api/posts/:post_id\"\n            description=\"Удаление поста. Доступно только автору поста или администратору.\"\n            authRequired={true}\n            request={\n`DELETE /api/posts/458`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Пост успешно удален\"\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/posts/:post_id/like\"\n            description=\"Лайк поста.\"\n            authRequired={true}\n            request={\n`POST /api/posts/456/like`\n            }\n            response={\n`{\n  \"success\": true,\n  \"is_liked\": true,\n  \"likes_count\": 11\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/posts/:post_id/unlike\"\n            description=\"Удаление лайка с поста.\"\n            authRequired={true}\n            request={\n`POST /api/posts/456/unlike`\n            }\n            response={\n`{\n  \"success\": true,\n  \"is_liked\": false,\n  \"likes_count\": 10\n}`\n            }\n          />\n        </>\n      )}\n      {activeTab === 3 && (\n        <>\n          <SectionTitle variant=\"h5\">\n            <ApiIcon fontSize=\"medium\" sx={{ mr: 1 }} />\n            API комментариев\n          </SectionTitle>\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/posts/:post_id/comments\"\n            description=\"Получение списка комментариев к посту.\"\n            authRequired={false}\n            request={\n`GET /api/posts/456/comments?page=1&per_page=20`\n            }\n            response={\n`{\n  \"comments\": [\n    {\n      \"id\": 789,\n      \"text\": \"Комментарий к посту\",\n      \"author\": {\n        \"id\": 125,\n        \"username\": \"commenter\",\n        \"name\": \"Комментатор\",\n        \"photo\": \"/static/uploads/avatar/125/photo.jpg\"\n      },\n      \"created_at\": \"2023-05-20T12:30:00Z\",\n      \"likes_count\": 2,\n      \"is_liked\": false\n    }\n  ],\n  \"total\": 5,\n  \"page\": 1,\n  \"pages\": 1\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/posts/:post_id/comments\"\n            description=\"Добавление комментария к посту.\"\n            authRequired={true}\n            request={\n`POST /api/posts/456/comments\nContent-Type: application/json\n{\n  \"text\": \"Текст нового комментария\"\n}`\n            }\n            response={\n`{\n  \"success\": true,\n  \"comment\": {\n    \"id\": 790,\n    \"text\": \"Текст нового комментария\",\n    \"author\": {\n      \"id\": 123,\n      \"username\": \"author\",\n      \"name\": \"Автор комментария\",\n      \"photo\": \"/static/uploads/avatar/123/photo.jpg\"\n    },\n    \"created_at\": \"2023-05-20T14:30:00Z\",\n    \"likes_count\": 0,\n    \"is_liked\": false\n  }\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"DELETE\"\n            path=\"/api/comments/:comment_id\"\n            description=\"Удаление комментария. Доступно только автору комментария или администратору.\"\n            authRequired={true}\n            request={\n`DELETE /api/comments/790`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Комментарий успешно удален\"\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/comments/:comment_id/like\"\n            description=\"Лайк комментария.\"\n            authRequired={true}\n            request={\n`POST /api/comments/789/like`\n            }\n            response={\n`{\n  \"success\": true,\n  \"is_liked\": true,\n  \"likes_count\": 3\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/comments/:comment_id/unlike\"\n            description=\"Удаление лайка с комментария.\"\n            authRequired={true}\n            request={\n`POST /api/comments/789/unlike`\n            }\n            response={\n`{\n  \"success\": true,\n  \"is_liked\": false,\n  \"likes_count\": 2\n}`\n            }\n          />\n        </>\n      )}\n      {activeTab === 4 && (\n        <>\n          <SectionTitle variant=\"h5\">\n            <ApiIcon fontSize=\"medium\" sx={{ mr: 1 }} />\n            API уведомлений\n          </SectionTitle>\n          <ApiEndpoint \n            method=\"GET\"\n            path=\"/api/notifications\"\n            description=\"Получение списка уведомлений текущего пользователя.\"\n            authRequired={true}\n            request={\n`GET /api/notifications?page=1&per_page=20`\n            }\n            response={\n`{\n  \"notifications\": [\n    {\n      \"id\": 321,\n      \"type\": \"like\",\n      \"text\": \"Пользователь лайкнул ваш пост\",\n      \"is_read\": false,\n      \"created_at\": \"2023-05-20T12:00:00Z\",\n      \"link\": \"/post/456\",\n      \"from_user\": {\n        \"id\": 125,\n        \"username\": \"liker\",\n        \"name\": \"Пользователь\",\n        \"photo\": \"/static/uploads/avatar/125/photo.jpg\"\n      }\n    },\n    {\n      \"id\": 322,\n      \"type\": \"comment\",\n      \"text\": \"Пользователь прокомментировал ваш пост\",\n      \"is_read\": true,\n      \"created_at\": \"2023-05-20T11:30:00Z\",\n      \"link\": \"/post/456\",\n      \"from_user\": {\n        \"id\": 126,\n        \"username\": \"commenter\",\n        \"name\": \"Комментатор\",\n        \"photo\": \"/static/uploads/avatar/126/photo.jpg\"\n      }\n    }\n  ],\n  \"unread_count\": 1,\n  \"total\": 10,\n  \"page\": 1,\n  \"pages\": 1\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/notifications/read-all\"\n            description=\"Пометить все уведомления как прочитанные.\"\n            authRequired={true}\n            request={\n`POST /api/notifications/read-all`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Все уведомления помечены как прочитанные\",\n  \"unread_count\": 0\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/notifications/:notification_id/read\"\n            description=\"Пометить конкретное уведомление как прочитанное.\"\n            authRequired={true}\n            request={\n`POST /api/notifications/321/read`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Уведомление помечено как прочитанное\",\n  \"unread_count\": 0\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"POST\"\n            path=\"/api/push/subscribe\"\n            description=\"Подписка на push-уведомления.\"\n            authRequired={true}\n            request={\n`POST /api/push/subscribe\nContent-Type: application/json\n{\n  \"subscription\": {\n    \"endpoint\": \"https:\n    \"keys\": {\n      \"p256dh\": \"...\",\n      \"auth\": \"...\"\n    }\n  }\n}`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Подписка на push-уведомления успешно создана\"\n}`\n            }\n          />\n          <ApiEndpoint \n            method=\"DELETE\"\n            path=\"/api/push/unsubscribe\"\n            description=\"Отписка от push-уведомлений.\"\n            authRequired={true}\n            request={\n`DELETE /api/push/unsubscribe\nContent-Type: application/json\n{\n  \"endpoint\": \"https:\n}`\n            }\n            response={\n`{\n  \"success\": true,\n  \"message\": \"Подписка на push-уведомления успешно удалена\"\n}`\n            }\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/notifications/test\"\n            description=\"Отправка тестового push-уведомления текущему пользователю.\"\n            authRequired={true}\n            request={`POST /api/notifications/test\nContent-Type: application/json\n{\n  \"title\": \"Тестовое уведомление\",\n  \"body\": \"Это тестовое push-уведомление\",\n  \"url\": \"/notifications\"\n}`}\n            response={`{\n  \"success\": true,\n  \"message\": \"Тестовое уведомление отправлено\"\n}`}\n          />\n        </>\n      )}\n      {activeTab === 5 && (\n        <>\n          <ApiTitle>\n            <PeopleIcon fontSize=\"large\" />\n            Лидерборд\n          </ApiTitle>\n          <SectionTitle>Лидерборд пользователей и расчет очков</SectionTitle>\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/leaderboard\"\n            description=\"Получение рейтинга пользователей по их активности за определенный период.\"\n            authRequired={false}\n            request={`GET /api/leaderboard?period=week`}\n            response={`{\n  \"leaderboard\": [\n    {\n      \"user_id\": 123,\n      \"name\": \"Пользователь\",\n      \"username\": \"username\",\n      \"avatar_url\": \"/static/uploads/avatar/123/photo.jpg\",\n      \"score\": 250,\n      \"verification\": {\n        \"status\": 1\n      },\n      \"achievement\": {\n        \"bage\": \"Название достижения\",\n        \"image_path\": \"badge.svg\"\n      }\n    },\n  ],\n  \"period\": \"week\",\n  \"total\": 25,\n  \"page\": 1,\n  \"pages\": 3\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/leaderboard/user/:user_id\"\n            description=\"Получение статистики конкретного пользователя в лидерборде.\"\n            authRequired={false}\n            request={`GET /api/leaderboard/user/123`}\n            response={`{\n  \"user_id\": 123,\n  \"name\": \"Пользователь\",\n  \"username\": \"username\",\n  \"avatar_url\": \"/static/uploads/avatar/123/photo.jpg\",\n  \"rank\": {\n    \"week\": 5,\n    \"month\": 7,\n    \"all_time\": 15\n  },\n  \"score\": {\n    \"week\": 120,\n    \"month\": 350,\n    \"all_time\": 1200\n  },\n  \"stats\": {\n    \"posts_count\": 15,\n    \"likes_received\": 73,\n    \"comments_count\": 42,\n    \"comment_likes\": 25,\n    \"replies_count\": 18,\n    \"reply_likes\": 11,\n    \"reposts_count\": 7\n  }\n}`}\n          />\n        </>\n      )}\n      {activeTab === 6 && (\n        <>\n          <ApiTitle>\n            <SearchIcon fontSize=\"large\" />\n            Поиск\n          </ApiTitle>\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/search\"\n            description=\"Поиск пользователей и постов по запросу.\"\n            authRequired={false}\n            request={`GET /api/search?q=запрос&type=all&page=1&per_page=10`}\n            response={`{\n  \"users\": [\n  ],\n  \"posts\": [\n    {\n      \"id\": 456,\n      \"content\": \"Текст поста, содержащий запрос\",\n      \"timestamp\": \"2023-06-15T14:30:45\",\n      \"image\": \"/static/uploads/post/456/image.jpg\",\n      \"video\": null,\n      \"user\": {\n        \"id\": 123,\n        \"name\": \"Пользователь\",\n        \"username\": \"username\",\n        \"photo\": \"/static/uploads/avatar/123/avatar.png\"\n      }\n    }\n  ]\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/search\"\n            description=\"Поиск только пользователей.\"\n            authRequired={false}\n            request={`GET /api/search?q=запрос&type=users&page=1&per_page=20`}\n            response={`{\n  \"users\": [\n  ],\n  \"has_next\": true,\n  \"total\": 35,\n  \"page\": 1,\n  \"pages\": 2\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/search\"\n            description=\"Поиск только постов.\"\n            authRequired={false}\n            request={`GET /api/search?q=запрос&type=posts&page=1&per_page=20`}\n            response={`{\n  \"posts\": [\n    {\n      \"id\": 456,\n      \"content\": \"Текст поста, содержащий запрос\",\n      \"timestamp\": \"2023-06-15T14:30:45\",\n      \"image\": \"/static/uploads/post/456/image.jpg\",\n      \"video\": null,\n      \"user\": {\n        \"id\": 123,\n        \"name\": \"Пользователь\",\n        \"username\": \"username\",\n        \"photo\": \"/static/uploads/avatar/123/avatar.png\"\n      }\n    }\n  ],\n  \"has_next\": true,\n  \"total\": 42,\n  \"page\": 1,\n  \"pages\": 3\n}`}\n          />\n        </>\n      )}\n      {activeTab === 7 && (\n        <>\n          <ApiTitle>\n            <QueueMusicIcon fontSize=\"large\" />\n            Музыка\n          </ApiTitle>\n          \n          <Box sx={{ \n            mb: 4, \n            p: 3, \n            borderRadius: 2,\n            backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.warning.main, 0.05) : alpha(theme.palette.warning.main, 0.03),\n            border: `1px solid ${alpha(theme.palette.warning.main, 0.1)}`,\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <SecurityIcon sx={{ mr: 1, color: theme.palette.warning.main }} />\n              <Typography variant=\"h6\">Специальный ключ для загрузки музыки</Typography>\n            </Box>\n            <Typography variant=\"body2\" paragraph>\n              Для загрузки треков и текстов песен используется отдельный ключ доступа. В отличие от общего API-ключа, \n              музыкальный ключ работает только с эндпоинтами загрузки музыки.\n            </Typography>\n            \n            <SectionTitle variant=\"subtitle2\">Использование X-Key для загрузки треков</SectionTitle>\n            <Typography variant=\"body2\" paragraph>\n              При загрузке треков (/api/music/upload) или текстов песен (/api/music/&lt;track_id&gt;/lyrics/upload), \n              необходимо добавить заголовок <code>X-Key</code> с соответствующим ключом, полученным у администрации.\n            </Typography>\n            \n            <CodeBlock>\n{`// Пример запроса для загрузки трека с X-Key\nfetch('https://k-connect.ru/api/music/upload', {\n  method: 'POST',\n  headers: {\n    'X-Key': 'ваш-ключ-для-музыки'\n  },\n  body: formData // FormData с файлами и метаданными трека\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Ошибка:', error));`}\n            </CodeBlock>\n            \n            <Typography variant=\"body2\" sx={{ \n              mt: 2, \n              p: 2, \n              borderRadius: 1,\n              backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.info.main, 0.1) : alpha(theme.palette.info.main, 0.05),\n              color: theme.palette.info.main,\n              border: `1px solid ${alpha(theme.palette.info.main, 0.3)}`,\n            }}>\n              <b>Примечание:</b> Музыкальный ключ (X-Key) работает <i>только</i> с эндпоинтами загрузки. Для других операций с музыкой используйте стандартный API-ключ (X-API-Key).\n            </Typography>\n          </Box>\n          \n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/music\"\n            description=\"Получение списка всей музыки с пагинацией.\"\n            authRequired={false}\n            request={`GET /api/music?page=1&per_page=20`}\n            response={`{\n  \"success\": true,\n  \"tracks\": [\n  ],\n  \"total\": 100,\n  \"pages\": 5,\n  \"current_page\": 1\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/music/user/:user_id\"\n            description=\"Получение музыки конкретного пользователя.\"\n            authRequired={false}\n            request={`GET /api/music/user/456`}\n            response={`{\n  \"success\": true,\n  \"tracks\": [\n  ],\n  \"total\": 5,\n  \"pages\": 1,\n  \"current_page\": 1,\n  \"user\": {\n    \"id\": 456,\n    \"name\": \"Загрузивший пользователь\",\n    \"username\": \"username\",\n    \"avatar_url\": \"/static/uploads/avatar/456/avatar.png\"\n  }\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/music/:track_id\"\n            description=\"Получение информации о конкретном треке.\"\n            authRequired={false}\n            request={`GET /api/music/123`}\n            response={`{\n  \"success\": true,\n  \"track\": {\n    \"id\": 123,\n    \"title\": \"Название трека\",\n    \"artist\": \"Исполнитель\",\n    \"album\": \"Альбом\",\n    \"duration\": 180,\n    \"file_path\": \"/static/music/456/123/track.mp3\",\n    \"cover_path\": \"/static/music/456/123/cover.jpg\",\n    \"user_id\": 456,\n    \"user_name\": \"Загрузивший пользователь\",\n    \"user_username\": \"username\",\n    \"genre\": \"Жанр\",\n    \"description\": \"Описание трека\",\n    \"plays_count\": 42,\n    \"likes_count\": 15,\n    \"created_at\": \"2023-06-15T14:30:45\",\n    \"is_liked\": false\n  }\n}`}\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/music/:track_id/like\"\n            description=\"Лайк трека.\"\n            authRequired={true}\n            request={`POST /api/music/123/like`}\n            response={`{\n  \"success\": true,\n  \"is_liked\": true,\n  \"likes_count\": 16\n}`}\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/music/:track_id/play\"\n            description=\"Увеличение счетчика проигрываний трека.\"\n            authRequired={false}\n            request={`POST /api/music/123/play`}\n            response={`{\n  \"success\": true,\n  \"plays_count\": 43\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/music/popular\"\n            description=\"Получение популярных треков.\"\n            authRequired={false}\n            request={`GET /api/music/popular?limit=10`}\n            response={`{\n  \"success\": true,\n  \"tracks\": [\n  ]\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/music/search\"\n            description=\"Поиск треков по названию, исполнителю или альбому.\"\n            authRequired={false}\n            request={`GET /api/music/search?q=запрос&page=1&per_page=20`}\n            response={`{\n  \"success\": true,\n  \"tracks\": [\n  ],\n  \"total\": 3,\n  \"pages\": 1,\n  \"current_page\": 1\n}`}\n          />\n          \n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/music/upload\"\n            description=\"Загрузка нового трека. Требует специальный ключ доступа в заголовке X-Key.\"\n            authRequired={true}\n            request={`POST /api/music/upload\nContent-Type: multipart/form-data\nX-Key: ваш-ключ-для-загрузки-музыки\n\n{\n  \"title\": \"Название трека\",\n  \"artist\": \"Исполнитель\",\n  \"album\": \"Название альбома\",\n  \"genre\": \"Жанр\",\n  \"description\": \"Описание трека\",\n  \"duration\": 180,\n  \"file\": [аудио-файл],\n  \"cover\": [изображение обложки]\n}`}\n            response={`{\n  \"success\": true,\n  \"message\": \"Трек успешно загружен\",\n  \"track\": {\n    \"id\": 123,\n    \"title\": \"Название трека\",\n    \"artist\": \"Исполнитель\",\n    \"file_path\": \"/static/music/456/123/1620000000_track.mp3\",\n    \"cover_path\": \"/static/music/456/123/1620000000_cover.jpg\"\n  }\n}`}\n          />\n          \n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/music/:track_id/lyrics/upload\"\n            description=\"Загрузка текста песни для существующего трека. Требует специальный ключ доступа в заголовке X-Key.\"\n            authRequired={true}\n            request={`POST /api/music/123/lyrics/upload\nContent-Type: application/json\nX-Key: ваш-ключ-для-загрузки-музыки\n\n{\n  \"synced_lyrics\": [\n    {\n      \"startTimeMs\": 0,\n      \"text\": \"Первая строка песни\"\n    },\n    {\n      \"startTimeMs\": 3000,\n      \"text\": \"Вторая строка песни\"\n    }\n  ]\n}`}\n            response={`{\n  \"success\": true,\n  \"message\": \"Synchronized lyrics uploaded successfully\",\n  \"path\": \"/static/uploads/lyrics/track_123.json\",\n  \"copyright_notice\": \"Убедитесь, что вы не нарушаете авторские права при добавлении текстов песен\"\n}`}\n          />\n        </>\n      )}\n      {activeTab === 8 && (\n        <>\n          <ApiTitle>\n            <StorefrontIcon fontSize=\"large\" />\n            Магазин бейджиков\n          </ApiTitle>\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/badges/shop\"\n            description=\"Получение списка всех доступных бейджиков в магазине.\"\n            authRequired={true}\n            request={`GET /api/badges/shop`}\n            response={`{\n  \"badges\": [\n    {\n      \"id\": 123,\n      \"name\": \"Название бейджика\",\n      \"description\": \"Описание бейджика\",\n      \"image_path\": \"f8a72b3e-5c21-4a9b-b77d-1234567890ab.svg\",\n      \"price\": 100,\n      \"creator_id\": 456,\n      \"creator\": {\n        \"id\": 456,\n        \"username\": \"username\",\n        \"name\": \"Создатель\",\n        \"avatar_url\": \"/static/uploads/avatar/456/avatar.png\"\n      },\n      \"copies_sold\": 5,\n      \"max_copies\": 10,\n      \"is_sold_out\": false,\n      \"purchases\": [\n        {\n          \"buyer_id\": 789,\n          \"buyer\": {\n            \"id\": 789,\n            \"username\": \"buyer\",\n            \"name\": \"Покупатель\",\n            \"avatar_url\": \"/static/uploads/avatar/789/avatar.png\"\n          },\n          \"purchase_date\": \"2023-06-15T14:30:45\"\n        }\n      ]\n    }\n  ]\n}`}\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/badges/purchase/:badge_id\"\n            description=\"Покупка бейджика из магазина.\"\n            authRequired={true}\n            request={`POST /api/badges/purchase/123`}\n            response={`{\n  \"success\": true,\n  \"message\": \"Бейджик успешно приобретен\",\n  \"badge\": {\n    \"id\": 123,\n    \"name\": \"Название бейджика\",\n    \"image_path\": \"shop/f8a72b3e-5c21-4a9b-b77d-1234567890ab.svg\",\n    \"points_spent\": 100,\n    \"points_remaining\": 250\n  }\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/user/points\"\n            description=\"Получение баланса баллов пользователя.\"\n            authRequired={true}\n            request={`GET /api/user/points`}\n            response={`{\n  \"points\": 350,\n  \"user_id\": 789\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/badges/purchases\"\n            description=\"Получение списка приобретенных пользователем бейджиков.\"\n            authRequired={true}\n            request={`GET /api/badges/purchases`}\n            response={`{\n  \"purchases\": [\n    {\n      \"id\": 1,\n      \"badge_id\": 123,\n      \"badge\": {\n        \"id\": 123,\n        \"name\": \"Название бейджика\",\n        \"description\": \"Описание бейджика\",\n        \"image_path\": \"f8a72b3e-5c21-4a9b-b77d-1234567890ab.svg\",\n        \"price\": 100,\n        \"creator_id\": 456\n      },\n      \"price_paid\": 100,\n      \"purchase_date\": \"2023-06-15T14:30:45\",\n      \"achievement_id\": 5\n    }\n  ]\n}`}\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/badges/create\"\n            description=\"Создание нового бейджика в магазине. Требует 300 баллов.\"\n            authRequired={true}\n            request={`POST /api/badges/create\nContent-Type: multipart/form-data\n{\n  \"name\": \"Название бейджика\",\n  \"description\": \"Описание бейджика\",\n  \"price\": 100,\n  \"max_copies\": 10,\n  \"image\": [файл SVG]\n}`}\n            response={`{\n  \"message\": \"Бейджик успешно создан\",\n  \"badge_id\": 123\n}`}\n          />\n        </>\n      )}\n      {activeTab === 9 && (\n        <>\n          <ApiTitle>\n            <BugReportIcon fontSize=\"large\" />\n            Баг-репорты\n          </ApiTitle>\n          <Typography variant=\"body2\" paragraph>\n            API для системы отслеживания багов, позволяющее пользователям сообщать о проблемах.\n          </Typography>\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/bugs\"\n            description=\"Получение списка зарегистрированных багов.\"\n            authRequired={false}\n            request={`GET /api/bugs`}\n            response={`{\n  \"success\": true,\n  \"bugs\": [\n    {\n      \"id\": 123,\n      \"subject\": \"Проблема с регистрацией\",\n      \"text\": \"При регистрации через Google выдает ошибку\",\n      \"date\": \"2023-06-15T14:30:45\",\n      \"site_link\": \"https://k-connect.ru/register\",\n      \"status\": \"Открыт\",\n      \"user_id\": 456,\n      \"user_name\": \"Имя Пользователя\",\n      \"user_avatar\": \"/static/uploads/avatar/456/photo.jpg\",\n      \"image_name\": \"abc123.jpg\",\n      \"image_url\": \"/static/BugUpload/Images/abc123.jpg\",\n      \"likes_count\": 5,\n      \"is_liked_by_user\": false\n    }\n  ]\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/bugs/:bug_id\"\n            description=\"Получение детальной информации о конкретном баге с комментариями.\"\n            authRequired={false}\n            request={`GET /api/bugs/123`}\n            response={`{\n  \"success\": true,\n  \"bug\": {\n    \"id\": 123,\n    \"subject\": \"Проблема с регистрацией\",\n    \"text\": \"При регистрации через Google выдает ошибку\",\n    \"date\": \"2023-06-15T14:30:45\",\n    \"site_link\": \"https://k-connect.ru/register\",\n    \"status\": \"Открыт\",\n    \"user_id\": 456,\n    \"user_name\": \"Имя Пользователя\",\n    \"user_avatar\": \"/static/uploads/avatar/456/photo.jpg\",\n    \"image_name\": \"abc123.jpg\",\n    \"image_url\": \"/static/BugUpload/Images/abc123.jpg\",\n    \"likes_count\": 5,\n    \"is_liked_by_user\": false,\n    \"comments\": [\n      {\n        \"id\": 789,\n        \"comment_text\": \"Это происходит только в Chrome или во всех браузерах?\",\n        \"timestamp\": \"2023-06-15T15:00:00\",\n        \"user_id\": 567,\n        \"user_name\": \"Администратор\",\n        \"user_avatar\": \"/static/uploads/avatar/567/photo.jpg\"\n      }\n    ]\n  }\n}`}\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/bugs\"\n            description=\"Добавление нового баг-репорта.\"\n            authRequired={false}\n            request={`POST /api/bugs\nContent-Type: multipart/form-data\n{\n  \"subject\": \"Проблема с регистрацией\",\n  \"text\": \"При регистрации через Google выдает ошибку\",\n  \"site_link\": \"https://k-connect.ru/register\",\n  \"image\": [файл изображения]\n}`}\n            response={`{\n  \"success\": true,\n  \"message\": \"Баг успешно добавлен\",\n  \"bug_id\": 124,\n  \"status\": \"Открыт\"\n}`}\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/bugs/:bug_id/comments\"\n            description=\"Добавление комментария к баг-репорту.\"\n            authRequired={true}\n            request={`POST /api/bugs/123/comments\nContent-Type: application/json\n{\n  \"comment_text\": \"У меня тоже возникла эта проблема\"\n}`}\n            response={`{\n  \"success\": true,\n  \"comment\": {\n    \"id\": 790,\n    \"comment_text\": \"У меня тоже возникла эта проблема\",\n    \"timestamp\": \"2023-06-15T16:00:00\",\n    \"user_id\": 789,\n    \"user_name\": \"Имя Пользователя\",\n    \"user_avatar\": \"/static/uploads/avatar/789/photo.jpg\"\n  }\n}`}\n          />\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/bugs/:bug_id/reaction\"\n            description=\"Лайк/подтверждение баг-репорта (чтобы показать, что проблема затрагивает нескольких пользователей).\"\n            authRequired={true}\n            request={`POST /api/bugs/123/reaction`}\n            response={`{\n  \"success\": true,\n  \"is_liked\": true,\n  \"likes_count\": 6\n}`}\n          />\n          <ApiEndpoint\n            method=\"PUT\"\n            path=\"/api/bugs/:bug_id/status\"\n            description=\"Обновление статуса баг-репорта (только для администраторов).\"\n            authRequired={true}\n            request={`PUT /api/bugs/123/status\nContent-Type: application/json\n{\n  \"status\": \"В работе\"\n}`}\n            response={`{\n  \"success\": true,\n  \"message\": \"Статус успешно обновлен\",\n  \"status\": \"В работе\"\n}`}\n          />\n        </>\n      )}\n      {activeTab === 10 && (\n        <>\n          <ApiTitle>\n            <SportsEsportsIcon fontSize=\"large\" />\n            Мини-игры\n          </ApiTitle>\n          <Typography variant=\"body2\" paragraph>\n            API для мини-игр, включающих в себя игры на очки, такие как \"Кости\" и \"Три чаши\".\n          </Typography>\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/minigames/balance\"\n            description=\"Получение баланса очков пользователя.\"\n            authRequired={true}\n            request={`GET /api/minigames/balance`}\n            response={`{\n  \"success\": true,\n  \"balance\": 500\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/minigames/games\"\n            description=\"Получение списка доступных мини-игр.\"\n            authRequired={true}\n            request={`GET /api/minigames/games`}\n            response={`{\n  \"success\": true,\n  \"games\": [\n    {\n      \"id\": \"dice\",\n      \"name\": \"Кости\",\n      \"description\": \"Бросьте кости и выиграйте, если выпадет число больше или равное 50!\",\n      \"icon\": \"casino\",\n      \"minBet\": 1,\n      \"maxBet\": 1000\n    },\n    {\n      \"id\": \"cups\",\n      \"name\": \"Три чаши\",\n      \"description\": \"Угадайте, под какой чашей находится шарик!\",\n      \"icon\": \"sports_bar\",\n      \"minBet\": 1,\n      \"maxBet\": 1000\n    }\n  ]\n}`}\n          />\n          <SectionTitle variant=\"h6\">\n            Игра \"Кости\"\n          </SectionTitle>\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/minigames/dice/roll\"\n            description=\"Сделать ставку и бросить кости.\"\n            authRequired={true}\n            request={`POST /api/minigames/dice/roll\nContent-Type: application/json\n{\n  \"bet\": 50\n}`}\n            response={`{\n  \"success\": true,\n  \"player_won\": true,\n  \"dice1\": 5,\n  \"dice2\": 6,\n  \"total\": 11,\n  \"multiplier\": 18,\n  \"is_double\": false,\n  \"bet_amount\": 50,\n  \"winnings\": 900,\n  \"message\": \"Поздравляем! Вы выиграли 900 баллов!\"\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/minigames/dice/payout-table\"\n            description=\"Получение таблицы выплат для игры в кости.\"\n            authRequired={true}\n            request={`GET /api/minigames/dice/payout-table`}\n            response={`{\n  \"success\": true,\n  \"payout_table\": [\n    {\n      \"total\": 2,\n      \"multiplier\": 36,\n      \"description\": \"2 очков - выигрыш x36\"\n    },\n    {\n      \"total\": 3,\n      \"multiplier\": 18,\n      \"description\": \"3 очков - выигрыш x18\"\n    }\n  ],\n  \"special_rules\": [\n    {\n      \"rule\": \"Дубль\",\n      \"description\": \"При выпадении двух одинаковых чисел множитель увеличивается в 1.5 раза\",\n      \"example\": \"Например, при выпадении 3+3=6, множитель будет 6 × 1.5 = 9\"\n    }\n  ]\n}`}\n          />\n          <SectionTitle variant=\"h6\">\n            Игра \"Три чаши\"\n          </SectionTitle>\n          <ApiEndpoint\n            method=\"POST\"\n            path=\"/api/minigames/cups/play\"\n            description=\"Сделать ставку и выбрать чашу.\"\n            authRequired={true}\n            request={`POST /api/minigames/cups/play\nContent-Type: application/json\n{\n  \"bet\": 100,\n  \"cup\": 2\n}`}\n            response={`{\n  \"success\": true,\n  \"player_won\": true,\n  \"correct_cup\": 2,\n  \"bet_amount\": 100,\n  \"multiplier\": 3,\n  \"winnings\": 300,\n  \"message\": \"Поздравляем! Вы угадали правильную чашу и выиграли 300 баллов!\"\n}`}\n          />\n          <ApiEndpoint\n            method=\"GET\"\n            path=\"/api/minigames/cups/info\"\n            description=\"Получение информации об игре 'Три чаши'.\"\n            authRequired={true}\n            request={`GET /api/minigames/cups/info`}\n            response={`{\n  \"success\": true,\n  \"game_info\": {\n    \"name\": \"Три чаши\",\n    \"description\": \"Угадайте, под какой чашей находится шарик!\",\n    \"rules\": \"Выберите одну из трех чаш. Если шарик находится под выбранной чашей, вы выигрываете ставку, умноженную на 3.\",\n    \"min_bet\": 1,\n    \"max_bet\": 1000,\n    \"multiplier\": 3\n  }\n}`}\n          />\n        </>\n      )}\n    </PageContainer>\n  );\n};\nexport default SimpleApiDocsPage; "],"names":["_interopRequireDefault","require$$0","Object","defineProperty","Api","value","default","_createSvgIcon","_jsxRuntime","require$$2","jsx","d","Http","PageContainer","styled","Container","theme","paddingTop","spacing","paddingBottom","ApiTitle","Typography","fontWeight","marginBottom","padding","borderBottom","alpha","palette","divider","display","alignItems","marginRight","color","primary","main","SectionTitle","marginTop","ApiCard","Card","borderRadius","overflow","transition","boxShadow","shadows","transform","MethodChip","Chip","method","defaultColor","bg","text","GET","POST","PUT","DELETE","PATCH","backgroundColor","mode","fontSize","height","EndpointPath","fontFamily","background","CodeBlock","Box","overflowX","border","ApiEndpoint","path","description","authRequired","request","response","useTheme","elevation","children","CardContent","jsxs","sx","mb","label","size","mr","icon","LockIcon","ml","variant","paragraph","Divider","my","HttpIcon","mt","CodeIcon","SimpleApiDocsPage","activeTab","setActiveTab","React","useState","maxWidth","ApiIcon","Paper","Tabs","onChange","handleTabChange","event","newValue","indicatorColor","textColor","scrollButtons","px","Tab","textTransform","Fragment","p","SecurityIcon","warning","PeopleIcon","SearchIcon","QueueMusicIcon","info","StorefrontIcon","BugReportIcon","SportsEsportsIcon"],"mappings":"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","x_google_ignoreList":[0,1]}