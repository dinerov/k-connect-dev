{"version":3,"file":"SubscriptionsPage.hkTBGGan.js","sources":["../../src/pages/Economic/SubscriptionsPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext, useCallback } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { \n  Box, \n  Container, \n  Typography, \n  Tabs, \n  Tab, \n  Avatar, \n  Button, \n  Paper, \n  CircularProgress,\n  IconButton,\n  Skeleton,\n  styled,\n  useTheme,\n  useMediaQuery,\n  Tooltip\n} from '@mui/material';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { motion } from 'framer-motion';\n\n\nconst ProfileCard = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(1.5),\n  borderRadius: theme.spacing(1.5),\n  transition: 'all 0.2s ease',\n  height: 80,\n  overflow: 'hidden',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 6px 12px rgba(0, 0, 0, 0.1)',\n  }\n}));\n\nconst LoadingContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: theme.spacing(4),\n  height: 100\n}));\n\nconst EmptyStateContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  minHeight: 150\n}));\n\n\nconst TruncatedText = styled(({ text, maxLength, variant, component, ...props }) => {\n  const needsTruncation = text && text.length > maxLength;\n  const displayText = needsTruncation ? `${text.substring(0, maxLength)}...` : text;\n\n  return (\n    <Tooltip title={needsTruncation ? text : ''} arrow placement=\"top\">\n      <Typography variant={variant} component={component} {...props}>\n        {displayText || 'Нет описания'}\n      </Typography>\n    </Tooltip>\n  );\n})(({ theme }) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n}));\n\n/**\n * SubscriptionsPage component displaying friends, followers, and following\n * @param {number} tabIndex - Default tab index to show\n */\nconst SubscriptionsPage = ({ tabIndex = 0 }) => {\n  const { username } = useParams();\n  const { user: currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  \n  const [value, setValue] = useState(tabIndex);\n  const [followers, setFollowers] = useState([]);\n  const [following, setFollowing] = useState([]);\n  const [friends, setFriends] = useState([]);\n  \n  const [isLoadingFollowers, setIsLoadingFollowers] = useState(false);\n  const [isLoadingFollowing, setIsLoadingFollowing] = useState(false);\n  const [isLoadingFriends, setIsLoadingFriends] = useState(false);\n  \n  const [pageFollowers, setPageFollowers] = useState(1);\n  const [pageFollowing, setPageFollowing] = useState(1);\n  const [pageFriends, setPageFriends] = useState(1);\n  \n  const [hasMoreFollowers, setHasMoreFollowers] = useState(true);\n  const [hasMoreFollowing, setHasMoreFollowing] = useState(true);\n  const [hasMoreFriends, setHasMoreFriends] = useState(true);\n  \n  const [profileUser, setProfileUser] = useState(null);\n  const [loadingFollow, setLoadingFollow] = useState({});\n  \n\n  const [requestState, setRequestState] = useState({\n    followersInProgress: false,\n    followingInProgress: false,\n    friendsInProgress: false,\n    profileInProgress: false,\n  });\n  \n\n  const responseCache = useRef({\n    followers: {},\n    following: {},\n    friends: {},\n    profile: {},\n  });\n  \n  const loaderRef = useRef(null);\n  \n\n  const fetchUserData = useCallback(async () => {\n    try {\n      const targetUsername = username || currentUser?.username;\n      if (!targetUsername) {\n        setProfileUser(currentUser);\n        return;\n      }\n      \n      if (currentUser && targetUsername === currentUser.username) {\n        setProfileUser(currentUser);\n        return;\n      }\n      \n\n      if (responseCache.current.profile[targetUsername]) {\n        setProfileUser(responseCache.current.profile[targetUsername]);\n        return;\n      }\n      \n      if (requestState.profileInProgress) {\n        return;\n      }\n      \n\n      setRequestState(prev => ({ ...prev, profileInProgress: true }));\n      \n      const response = await axios.get(`/api/users/${targetUsername}`);\n      \n\n      responseCache.current.profile[targetUsername] = response.data;\n      setProfileUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n    } finally {\n      setRequestState(prev => ({ ...prev, profileInProgress: false }));\n    }\n  }, [username, currentUser]);\n  \n\n  const fetchFollowers = useCallback(async () => {\n    try {\n      const targetUsername = username || currentUser?.username;\n      \n      if (!targetUsername) {\n        return;\n      }\n      \n\n      if (requestState.followersInProgress) {\n        return;\n      }\n      \n\n      const cacheKey = `${targetUsername}_1`;\n      if (responseCache.current.followers[cacheKey]) {\n        const cachedData = responseCache.current.followers[cacheKey];\n        \n\n        const followersList = cachedData.followers || [];\n        const filteredFollowers = followersList.filter(follower => !follower.is_friend);\n        \n        setFollowers(filteredFollowers);\n        setHasMoreFollowers(cachedData.has_next || false);\n        setPageFollowers(2);\n        return;\n      }\n      \n      setIsLoadingFollowers(true);\n      setRequestState(prev => ({ ...prev, followersInProgress: true }));\n      \n      const response = await axios.get(`/api/users/${targetUsername}/followers`, {\n        params: { page: 1, per_page: 20 }\n      });\n      \n\n      responseCache.current.followers[cacheKey] = response.data;\n      \n\n      const followersList = response.data.followers || [];\n      const filteredFollowers = followersList.filter(follower => !follower.is_friend);\n      \n      setFollowers(filteredFollowers);\n      setHasMoreFollowers(response.data.has_next || false);\n      setPageFollowers(2);\n    } catch (error) {\n      console.error('Error fetching followers:', error);\n    } finally {\n      setIsLoadingFollowers(false);\n      setRequestState(prev => ({ ...prev, followersInProgress: false }));\n    }\n  }, [username, currentUser]);\n  \n\n  const fetchFollowing = useCallback(async () => {\n    try {\n      const targetUsername = username || currentUser?.username;\n      \n      if (!targetUsername) {\n        return;\n      }\n      \n\n      if (requestState.followingInProgress) {\n        return;\n      }\n      \n\n      const cacheKey = `${targetUsername}_1`;\n      if (responseCache.current.following[cacheKey]) {\n        const cachedData = responseCache.current.following[cacheKey];\n        setFollowing(cachedData.following || []);\n        setHasMoreFollowing(cachedData.has_next || false);\n        setPageFollowing(2);\n        return;\n      }\n      \n      setIsLoadingFollowing(true);\n      setRequestState(prev => ({ ...prev, followingInProgress: true }));\n      \n      const response = await axios.get(`/api/users/${targetUsername}/following`, {\n        params: { page: 1, per_page: 20 }\n      });\n      \n\n      responseCache.current.following[cacheKey] = response.data;\n      \n      setFollowing(response.data.following || []);\n      setHasMoreFollowing(response.data.has_next || false);\n      setPageFollowing(2);\n    } catch (error) {\n      console.error('Error fetching following:', error);\n    } finally {\n      setIsLoadingFollowing(false);\n      setRequestState(prev => ({ ...prev, followingInProgress: false }));\n    }\n  }, [username, currentUser]);\n  \n\n  const fetchFriends = useCallback(async () => {\n    try {\n      const targetUsername = username || currentUser?.username;\n      \n      if (!targetUsername) {\n        return;\n      }\n      \n\n      if (requestState.friendsInProgress) {\n        return;\n      }\n      \n\n      const cacheKey = `${targetUsername}_1`;\n      if (responseCache.current.friends[cacheKey]) {\n        const cachedData = responseCache.current.friends[cacheKey];\n        setFriends(cachedData.friends || []);\n        setHasMoreFriends(cachedData.has_next || false);\n        setPageFriends(2);\n        return;\n      }\n      \n      setIsLoadingFriends(true);\n      setRequestState(prev => ({ ...prev, friendsInProgress: true }));\n      \n      const response = await axios.get(`/api/profile/${targetUsername}/friends`, {\n        params: { page: 1, per_page: 20 }\n      });\n      \n\n      responseCache.current.friends[cacheKey] = response.data;\n      \n      setFriends(response.data.friends || []);\n      setHasMoreFriends(response.data.has_next || false);\n      setPageFriends(2);\n    } catch (error) {\n      console.error('Error fetching friends:', error);\n    } finally {\n      setIsLoadingFriends(false);\n      setRequestState(prev => ({ ...prev, friendsInProgress: false }));\n    }\n  }, [username, currentUser]);\n  \n\n  const loadMoreFollowers = useCallback(async () => {\n    try {\n      const targetUsername = username || currentUser?.username;\n      \n\n      if (isLoadingFollowers || requestState.followersInProgress) {\n        return;\n      }\n      \n\n      const cacheKey = `${targetUsername}_${pageFollowers}`;\n      if (responseCache.current.followers[cacheKey]) {\n        const cachedData = responseCache.current.followers[cacheKey];\n        \n\n        const followersList = cachedData.followers || [];\n        const filteredFollowers = followersList.filter(follower => !follower.is_friend);\n        \n        setFollowers(prev => [...prev, ...filteredFollowers]);\n        setHasMoreFollowers(cachedData.has_next || false);\n        setPageFollowers(prev => prev + 1);\n        return;\n      }\n      \n      setIsLoadingFollowers(true);\n      setRequestState(prev => ({ ...prev, followersInProgress: true }));\n      \n      const response = await axios.get(`/api/users/${targetUsername}/followers`, {\n        params: { page: pageFollowers, per_page: 20 }\n      });\n      \n\n      responseCache.current.followers[cacheKey] = response.data;\n      \n\n      const followersList = response.data.followers || [];\n      const filteredFollowers = followersList.filter(follower => !follower.is_friend);\n      \n      setFollowers(prev => [...prev, ...filteredFollowers]);\n      setHasMoreFollowers(response.data.has_next || false);\n      setPageFollowers(prev => prev + 1);\n    } catch (error) {\n      console.error('Error loading more followers:', error);\n    } finally {\n      setIsLoadingFollowers(false);\n      setRequestState(prev => ({ ...prev, followersInProgress: false }));\n    }\n  }, [username, currentUser, pageFollowers, isLoadingFollowers, requestState.followersInProgress]);\n  \n\n  const loadMoreFollowing = useCallback(async () => {\n    try {\n      const targetUsername = username || currentUser?.username;\n      \n\n      if (isLoadingFollowing || requestState.followingInProgress) {\n        return;\n      }\n      \n\n      const cacheKey = `${targetUsername}_${pageFollowing}`;\n      if (responseCache.current.following[cacheKey]) {\n        const cachedData = responseCache.current.following[cacheKey];\n        setFollowing(prev => [...prev, ...(cachedData.following || [])]);\n        setHasMoreFollowing(cachedData.has_next || false);\n        setPageFollowing(prev => prev + 1);\n        return;\n      }\n      \n      setIsLoadingFollowing(true);\n      setRequestState(prev => ({ ...prev, followingInProgress: true }));\n      \n      const response = await axios.get(`/api/users/${targetUsername}/following`, {\n        params: { page: pageFollowing, per_page: 20 }\n      });\n      \n\n      responseCache.current.following[cacheKey] = response.data;\n      \n      setFollowing(prev => [...prev, ...(response.data.following || [])]);\n      setHasMoreFollowing(response.data.has_next || false);\n      setPageFollowing(prev => prev + 1);\n    } catch (error) {\n      console.error('Error loading more following:', error);\n    } finally {\n      setIsLoadingFollowing(false);\n      setRequestState(prev => ({ ...prev, followingInProgress: false }));\n    }\n  }, [username, currentUser, pageFollowing, isLoadingFollowing, requestState.followingInProgress]);\n  \n\n  const loadMoreFriends = useCallback(async () => {\n    try {\n      const targetUsername = username || currentUser?.username;\n      \n\n      if (isLoadingFriends || requestState.friendsInProgress) {\n        return;\n      }\n      \n\n      const cacheKey = `${targetUsername}_${pageFriends}`;\n      if (responseCache.current.friends[cacheKey]) {\n        const cachedData = responseCache.current.friends[cacheKey];\n        setFriends(prev => [...prev, ...(cachedData.friends || [])]);\n        setHasMoreFriends(cachedData.has_next || false);\n        setPageFriends(prev => prev + 1);\n        return;\n      }\n      \n      setIsLoadingFriends(true);\n      setRequestState(prev => ({ ...prev, friendsInProgress: true }));\n      \n      const response = await axios.get(`/api/profile/${targetUsername}/friends`, {\n        params: { page: pageFriends, per_page: 20 }\n      });\n      \n\n      responseCache.current.friends[cacheKey] = response.data;\n      \n      setFriends(prev => [...prev, ...(response.data.friends || [])]);\n      setHasMoreFriends(response.data.has_next || false);\n      setPageFriends(prev => prev + 1);\n    } catch (error) {\n      console.error('Error loading more friends:', error);\n    } finally {\n      setIsLoadingFriends(false);\n      setRequestState(prev => ({ ...prev, friendsInProgress: false }));\n    }\n  }, [username, currentUser, pageFriends, isLoadingFriends, requestState.friendsInProgress]);\n  \n\n  useEffect(() => {\n    fetchUserData();\n  }, [username, currentUser, fetchUserData]);\n  \n\n  useEffect(() => {\n    if (value === 0 && friends.length === 0 && !requestState.friendsInProgress) {\n      fetchFriends();\n    } else if (value === 1 && followers.length === 0 && !requestState.followersInProgress) {\n      fetchFollowers();\n    } else if (value === 2 && following.length === 0 && !requestState.followingInProgress) {\n      fetchFollowing();\n    }\n  }, [value, username, followers.length, following.length, friends.length, \n      fetchFollowers, fetchFollowing, fetchFriends, requestState]);\n  \n\n  useEffect(() => {\n    let timeoutId = null;\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        const first = entries[0];\n        if (first.isIntersecting) {\n\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          \n          timeoutId = setTimeout(() => {\n            if (value === 0 && hasMoreFriends && !isLoadingFriends && !requestState.friendsInProgress) {\n              loadMoreFriends();\n            } else if (value === 1 && hasMoreFollowers && !isLoadingFollowers && !requestState.followersInProgress) {\n              loadMoreFollowers();\n            } else if (value === 2 && hasMoreFollowing && !isLoadingFollowing && !requestState.followingInProgress) {\n              loadMoreFollowing();\n            }\n          }, 300);\n        }\n      },\n      { threshold: 0.5 }\n    );\n    \n    const currentLoader = loaderRef.current;\n    if (currentLoader) {\n      observer.observe(currentLoader);\n    }\n    \n    return () => {\n      if (currentLoader) {\n        observer.unobserve(currentLoader);\n      }\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [value, hasMoreFollowers, hasMoreFollowing, hasMoreFriends, \n      isLoadingFollowers, isLoadingFollowing, isLoadingFriends,\n      loadMoreFollowers, loadMoreFollowing, loadMoreFriends, requestState]);\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  \n\n  const clearUserCache = () => {\n    responseCache.current.followers = {};\n    responseCache.current.following = {};\n    responseCache.current.friends = {};\n  };\n  \n  const handleFollow = async (userId) => {\n    try {\n      setLoadingFollow(prev => ({ ...prev, [userId]: true }));\n      const response = await axios.post(`/api/profile/follow`, {\n        followed_id: userId\n      });\n      \n      if (response.data.success) {\n        setFollowers(prev => prev.map(user => \n          user.id === userId ? { ...user, is_following: true } : user\n        ));\n        \n        setFollowing(prev => prev.map(user => \n          user.id === userId ? { ...user, is_following: true } : user\n        ));\n        \n        setFriends(prev => prev.map(user => \n          user.id === userId ? { ...user, is_following: true } : user\n        ));\n        \n        clearUserCache();\n      }\n    } catch (error) {\n      console.error('Error following user:', error);\n    } finally {\n      setLoadingFollow(prev => ({ ...prev, [userId]: false }));\n    }\n  };\n  \n  const handleUnfollow = async (userId) => {\n    try {\n      setLoadingFollow(prev => ({ ...prev, [userId]: true }));\n      const response = await axios.post(`/api/profile/unfollow`, {\n        unfollowed_id: userId\n      });\n      \n      if (response.data.success) {\n        setFollowers(prev => prev.map(user => \n          user.id === userId ? { ...user, is_following: false } : user\n        ));\n        \n        setFollowing(prev => prev.map(user => \n          user.id === userId ? { ...user, is_following: false } : user\n        ));\n        \n        setFriends(prev => prev.map(user => \n          user.id === userId ? { ...user, is_following: false } : user\n        ));\n        \n        clearUserCache();\n      }\n    } catch (error) {\n      console.error('Error unfollowing user:', error);\n    } finally {\n      setLoadingFollow(prev => ({ ...prev, [userId]: false }));\n    }\n  };\n  \n  const renderProfileCard = (user) => {\n    const isFollowing = user.is_following;\n    const isCurrentUser = currentUser && user.id === currentUser.id;\n    const isChannel = user.account_type === 'channel';\n    \n    let avatarUrl = user.photo;\n    if (avatarUrl && !avatarUrl.startsWith('http') && !avatarUrl.startsWith('/')) {\n      avatarUrl = `/static/uploads/avatar/${user.id}/${avatarUrl}`;\n    }\n    \n    return (\n      <motion.div\n        key={user.id}\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3 }}\n      >\n        <ProfileCard>\n          <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1, minWidth: 0, flexShrink: 1 }}>\n            <Avatar\n              src={avatarUrl || '/static/uploads/avatar/system/avatar.png'}\n              alt={user.name || user.username}\n              sx={{ \n                width: 50, \n                height: 50,\n                minWidth: 50,\n                marginRight: 2,\n                border: '2px solid',\n                borderColor: 'primary.main'\n              }}\n            />\n            <Box sx={{ minWidth: 0, flex: 1, flexShrink: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <TruncatedText \n                  text={user.name || user.username}\n                  maxLength={15}\n                  variant=\"subtitle1\" \n                  component=\"a\" \n                  href={`/profile/${user.username}`}\n                  sx={{ \n                    color: 'text.primary',\n                    textDecoration: 'none', \n                    '&:hover': {\n                      color: 'primary.main'\n                    },\n                    flexShrink: 1,\n                    minWidth: 0\n                  }}\n                />\n                {user.is_verified && (\n                  <CheckCircleIcon \n                    sx={{ \n                      ml: 0.5,\n                      fontSize: 16, \n                      color: 'primary.main',\n                      flexShrink: 0\n                    }} \n                  />\n                )}\n              </Box>\n              <TruncatedText \n                text={user.about} \n                maxLength={25}\n                variant=\"body2\" \n                component=\"div\"\n                sx={{ color: 'text.secondary', flexShrink: 1, minWidth: 0 }}\n              />\n            </Box>\n          </Box>\n          \n          {!isCurrentUser && currentUser && currentUser.account_type !== 'channel' && (\n            <Box sx={{ ml: 2, flexShrink: 0 }}>\n              {isFollowing ? (\n                <IconButton\n                  onClick={() => handleUnfollow(user.id)}\n                  disabled={loadingFollow[user.id]}\n                  color=\"primary\"\n                  size=\"small\"\n                >\n                  {loadingFollow[user.id] ? (\n                    <CircularProgress size={24} />\n                  ) : (\n                    <PersonRemoveIcon />\n                  )}\n                </IconButton>\n              ) : (\n                <IconButton\n                  onClick={() => handleFollow(user.id)}\n                  disabled={loadingFollow[user.id]}\n                  color=\"primary\"\n                  size=\"small\"\n                >\n                  {loadingFollow[user.id] ? (\n                    <CircularProgress size={24} />\n                  ) : (\n                    <PersonAddIcon />\n                  )}\n                </IconButton>\n              )}\n            </Box>\n          )}\n        </ProfileCard>\n      </motion.div>\n    );\n  };\n  \n  const renderSkeletonCards = () => {\n    return Array(3).fill(0).map((_, index) => (\n      <ProfileCard key={index}>\n        <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\n          <Skeleton variant=\"circular\" width={50} height={50} sx={{ mr: 2, flexShrink: 0 }} />\n          <Box sx={{ flex: 1, minWidth: 0 }}>\n            <Skeleton variant=\"text\" width={120} />\n            <Skeleton variant=\"text\" width={200} />\n          </Box>\n          <Skeleton variant=\"circular\" width={40} height={40} sx={{ flexShrink: 0 }} />\n        </Box>\n      </ProfileCard>\n    ));\n  };\n  \n  const renderEmptyState = (type) => {\n    let message = '';\n    \n    switch(type) {\n      case 'followers':\n        message = profileUser?.account_type === 'channel' ? 'Нет подписчиков' : 'Нет подписчиков';\n        break;\n      case 'friends':\n        message = 'Нет друзей';\n        break;\n      case 'following':\n        message = 'Нет подписок';\n        break;\n      default:\n        message = 'Ничего не найдено';\n    }\n    \n    return (\n      <EmptyStateContainer>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          {message}\n        </Typography>\n        {type === 'friends' && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, maxWidth: 300 }}>\n            Друзья — это пользователи, с которыми у вас взаимные подписки\n          </Typography>\n        )}\n      </EmptyStateContainer>\n    );\n  };\n  \n\n  const getTabLabel = (type) => {\n    const isChannel = profileUser?.account_type === 'channel';\n    \n    switch(type) {\n      case 'followers':\n        return isChannel ? 'Подписчики' : 'Подписчики';\n      case 'friends':\n        return 'Друзья';\n      case 'following':\n        return 'Подписки';\n      default:\n        return '';\n    }\n  };\n  \n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Box sx={{ mb: 4, display: 'flex', alignItems: 'center' }}>\n        <IconButton \n          onClick={() => navigate(-1)}\n          sx={{ mr: 2 }}\n          color=\"primary\"\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <Typography variant=\"h5\" component=\"h1\">\n          {profileUser \n            ? `${profileUser.username} · ${profileUser.account_type === 'channel' ? 'Подписчики' : 'Социальные связи'}`\n            : 'Подписки и подписчики'\n          }\n        </Typography>\n      </Box>\n      \n      <Box sx={{ \n        borderBottom: 1, \n        borderColor: 'divider', \n        mb: 3,\n        '& .MuiTabs-flexContainer': {\n          justifyContent: isMobile ? 'space-between' : 'flex-start' \n        }\n      }}>\n        <Tabs \n          value={value} \n          onChange={handleChange} \n          variant={isMobile ? \"fullWidth\" : \"standard\"}\n          sx={{ \n            '& .MuiTab-root': {\n              color: 'text.secondary',\n              '&.Mui-selected': {\n                color: 'primary.main',\n              },\n              textTransform: 'none',\n              fontSize: isMobile ? '0.875rem' : '1rem',\n              fontWeight: 500,\n              minWidth: isMobile ? 0 : 100,\n              flexGrow: isMobile ? 1 : 0,\n              padding: isMobile ? '12px 8px' : '12px 16px',\n            },\n            '& .MuiTabs-indicator': {\n              backgroundColor: 'primary.main',\n              height: 3,\n            },\n          }}\n        >\n          <Tab label={getTabLabel('friends')} />\n          <Tab label={getTabLabel('followers')} />\n          <Tab label={getTabLabel('following')} />\n        </Tabs>\n      </Box>\n      \n      {/* Friends Tab */}\n      <Box role=\"tabpanel\" hidden={value !== 0}>\n        {value === 0 && (\n          <>\n            {isLoadingFriends && friends.length === 0 ? (\n              renderSkeletonCards()\n            ) : friends.length > 0 ? (\n              friends.map(user => renderProfileCard(user))\n            ) : (\n              renderEmptyState('friends')\n            )}\n          </>\n        )}\n      </Box>\n      \n      {/* Followers Tab */}\n      <Box role=\"tabpanel\" hidden={value !== 1}>\n        {value === 1 && (\n          <>\n            {isLoadingFollowers && followers.length === 0 ? (\n              renderSkeletonCards()\n            ) : followers.length > 0 ? (\n              followers.map(user => renderProfileCard(user))\n            ) : (\n              renderEmptyState('followers')\n            )}\n          </>\n        )}\n      </Box>\n      \n      {/* Following Tab */}\n      <Box role=\"tabpanel\" hidden={value !== 2}>\n        {value === 2 && (\n          <>\n            {isLoadingFollowing && following.length === 0 ? (\n              renderSkeletonCards()\n            ) : following.length > 0 ? (\n              following.map(user => renderProfileCard(user))\n            ) : (\n              renderEmptyState('following')\n            )}\n          </>\n        )}\n      </Box>\n      \n      {/* Loading indicator for infinite scroll */}\n      {((value === 0 && hasMoreFriends) || \n        (value === 1 && hasMoreFollowers) ||\n        (value === 2 && hasMoreFollowing)) && (\n        <LoadingContainer ref={loaderRef}>\n          <CircularProgress size={40} />\n        </LoadingContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default SubscriptionsPage; "],"names":["ProfileCard","styled","Paper","theme","display","alignItems","padding","spacing","marginBottom","borderRadius","transition","height","overflow","transform","boxShadow","LoadingContainer","Box","justifyContent","EmptyStateContainer","flexDirection","textAlign","minHeight","TruncatedText","text","maxLength","variant","component","props","needsTruncation","length","displayText","substring","Tooltip","title","arrow","placement","children","jsx","Typography","whiteSpace","textOverflow","SubscriptionsPage","tabIndex","username","useParams","user","currentUser","useContext","AuthContext","navigate","useNavigate","useTheme","isMobile","useMediaQuery","breakpoints","down","value","setValue","useState","followers","setFollowers","following","setFollowing","friends","setFriends","isLoadingFollowers","setIsLoadingFollowers","isLoadingFollowing","setIsLoadingFollowing","isLoadingFriends","setIsLoadingFriends","pageFollowers","setPageFollowers","pageFollowing","setPageFollowing","pageFriends","setPageFriends","hasMoreFollowers","setHasMoreFollowers","hasMoreFollowing","setHasMoreFollowing","hasMoreFriends","setHasMoreFriends","profileUser","setProfileUser","loadingFollow","setLoadingFollow","requestState","setRequestState","followersInProgress","followingInProgress","friendsInProgress","profileInProgress","responseCache","useRef","profile","loaderRef","fetchUserData","useCallback","async","targetUsername","current","prev","response","axios","get","data","error","fetchFollowers","cacheKey","cachedData","filteredFollowers","filter","follower","is_friend","has_next","params","page","per_page","fetchFollowing","fetchFriends","loadMoreFollowers","loadMoreFollowing","loadMoreFriends","useEffect","timeoutId","observer","IntersectionObserver","entries","isIntersecting","clearTimeout","setTimeout","threshold","currentLoader","observe","unobserve","handleChange","clearUserCache","renderProfileCard","isFollowing","is_following","isCurrentUser","id","account_type","avatarUrl","photo","startsWith","motion","div","initial","opacity","y","animate","duration","jsxs","sx","flexGrow","minWidth","flexShrink","Avatar","src","alt","name","width","marginRight","border","borderColor","flex","href","color","textDecoration","is_verified","CheckCircleIcon","ml","fontSize","about","IconButton","onClick","userId","post","unfollowed_id","success","map","handleUnfollow","disabled","size","CircularProgress","PersonRemoveIcon","followed_id","handleFollow","PersonAddIcon","renderSkeletonCards","Array","fill","_","index","Skeleton","mr","renderEmptyState","type","message","mt","maxWidth","getTabLabel","Container","py","mb","ArrowBackIcon","borderBottom","Tabs","onChange","event","newValue","textTransform","fontWeight","backgroundColor","Tab","label","role","hidden","Fragment","ref"],"mappings":"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"}