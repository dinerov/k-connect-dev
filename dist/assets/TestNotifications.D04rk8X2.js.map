{"version":3,"file":"TestNotifications.D04rk8X2.js","sources":["../../src/components/TestNotifications.js"],"sourcesContent":["import React from 'react';\nimport { Box, Button, Typography, Stack, Divider } from '@mui/material';\n\n/**\n * Test component to demonstrate all notification types\n */\nconst TestNotifications = () => {\n  const triggerAuthError = () => {\n    window.dispatchEvent(new CustomEvent('auth-error', { \n      detail: { \n        message: \"Сессия истекла\", \n        shortMessage: \"Войдите снова\",\n        notificationType: \"auth\",\n        animationType: \"pill\"\n      } \n    }));\n  };\n  \n  const triggerRateLimitError = () => {\n    window.dispatchEvent(new CustomEvent('rate-limit-error', { \n      detail: { \n        message: \"Лимит запросов превышен\",\n        shortMessage: \"Подождите\",\n        notificationType: \"warning\",\n        animationType: \"bounce\", \n        retryAfter: 30\n      } \n    }));\n  };\n  \n  const triggerNetworkError = () => {\n    window.dispatchEvent(new CustomEvent('network-error', { \n      detail: { \n        message: \"Проблема с подключением\", \n        shortMessage: \"Нет сети\",\n        notificationType: \"error\",\n        animationType: \"drop\"\n      } \n    }));\n  };\n  \n  const triggerApiRetry = () => {\n    window.dispatchEvent(new CustomEvent('api-retry', { \n      detail: { \n        url: '/api/posts',\n        attempt: 2,\n        delay: 2000,\n        message: \"Повторное подключение\",\n        shortMessage: \"Попытка 2\",\n        notificationType: \"info\",\n        animationType: \"pulse\"\n      } \n    }));\n  };\n  \n  const triggerGenericError = () => {\n    window.dispatchEvent(new CustomEvent('show-error', { \n      detail: { \n        message: \"Ошибка загрузки данных\", \n        shortMessage: \"Ошибка\",\n        notificationType: \"error\",\n        animationType: \"pill\"\n      } \n    }));\n  };\n  \n  const triggerSuccessNotification = () => {\n    window.dispatchEvent(new CustomEvent('show-error', { \n      detail: { \n        message: \"Операция выполнена успешно\", \n        shortMessage: \"Готово\",\n        notificationType: \"success\",\n        animationType: \"pill\"\n      } \n    }));\n  };\n  \n  return (\n    <Box sx={{ p: 3, maxWidth: 600, mx: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Тест новых уведомлений\n      </Typography>\n      <Divider sx={{ my: 2 }} />\n      \n      <Stack spacing={2} direction=\"column\">\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          onClick={triggerAuthError}\n        >\n          Сессия истекла\n        </Button>\n        \n        <Button \n          variant=\"contained\" \n          color=\"warning\"\n          onClick={triggerRateLimitError}\n        >\n          Лимит запросов\n        </Button>\n        \n        <Button \n          variant=\"contained\" \n          color=\"error\"\n          onClick={triggerNetworkError}\n        >\n          Нет сети\n        </Button>\n        \n        <Button \n          variant=\"contained\" \n          color=\"info\"\n          onClick={triggerApiRetry}\n        >\n          Повторное подключение\n        </Button>\n        \n        <Button \n          variant=\"contained\" \n          color=\"error\"\n          onClick={triggerGenericError}\n        >\n          Общая ошибка\n        </Button>\n        \n        <Button \n          variant=\"contained\" \n          color=\"success\"\n          onClick={triggerSuccessNotification}\n        >\n          Успех\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default TestNotifications; "],"names":["TestNotifications","jsxs","Box","sx","p","maxWidth","mx","children","jsx","Typography","variant","gutterBottom","Divider","my","Stack","spacing","direction","Button","color","onClick","triggerAuthError","dispatchEvent","CustomEvent","detail","message","shortMessage","notificationType","animationType","triggerRateLimitError","retryAfter","triggerNetworkError","triggerApiRetry","url","attempt","delay","triggerGenericError","triggerSuccessNotification"],"mappings":"mJAMA,MAAMA,EAAoBA,IAwEtBC,EAAAA,KAACC,GAAIC,GAAI,CAAEC,EAAG,EAAGC,SAAU,IAAKC,GAAI,QAClCC,SAAA,CAAAC,MAACC,EAAW,CAAAC,QAAQ,KAAKC,cAAY,EAAAJ,SAErC,2BACAC,MAACI,GAAQT,GAAI,CAAEU,GAAI,KAElBZ,EAAAA,KAAAa,EAAA,CAAMC,QAAS,EAAGC,UAAU,SAC3BT,SAAA,CAAAC,EAAAA,IAACS,GACCP,QAAQ,YACRQ,MAAM,UACNC,QAjFiBC,KAChBC,OAAAA,cAAc,IAAIC,YAAY,aAAc,CACjDC,OAAQ,CACNC,QAAS,iBACTC,aAAc,gBACdC,iBAAkB,OAClBC,cAAe,YA2EapB,SAG5B,mBAEAC,EAAAA,IAACS,GACCP,QAAQ,YACRQ,MAAM,UACNC,QA9EsBS,KACrBP,OAAAA,cAAc,IAAIC,YAAY,mBAAoB,CACvDC,OAAQ,CACNC,QAAS,0BACTC,aAAc,YACdC,iBAAkB,UAClBC,cAAe,SACfE,WAAY,QAuEqBtB,SAGjC,mBAEAC,EAAAA,IAACS,GACCP,QAAQ,YACRQ,MAAM,QACNC,QA1EoBW,KACnBT,OAAAA,cAAc,IAAIC,YAAY,gBAAiB,CACpDC,OAAQ,CACNC,QAAS,0BACTC,aAAc,WACdC,iBAAkB,QAClBC,cAAe,YAoEgBpB,SAG/B,aAEAC,EAAAA,IAACS,GACCP,QAAQ,YACRQ,MAAM,OACNC,QAvEgBY,KACfV,OAAAA,cAAc,IAAIC,YAAY,YAAa,CAChDC,OAAQ,CACNS,IAAK,aACLC,QAAS,EACTC,MAAO,IACPV,QAAS,wBACTC,aAAc,YACdC,iBAAkB,OAClBC,cAAe,aA8DYpB,SAG3B,0BAEAC,EAAAA,IAACS,GACCP,QAAQ,YACRQ,MAAM,QACNC,QAjEoBgB,KACnBd,OAAAA,cAAc,IAAIC,YAAY,aAAc,CACjDC,OAAQ,CACNC,QAAS,yBACTC,aAAc,SACdC,iBAAkB,QAClBC,cAAe,YA2DgBpB,SAG/B,iBAEAC,EAAAA,IAACS,GACCP,QAAQ,YACRQ,MAAM,UACNC,QA9D2BiB,KAC1Bf,OAAAA,cAAc,IAAIC,YAAY,aAAc,CACjDC,OAAQ,CACNC,QAAS,6BACTC,aAAc,SACdC,iBAAkB,UAClBC,cAAe,YAwDuBpB,SAGtC"}