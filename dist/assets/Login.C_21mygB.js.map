{"version":3,"file":"Login.C_21mygB.js","sources":["../../src/pages/Auth/Login.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\nimport { \n  TextField, \n  Button, \n  Link, \n  Divider, \n  Typography, \n  InputAdornment, \n  IconButton,\n  Alert,\n  CircularProgress,\n  Box,\n  useMediaQuery,\n  Container,\n  Paper,\n  Fade\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport AuthCard from '../../components/AuthCard';\nimport { AuthContext } from '../../context/AuthContext';\n\nconst Login = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  \n  const [formData, setFormData] = useState({\n    usernameOrEmail: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [banInfo, setBanInfo] = useState(null);\n  const [redirectPath, setRedirectPath] = useState('/');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { login, isAuthenticated, error: contextError, checkAuth } = useContext(AuthContext);\n\n  \n  useEffect(() => {\n    \n    const fromPath = location.state?.from;\n    \n    \n    const params = new URLSearchParams(location.search);\n    const redirectTo = params.get('redirectTo');\n    \n    \n    const savedRedirect = localStorage.getItem('redirect_after_login');\n    \n    \n    if (redirectTo) {\n      setRedirectPath(redirectTo);\n    } else if (fromPath) {\n      setRedirectPath(fromPath);\n    } else if (savedRedirect) {\n      setRedirectPath(savedRedirect);\n      \n      localStorage.removeItem('redirect_after_login');\n    }\n  }, [location]);\n\n  \n  useEffect(() => {\n    const checkAuthentication = async () => {\n      try {\n        \n        const hasSessionCookie = document.cookie.split(';').some(cookie => \n          cookie.trim().startsWith('kconnect_session=')\n        );\n        \n        \n        if (hasSessionCookie) {\n          console.log('Session cookie found, redirecting to saved path:', redirectPath);\n          navigate(redirectPath, { replace: true });\n          return;\n        }\n        \n        \n        await checkAuth();\n        \n        \n        if (isAuthenticated) {\n          console.log('User already authenticated, redirecting to saved path:', redirectPath);\n          navigate(redirectPath, { replace: true });\n        }\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n      }\n    };\n    \n    checkAuthentication();\n  }, [checkAuth, isAuthenticated, navigate, redirectPath]);\n\n  \n  useEffect(() => {\n    const savedError = localStorage.getItem('login_error');\n    if (savedError) {\n      try {\n        \n        const parsedError = JSON.parse(savedError);\n        if (parsedError.ban_info) {\n          setBanInfo(parsedError.ban_info);\n        } else {\n          setError(savedError);\n        }\n      } catch (e) {\n        \n        setError(savedError);\n      }\n      \n      localStorage.removeItem('login_error');\n    }\n  }, []);\n\n  \n  useEffect(() => {\n    if (contextError) {\n      if (contextError.ban_info) {\n        \n        setBanInfo(contextError.ban_info);\n        \n        localStorage.setItem('login_error', JSON.stringify(contextError));\n      } else {\n        const errorMessage = contextError.details || contextError.message || 'Произошла ошибка при входе';\n        setError(errorMessage);\n        \n        localStorage.setItem('login_error', errorMessage);\n      }\n    }\n  }, [contextError]);\n\n  \n  \n  useEffect(() => {\n    \n    \n    \n    \n    \n    if (isAuthenticated && !error && !contextError && !loading && !banInfo) {\n      console.log('Успешная авторизация, перенаправляем на:', redirectPath);\n      \n      localStorage.removeItem('login_error');\n      navigate(redirectPath, { replace: true });\n    }\n  }, [isAuthenticated, navigate, error, contextError, loading, banInfo, redirectPath]);\n  \n  \n  useEffect(() => {\n    const handleTelegramAuthMessage = (event) => {\n      if (event.data.type === 'telegram-auth-success') {\n        console.log('Получены данные аутентификации Telegram:', event.data);\n        setLoading(true);\n        \n        try {\n          \n          if (event.data.user) {\n            localStorage.setItem('kconnect-user', JSON.stringify(event.data.user));\n          }\n          \n          \n          if (event.data.needs_profile_setup) {\n            localStorage.setItem('k-connect-needs-profile-setup', 'true');\n          } else {\n            localStorage.removeItem('k-connect-needs-profile-setup');\n          }\n          \n          \n          if (event.data.needs_profile_setup) {\n            navigate('/register/profile');\n          } else if (event.data.redirect) {\n            navigate(event.data.redirect);\n          } else {\n            \n            navigate(redirectPath !== '/' ? redirectPath : '/profile');\n          }\n        } catch (err) {\n          console.error('Ошибка при обработке данных Telegram:', err);\n          setError('Произошла ошибка при входе через Telegram. Пожалуйста, попробуйте снова.');\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n\n    window.addEventListener('message', handleTelegramAuthMessage);\n    \n    return () => {\n      window.removeEventListener('message', handleTelegramAuthMessage);\n    };\n  }, [navigate, redirectPath]);\n\n  \n  const handleElementLogin = () => {\n    \n    const elementAuthHandler = (event) => {\n      try {\n        \n        const elemPattern = /^https?:\\/\\/(.*\\.)?elemsocial\\.com(\\/.*)?$/;\n        if (!elemPattern.test(event.origin)) {\n          console.warn(\"Получено сообщение с неизвестного источника:\", event.origin);\n          return;\n        }\n\n        \n        if (event.data && typeof event.data === 'string') {\n          console.log(\"Получено сообщение от Element:\", event.data);\n          \n          \n          window.removeEventListener('message', elementAuthHandler);\n          \n          let token = null;\n          \n          \n          if (event.data.includes('/auth_elem/')) {\n            token = event.data.split('/auth_elem/')[1];\n          } else if (event.data.includes('/auth/element/')) {\n            token = event.data.split('/auth/element/')[1];\n          } else if (event.data.includes('.')) {\n            \n            token = event.data;\n          }\n          \n          if (token) {\n            console.log(\"Извлечён токен авторизации Element:\", token);\n            \n            window.location.href = `/auth_elem/direct/${token}`;\n          }\n        }\n      } catch (err) {\n        console.error(\"Ошибка при обработке сообщения от Element:\", err);\n      }\n    };\n\n    \n    window.addEventListener('message', elementAuthHandler);\n    \n    \n    window.location.href = \"https://elemsocial.com/connect_app/0195a00f-826a-7a34-85f1-45065c8c727d\";\n  };\n  \n  \n  const handleTelegramLogin = () => {\n    \n    setError('');\n    \n    \n    const width = 550;\n    const height = 650;\n    const left = window.screen.width / 2 - width / 2;\n    const top = window.screen.height / 2 - height / 2;\n    \n    const telegramWindow = window.open(\n      '/telegram-auth.html',\n      'TelegramAuth',\n      `width=${width},height=${height},left=${left},top=${top}`\n    );\n    \n    \n    if (!telegramWindow || telegramWindow.closed || typeof telegramWindow.closed === 'undefined') {\n      setError('Не удалось открыть окно авторизации. Пожалуйста, проверьте настройки блокировки всплывающих окон в вашем браузере.');\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setError(''); \n    setBanInfo(null); \n    localStorage.removeItem('login_error'); \n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (loading) return; \n    \n    setLoading(true);\n    setError('');\n    setBanInfo(null);\n    localStorage.removeItem('login_error'); \n    \n    try {\n      const { usernameOrEmail, password } = formData;\n      \n      if (!usernameOrEmail || !password) {\n        const errorMsg = 'Пожалуйста, заполните все поля';\n        setError(errorMsg);\n        localStorage.setItem('login_error', errorMsg);\n        setLoading(false);\n        return;\n      }\n      \n      \n      const result = await login({\n        usernameOrEmail,\n        password,\n        preventRedirect: false\n      });\n      \n      \n      if (result && !result.success) {\n        if (result.ban_info) {\n          \n          setBanInfo(result.ban_info);\n          localStorage.setItem('login_error', JSON.stringify(result));\n        } else if (result.error) {\n          \n          let errorMsg;\n          if (result.error.includes('не верифицирован')) {\n            errorMsg = 'Ваша почта не подтверждена. Пожалуйста, проверьте вашу электронную почту и перейдите по ссылке в письме для подтверждения аккаунта.';\n          } else {\n            errorMsg = result.error;\n          }\n          \n          setError(errorMsg);\n          \n          localStorage.setItem('login_error', errorMsg);\n        }\n        \n        \n        setLoading(false);\n        \n        \n        document.getElementById('login-button')?.focus();\n        \n        \n        return;\n      }\n      \n      \n      \n      localStorage.removeItem('login_error');\n      \n      \n    } catch (error) {\n      const errorMsg = 'Произошла ошибка при обработке запроса. Пожалуйста, попробуйте снова.';\n      setError(errorMsg);\n      localStorage.setItem('login_error', errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const formatBanExpiration = (expirationDate) => {\n    if (!expirationDate) return 'Неизвестно';\n    \n    try {\n      const date = new Date(expirationDate);\n      return date.toLocaleString('ru-RU', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch (e) {\n      console.error('Error formatting ban date:', e);\n      return expirationDate;\n    }\n  };\n  \n  \n  const getBanTimeRemaining = (expirationDate) => {\n    if (!expirationDate) return null;\n    \n    try {\n      const expiration = new Date(expirationDate);\n      const now = new Date();\n      \n      if (expiration <= now) return 'Срок блокировки истёк';\n      \n      const diffMs = expiration - now;\n      const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n      const diffHours = Math.floor((diffMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      \n      if (diffDays > 0) {\n        return `${diffDays} д. ${diffHours} ч.`;\n      } else {\n        const diffMinutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n        return `${diffHours} ч. ${diffMinutes} мин.`;\n      }\n    } catch (e) {\n      console.error('Error calculating ban time remaining:', e);\n      return null;\n    }\n  };\n\n  \n  if (banInfo) {\n    return (\n      <Container \n        maxWidth={false} \n        disableGutters\n        sx={{ \n          display: 'flex', \n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '100vh',\n          width: '100%'\n        }}\n      >\n        <Fade in={true} timeout={800}>\n          <Paper \n            elevation={6}\n            sx={{ \n              p: isMobile ? 3 : 4, \n              width: '90%',\n              maxWidth: '480px',\n              borderRadius: 4,\n              background: 'rgba(30, 30, 40, 0.9)',\n              backdropFilter: 'blur(10px)',\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n            }}\n          >\n            <Box sx={{ textAlign: 'center', mb: 4 }}>\n              <img \n                src=\"/static/icons/clear-logonew.svg\" \n                alt=\"К-Коннект Лого\" \n                style={{ width: isMobile ? 80 : 100, marginBottom: 16 }}\n              />\n              <Typography variant=\"h4\" component=\"h1\" sx={{ fontWeight: 700, mb: 1 }}>\n                Аккаунт заблокирован\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                Вход в аккаунт временно ограничен\n              </Typography>\n            </Box>\n            \n            <Paper \n              elevation={0}\n              sx={{ \n                p: 3, \n                mb: 3, \n                width: '100%', \n                backgroundColor: 'rgba(211, 47, 47, 0.1)', \n                border: '1px solid rgba(211, 47, 47, 0.3)',\n                borderRadius: 3\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ color: '#d32f2f', mb: 1 }}>\n                Ваш аккаунт временно заблокирован\n              </Typography>\n              \n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                Причина: {banInfo.reason}\n              </Typography>\n              \n              <Typography variant=\"body1\" sx={{ mb: 1 }}>\n                Бан истечет: {banInfo.formatted_end_date}\n              </Typography>\n              \n              <Typography variant=\"body1\" sx={{ mb: 1 }}>\n                Осталось дней: {banInfo.remaining_days}\n              </Typography>\n              \n              {banInfo.is_auto_ban && (\n                <Typography variant=\"body2\" sx={{ mt: 2, fontStyle: 'italic' }}>\n                  Блокировка выдана автоматически за получение 3 предупреждений от модераторов.\n                </Typography>\n              )}\n            </Paper>\n            \n            <Box sx={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n              <Button\n                component={RouterLink}\n                to=\"/\"\n                variant=\"outlined\"\n                sx={{ \n                  mt: 2,\n                  py: 1.5,\n                  borderRadius: 2,\n                  borderColor: '#D0BCFF',\n                  color: '#D0BCFF',\n                  '&:hover': {\n                    borderColor: '#B69DF8',\n                    backgroundColor: 'rgba(208, 188, 255, 0.04)'\n                  }\n                }}\n              >\n                Вернуться на главную\n              </Button>\n            </Box>\n          </Paper>\n        </Fade>\n      </Container>\n    );\n  }\n\n  return (\n    <Container \n      disableGutters\n      maxWidth={false} \n      sx={{ \n        display: 'flex',\n        minHeight: '100vh',\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative',\n      }}\n    >\n      \n      {!isMobile && (\n        <Box \n          sx={{ \n            flex: '0 0 45%',\n            background: 'linear-gradient(135deg, rgba(20, 20, 30, 1) 0%, rgba(40, 40, 60, 0.95) 100%)',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'relative',\n            overflow: 'hidden',\n            p: 6\n          }}\n        >\n          <Box sx={{ \n            position: 'absolute',\n            width: '200%',\n            height: '200%',\n            top: '-50%',\n            left: '-50%',\n            background: 'radial-gradient(circle, rgba(208, 188, 255, 0.05) 0%, rgba(208, 188, 255, 0) 70%)',\n            zIndex: 0\n          }} />\n          \n          <motion.div\n            initial={{ scale: 0.8, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            transition={{ duration: 0.7, delay: 0.2 }}\n            style={{ position: 'relative', zIndex: 1 }}\n          >\n            <img \n              src=\"/static/icons/clear-logonew.svg\" \n              alt=\"К-Коннект Лого\" \n              style={{ width: 180, marginBottom: 40 }} \n            />\n          </motion.div>\n          \n          <motion.div\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.5 }}\n            style={{ position: 'relative', zIndex: 1, textAlign: 'center' }}\n          >\n            <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 2 }}>\n              <span style={{ color: '#D0BCFF' }}>К</span>-КОННЕКТ\n            </Typography>\n            <Typography variant=\"h6\" color=\"text.secondary\" sx={{ maxWidth: 400, mb: 3 }}>\n              Присоединяйтесь к нашему сообществу и открывайте новые возможности\n            </Typography>\n            <Button\n              component={RouterLink}\n              to=\"/about\"\n              variant=\"outlined\"\n              sx={{ \n                color: '#D0BCFF',\n                borderColor: '#D0BCFF',\n                '&:hover': {\n                  borderColor: '#B69DF8',\n                  backgroundColor: 'rgba(208, 188, 255, 0.04)'\n                }\n              }}\n            >\n              Узнать больше о К-Коннект\n            </Button>\n          </motion.div>\n          \n          \n          <Box sx={{ \n            position: 'absolute', \n            bottom: 40, \n            left: 0, \n            right: 0, \n            display: 'flex',\n            justifyContent: 'center',\n            gap: 2\n          }}>\n            {[...Array(3)].map((_, i) => (\n              <motion.div\n                key={i}\n                initial={{ scale: 0, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                transition={{ duration: 0.4, delay: 0.8 + (i * 0.2) }}\n              >\n                <Box sx={{ \n                  width: 12 + (i * 4), \n                  height: 12 + (i * 4), \n                  borderRadius: '50%', \n                  background: `rgba(208, 188, 255, ${0.6 - (i * 0.15)})` \n                }} />\n              </motion.div>\n            ))}\n          </Box>\n        </Box>\n      )}\n      \n      \n      <Box \n        sx={{ \n          flex: isMobile ? 1 : '0 0 55%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          p: 0,\n          background: isMobile ? 'linear-gradient(135deg, rgba(20, 20, 30, 1) 0%, rgba(40, 40, 60, 0.95) 100%)' : 'transparent'\n        }}\n      >\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.5 }}\n          style={{ \n            width: '100%', \n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: isMobile ? '16px' : '40px'\n          }}\n        >\n          \n          {isMobile && (\n            <Box sx={{ \n              position: 'absolute',\n              top: '32px',\n              left: 0,\n              width: '100%',\n              textAlign: 'center'\n            }}>\n              <img \n                src=\"/static/icons/clear-logonew.svg\" \n                alt=\"К-Коннект Лого\" \n                style={{ width: 90, marginBottom: 16 }} \n              />\n              <Typography variant=\"h4\" component=\"h1\" sx={{ fontWeight: 700 }}>\n                <span style={{ color: '#D0BCFF' }}>К</span>-КОННЕКТ\n              </Typography>\n              <Button\n                component={RouterLink}\n                to=\"/about\"\n                variant=\"text\"\n                sx={{ \n                  mt: 1,\n                  color: '#D0BCFF',\n                  '&:hover': {\n                    backgroundColor: 'rgba(208, 188, 255, 0.04)'\n                  }\n                }}\n              >\n                О К-Коннект\n              </Button>\n            </Box>\n          )}\n\n          <Paper \n            elevation={isMobile ? 0 : 6}\n            sx={{ \n              p: isMobile ? 3 : 4,\n              width: '100%',\n              maxWidth: '480px',\n              borderRadius: 4,\n              background: isMobile ? 'transparent' : 'rgba(30, 30, 40, 0.85)',\n              backdropFilter: 'blur(10px)',\n              border: isMobile ? 'none' : '1px solid rgba(255, 255, 255, 0.1)',\n              mt: isMobile ? '120px' : 0\n            }}\n          >\n            <Typography variant=\"h5\" component=\"h2\" sx={{ mb: 1, fontWeight: 600 }}>\n              Вход в аккаунт\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n              Войдите в К-Коннект для доступа к своему профилю\n            </Typography>\n            \n            {error && (\n              <Alert \n                severity=\"error\" \n                sx={{ \n                  mb: 3,\n                  borderRadius: 2,\n                  '& .MuiAlert-icon': { alignItems: 'center' }\n                }}\n              >\n                {error}\n              </Alert>\n            )}\n            \n            <form onSubmit={handleSubmit} style={{ width: '100%' }}>\n              <TextField\n                fullWidth\n                label=\"Email или имя пользователя\"\n                name=\"usernameOrEmail\"\n                value={formData.usernameOrEmail}\n                onChange={handleChange}\n                error={!!error}\n                disabled={loading}\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Пароль\"\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                value={formData.password}\n                onChange={handleChange}\n                error={!!error}\n                disabled={loading}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        onClick={handleClickShowPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n              />\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n                <Link \n                  component={RouterLink} \n                  to=\"/forgot-password\" \n                  sx={{ \n                    color: '#D0BCFF',\n                    fontSize: '0.875rem',\n                    textDecoration: 'none',\n                    '&:hover': {\n                      textDecoration: 'underline'\n                    }\n                  }}\n                >\n                  Забыли пароль?\n                </Link>\n              </Box>\n              \n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                size=\"large\"\n                sx={{ \n                  py: 1.5,\n                  borderRadius: 2,\n                  fontSize: '1rem',\n                  textTransform: 'none',\n                  background: 'linear-gradient(90deg, #B69DF8 0%, #D0BCFF 100%)',\n                  boxShadow: '0 4px 12px rgba(182, 157, 248, 0.3)',\n                  '&:hover': {\n                    background: 'linear-gradient(90deg, #D0BCFF 0%, #E9DDFF 100%)',\n                    boxShadow: '0 6px 16px rgba(182, 157, 248, 0.4)',\n                  }\n                }}\n                disabled={loading}\n                id=\"login-button\"\n              >\n                {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Войти'}\n              </Button>\n            </form>\n            \n            <Divider sx={{ my: 3, '&::before, &::after': { borderColor: 'rgba(255,255,255,0.1)' } }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                или\n              </Typography>\n            </Divider>\n\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              \n              <Button\n                fullWidth\n                variant=\"outlined\"\n                size=\"large\"\n                startIcon={\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 27 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M10.2194 5.27527C7.49181 5.62505 4.98695 6.93564 3.17176 8.96273C1.35657 10.9898 0.354917 13.5951 0.353516 16.2929C0.353608 19.2413 1.54789 22.0688 3.67364 24.1536C5.79939 26.2384 8.68251 27.4096 11.6888 27.4097C14.6951 27.4096 17.5782 26.2384 19.7039 24.1536C21.8297 22.0688 23.024 19.2413 23.024 16.2929C23.0242 15.9984 23.0124 15.704 22.9887 15.4105C21.6194 16.2335 20.045 16.6699 18.4391 16.6714C16.1259 16.6713 13.9075 15.7701 12.2719 14.166C10.6362 12.5619 9.71732 10.3862 9.71728 8.11768C9.71938 7.14916 9.88917 6.18803 10.2194 5.27527Z\" fill=\"#D0BCFF\"/>\n                    <path d=\"M18.4401 15.9104C22.8285 15.9104 26.386 12.4214 26.386 8.11756C26.386 3.81372 22.8285 0.324768 18.4401 0.324768C14.0517 0.324768 10.4941 3.81372 10.4941 8.11756C10.4941 12.4214 14.0517 15.9104 18.4401 15.9104Z\" fill=\"#D0BCFF\"/>\n                  </svg>\n                }\n                onClick={handleElementLogin}\n                sx={{ \n                  py: 1.25,\n                  borderRadius: 2,\n                  textTransform: 'none',\n                  borderColor: '#D0BCFF',\n                  color: '#D0BCFF',\n                  '&:hover': {\n                    borderColor: '#B69DF8',\n                    backgroundColor: 'rgba(208, 188, 255, 0.04)'\n                  }\n                }}\n              >\n                Войти через Element\n              </Button>\n              \n              \n              <Button\n                fullWidth\n                variant=\"outlined\"\n                onClick={handleTelegramLogin}\n                sx={{ \n                  py: 1.25,\n                  borderRadius: 2,\n                  textTransform: 'none',\n                  borderColor: '#0088cc',\n                  color: '#0088cc',\n                  '&:hover': {\n                    borderColor: '#0088cc',\n                    backgroundColor: 'rgba(0, 136, 204, 0.1)',\n                  },\n                  svg: {\n                    fill: '#0088cc',\n                  }\n                }}\n                startIcon={\n                  <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 240 240\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M120,0C53.73,0,0,53.73,0,120s53.73,120,120,120s120-53.73,120-120S186.27,0,120,0z M177.36,78.13l-20.52,97.21\n                      c-1.55,6.99-5.61,8.71-11.36,5.42l-31.41-23.15l-15.15,14.59c-1.67,1.67-3.07,3.07-6.28,3.07l2.24-31.78l57.87-52.26\n                      c2.51-2.24-0.55-3.49-3.89-1.26l-71.48,45.05l-30.78-9.61c-6.69-2.07-6.84-6.69,1.39-9.89l120.44-46.44\n                      C173.26,66.55,179.35,70.1,177.36,78.13z\"/>\n                  </svg>\n                }\n              >\n                Войти через Telegram\n              </Button>\n            </Box>\n            \n            <Box sx={{ textAlign: 'center', mt: 4 }}>\n              <Typography variant=\"body2\">\n                Ещё нет аккаунта?{' '}\n                <Link \n                  component={RouterLink} \n                  to=\"/register\" \n                  sx={{ \n                    color: '#D0BCFF',\n                    fontWeight: 500,\n                    textDecoration: 'none',\n                    '&:hover': {\n                      textDecoration: 'underline'\n                    }\n                  }}\n                >\n                  Зарегистрироваться\n                </Link>\n              </Typography>\n            </Box>\n          </Paper>\n        </motion.div>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["Login","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","formData","setFormData","useState","usernameOrEmail","password","showPassword","setShowPassword","loading","setLoading","error","setError","banInfo","setBanInfo","redirectPath","setRedirectPath","navigate","useNavigate","location","useLocation","login","isAuthenticated","contextError","checkAuth","useContext","AuthContext","useEffect","fromPath","state","from","redirectTo","URLSearchParams","search","get","savedRedirect","localStorage","getItem","removeItem","async","document","cookie","split","some","trim","startsWith","replace","checkAuthentication","savedError","parsedError","JSON","parse","ban_info","e","setItem","stringify","errorMessage","details","message","handleTelegramAuthMessage","event","data","type","user","needs_profile_setup","redirect","err","addEventListener","removeEventListener","handleChange","name","value","target","prev","Container","maxWidth","disableGutters","sx","display","flexDirection","alignItems","justifyContent","minHeight","width","children","jsx","Fade","in","timeout","jsxs","Paper","elevation","p","borderRadius","background","backdropFilter","border","Box","textAlign","mb","src","alt","style","marginBottom","Typography","variant","component","fontWeight","color","backgroundColor","reason","formatted_end_date","remaining_days","is_auto_ban","mt","fontStyle","Button","RouterLink","to","py","borderColor","overflow","position","flex","height","top","left","zIndex","motion","div","initial","scale","opacity","animate","transition","duration","delay","y","bottom","right","gap","Array","map","_","i","x","padding","Alert","severity","onSubmit","preventDefault","errorMsg","result","preventRedirect","success","includes","getElementById","focus","TextField","fullWidth","label","onChange","disabled","InputProps","endAdornment","InputAdornment","IconButton","onClick","handleClickShowPassword","edge","VisibilityOff","Visibility","Link","fontSize","textDecoration","size","textTransform","boxShadow","id","CircularProgress","Divider","my","startIcon","viewBox","fill","xmlns","d","handleElementLogin","elementAuthHandler","test","origin","token","href","window","handleTelegramLogin","screen","telegramWindow","open","closed","svg"],"mappings":"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"}