{"version":3,"file":"BadgeShopPage.DhWOYfWF.js","sources":["../../node_modules/@mui/icons-material/Sort.js","../../src/components/BadgeShopBottomNavigation.js","../../src/pages/Economic/BadgeShopPage.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 18h6v-2H3zM3 6v2h18V6zm0 7h12v-2H3z\"\n}), 'Sort');","import React, { useContext } from 'react';\nimport { Paper, BottomNavigation, BottomNavigationAction, alpha } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport NewReleasesIcon from '@mui/icons-material/NewReleases';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { useTheme } from '@mui/material/styles';\nimport { ThemeSettingsContext } from '../App';\n\nconst BadgeShopBottomNavigation = ({ tabValue, onTabChange }) => {\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const { themeSettings } = useContext(ThemeSettingsContext);\n\n  // Get appropriate colors based on theme mode\n  const getBackgroundColor = () => {\n    switch (theme.palette.mode) {\n      case 'light':\n        return alpha(theme.palette.background.paper, 0.9);\n      case 'contrast':\n        return '#101010';\n      default: // dark\n        return '#121212cf';\n    }\n  };\n\n  const borderColor = theme.palette.mode === 'light' \n    ? alpha(theme.palette.divider, 0.1)\n    : theme.palette.mode === 'contrast'\n      ? alpha(theme.palette.common.white, 0.15)\n      : alpha(theme.palette.common.white, 0.1);\n\n  const textColor = theme.palette.mode === 'light'\n    ? alpha(theme.palette.text.primary, 0.7)\n    : theme.palette.mode === 'contrast'\n      ? alpha(theme.palette.common.white, 0.9)\n      : 'rgb(214 209 227 / 77%)';\n\n  return (\n    <Paper \n      sx={{ \n        position: 'fixed', \n        bottom: 0, \n        left: 0, \n        right: 0,\n        display: { xs: 'block', md: 'none' },\n        zIndex: 1000,\n        borderTop: `1px solid ${borderColor}`,\n        background: 'rgba(255, 255, 255, 0.03)',\n        backdropFilter: 'blur(20px)',\n        WebkitBackdropFilter: 'blur(20px)',\n        boxShadow: '0 5px 15px rgba(0, 0, 0, 0.2)'\n      }} \n      elevation={0}\n    >\n      <BottomNavigation\n        value={tabValue}\n        onChange={(event, newValue) => {\n          if (newValue === -1) {\n            navigate(-1); \n          } else {\n            onTabChange(event, newValue);\n          }\n        }}\n        sx={{\n          bgcolor: 'transparent',\n          height: 75,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          marginTop: '10px',\n          '& .MuiBottomNavigationAction-root': {\n            color: textColor,\n            '&.Mui-selected': {\n              color: themeSettings.primaryColor || theme.palette.primary.main\n            }\n          }\n        }}\n      >\n        <BottomNavigationAction \n          value={-1}\n          icon={<Icon icon=\"solar:arrow-left-bold\" width=\"28\" height=\"28\" />}\n          sx={{ minWidth: 'auto' }}\n        />\n        <BottomNavigationAction \n          value={0}\n          icon={<Icon icon=\"solar:star-bold\" width=\"28\" height=\"28\" />}\n          sx={{ minWidth: 'auto' }}\n        />\n        <BottomNavigationAction \n          value={1}\n          icon={<Icon icon=\"solar:user-circle-bold\" width=\"28\" height=\"28\" />}\n          sx={{ minWidth: 'auto' }}\n        />\n        <BottomNavigationAction \n          value={2}\n          icon={<Icon icon=\"solar:cart-large-bold\" width=\"28\" height=\"28\" />}\n          sx={{ minWidth: 'auto' }}\n        />\n        <BottomNavigationAction \n          value={3}\n          icon={<Icon icon=\"solar:tag-price-bold\" width=\"28\" height=\"28\" />}\n          sx={{ minWidth: 'auto' }}\n        />\n      </BottomNavigation>\n    </Paper>\n  );\n};\n\nexport default BadgeShopBottomNavigation; ","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions as MuiDialogActions,\n  TextField,\n  Alert,\n  IconButton,\n  Tooltip,\n  CircularProgress,\n  Tabs,\n  Tab,\n  Paper,\n  Chip,\n  Stepper,\n  Step,\n  StepLabel,\n  Divider,\n  Avatar,\n  Badge,\n  useTheme,\n  useMediaQuery,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  AlertTitle\n} from '@mui/material';\nimport { styled, alpha } from '@mui/material/styles';\nimport { AuthContext } from '../../context/AuthContext';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport InfoIcon from '@mui/icons-material/Info';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport SortIcon from '@mui/icons-material/Sort';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport NewReleasesIcon from '@mui/icons-material/NewReleases';\nimport { Fade } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport BadgeShopBottomNavigation from '../../components/BadgeShopBottomNavigation';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1)',\n  borderRadius: 16,\n  overflow: 'hidden',\n  boxShadow: '0 2px 12px rgba(0, 0, 0, 0.08)',\n  position: 'relative',\n  backgroundColor: theme.palette.mode === 'dark' ? alpha('#000', 0.8) : '#fff',\n  backdropFilter: 'blur(10px)',\n  '&:hover': {\n    transform: 'translateY(-6px)',\n    boxShadow: '0 8px 24px rgba(0, 0, 0, 0.12)',\n    '& .badge-image': {\n      transform: 'scale(1.05)',\n    },\n    '& .badge-overlay': {\n      opacity: 1,\n    }\n  },\n  [theme.breakpoints.down('sm')]: {\n    '& .MuiCardMedia-root': {\n      height: '100px',\n    }\n  }\n}));\n\nconst BadgeImage = styled('img')({\n  width: '100%',\n  height: '130px',\n  objectFit: 'contain',\n  padding: '12px',\n  transition: 'transform 0.5s cubic-bezier(0.25, 0.8, 0.25, 1)',\n  '&:hover': {\n    transform: 'scale(1.05)',\n  },\n  '@media (max-width: 600px)': {\n    height: '100px',\n    padding: '8px',\n  },\n});\n\nconst BadgeOverlay = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: 'linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,0,0.7) 100%)',\n  display: 'flex',\n  alignItems: 'flex-end',\n  justifyContent: 'center',\n  padding: theme.spacing(2),\n  opacity: 0,\n  transition: 'opacity 0.3s ease',\n  zIndex: 1,\n}));\n\nconst BadgeCardHeader = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2, 2, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  position: 'relative',\n  '@media (max-width: 600px)': {\n    padding: theme.spacing(1.5, 1.5, 1),\n  },\n}));\n\nconst BadgeCardContent = styled(CardContent)(({ theme }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  background: theme.palette.background.paper,\n  borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n  '&:last-child': {\n    paddingBottom: theme.spacing(1.5),\n  },\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(1),\n  }\n}));\n\nconst BadgeTitle = styled(Typography)(({ theme }) => ({\n  fontWeight: 600,\n  fontSize: '0.95rem',\n  color: theme.palette.text.primary,\n  textAlign: 'center',\n  marginBottom: theme.spacing(0.5),\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '0.85rem',\n  }\n}));\n\nconst BadgeDescription = styled(Typography)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n  fontSize: '0.8rem',\n  display: '-webkit-box',\n  WebkitLineClamp: 2,\n  WebkitBoxOrient: 'vertical',\n  overflow: 'hidden',\n  textAlign: 'center',\n  marginBottom: theme.spacing(1.5),\n  lineHeight: 1.4,\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '0.75rem',\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nconst BadgeCreator = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: theme.spacing(0.75),\n  marginBottom: theme.spacing(1.5),\n  [theme.breakpoints.down('sm')]: {\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nconst BadgeCreatorAvatar = styled(Avatar)(({ theme }) => ({\n  width: 24,\n  height: 24,\n  border: `2px solid ${theme.palette.primary.main}`,\n  [theme.breakpoints.down('sm')]: {\n    width: 20,\n    height: 20,\n  }\n}));\n\nconst BadgeCreatorName = styled(Typography)(({ theme }) => ({\n  fontSize: '0.8rem',\n  color: theme.palette.text.secondary,\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '0.7rem',\n  }\n}));\n\nconst BadgeFooter = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginTop: 'auto',\n  paddingTop: theme.spacing(1),\n  borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n  [theme.breakpoints.down('sm')]: {\n    paddingTop: theme.spacing(0.5),\n  }\n}));\n\nconst BadgePrice = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(0.5),\n  [theme.breakpoints.down('sm')]: {\n    gap: theme.spacing(0.25),\n  }\n}));\n\nconst BadgePriceIcon = styled(MonetizationOnIcon)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  fontSize: '1.2rem',\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '1rem',\n  }\n}));\n\nconst BadgePriceText = styled(Typography)(({ theme }) => ({\n  fontWeight: 700,\n  color: theme.palette.primary.main,\n  fontSize: '0.9rem',\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '0.8rem',\n  }\n}));\n\nconst BadgeBuyButton = styled(Button)(({ theme }) => ({\n  borderRadius: 20,\n  textTransform: 'none',\n  fontWeight: 600,\n  padding: '4px 12px',\n  minWidth: 'auto',\n  fontSize: '0.75rem',\n  boxShadow: 'none',\n  backgroundColor: theme.palette.mode === 'dark' ? '#d0bcff' : '#6200ee',\n  color: theme.palette.mode === 'dark' ? '#000' : '#fff',\n  '&:hover': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#cabcfc' : '#5000d2',\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n  },\n  '&.Mui-disabled': {\n    backgroundColor: alpha(theme.palette.action.disabled, 0.1),\n    color: theme.palette.action.disabled,\n  },\n  [theme.breakpoints.down('sm')]: {\n    padding: '2px 8px',\n    fontSize: '0.7rem',\n  }\n}));\n\nconst PriceChip = styled(Chip)(({ theme }) => ({\n  fontWeight: 'bold',\n  background: `linear-gradient(45deg, #d0bcff 30%, ${alpha('#d0bcff', 0.8)} 90%)`,\n  color: '#1a1a1a',\n  border: 'none',\n  boxShadow: '0 3px 5px 2px rgba(208, 188, 255, 0.2)',\n  borderRadius: 20,\n  padding: '0 10px',\n  '& .MuiChip-label': {\n    fontSize: '0.9rem',\n    '@media (max-width: 600px)': {\n      fontSize: '0.8rem',\n    },\n  },\n}));\n\nconst BalanceChip = styled(Chip)(({ theme }) => ({\n  fontWeight: 'bold',\n  fontSize: '1.1rem',\n  background: `linear-gradient(45deg, #d0bcff 30%, ${alpha('#d0bcff', 0.8)} 90%)`,\n  color: '#1a1a1a',\n  boxShadow: '0 3px 5px 2px rgba(208, 188, 255, 0.2)',\n  borderRadius: 20,\n  padding: '5px 15px',\n  '@media (max-width: 600px)': {\n    fontSize: '1rem',\n    padding: '4px 12px',\n  },\n}));\n\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  marginBottom: theme.spacing(3),\n  '& .MuiTabs-indicator': {\n    backgroundColor: '#d0bcff',\n  },\n  '& .MuiTab-root': {\n    color: theme.palette.text.secondary,\n    '&.Mui-selected': {\n      color: '#d0bcff',\n    },\n  },\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  background: `linear-gradient(45deg, #d0bcff 30%, ${alpha('#d0bcff', 0.8)} 90%)`,\n  color: '#1a1a1a',\n  fontWeight: 'bold',\n  padding: '8px 24px',\n  borderRadius: 25,\n  boxShadow: '0 3px 5px 2px rgba(208, 188, 255, 0.2)',\n  '&:hover': {\n    background: `linear-gradient(45deg, ${alpha('#d0bcff', 0.9)} 30%, #d0bcff 90%)`,\n  },\n  '@media (max-width: 600px)': {\n    padding: '6px 16px',\n    fontSize: '0.9rem',\n  },\n}));\n\nconst BadgeDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n    maxWidth: '90%',\n    width: '400px',\n    margin: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius * 2,\n    maxHeight: '90vh',\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      maxWidth: '100%',\n      margin: 0,\n      borderRadius: 0,\n      maxHeight: '100vh',\n    },\n    zIndex: 1000000,\n    background: 'rgba(18, 18, 18, 0.8)',\n    backdropFilter: 'blur(10px)',\n    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n    border: '1px solid rgba(255, 255, 255, 0.1)'\n  },\n  '& .MuiBackdrop-root': {\n    zIndex: 999999\n  }\n}));\n\nconst BadgeDialogImage = styled('img')(({ theme }) => ({\n  width: '100%',\n  height: 'auto',\n  maxHeight: '200px',\n  objectFit: 'contain',\n  borderRadius: theme.shape.borderRadius,\n  [theme.breakpoints.down('sm')]: {\n    maxHeight: '150px',\n  }\n}));\n\nconst BadgeDialogHeader = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: theme.spacing(3),\n  padding: theme.spacing(2, 3),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst BadgeDialogTitle = styled(Typography)(({ theme }) => ({\n  fontWeight: 'bold',\n  color: theme.palette.text.primary,\n  '@media (max-width: 600px)': {\n    fontSize: '1.25rem',\n  },\n}));\n\nconst BadgeDialogContent = styled(DialogContent)(({ theme }) => ({\n  padding: theme.spacing(1.5),\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(1),\n  }\n}));\n\nconst BadgeDialogDescription = styled(Typography)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1.5),\n  lineHeight: 1.5,\n  padding: theme.spacing(1.5),\n  background: alpha(theme.palette.background.default, 0.5),\n  borderRadius: 12,\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nconst BadgeDialogFooter = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginTop: theme.spacing(1.5),\n  padding: theme.spacing(1.5, 2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(1, 1.5),\n    marginTop: theme.spacing(1),\n  }\n}));\n\nconst CreatorInfo = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(1.5),\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.default,\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(0.5),\n    gap: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nconst CreatorAvatar = styled(Avatar)(({ theme }) => ({\n  width: 40,\n  height: 40,\n  [theme.breakpoints.down('sm')]: {\n    width: 32,\n    height: 32,\n  }\n}));\n\nconst OwnerSection = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n  padding: theme.spacing(3),\n  background: alpha(theme.palette.success.main, 0.1),\n  borderRadius: 16,\n  marginBottom: theme.spacing(3),\n  boxShadow: '0 2px 8px rgba(0, 255, 0, 0.1)',\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(1.5),\n    gap: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  }\n}));\n\nconst StatsBox = styled(Box)(({ theme }) => ({\n  display: 'grid',\n  gridTemplateColumns: 'repeat(2, 1fr)',\n  gap: theme.spacing(1.5),\n  padding: theme.spacing(1.5),\n  background: alpha(theme.palette.background.paper, 0.1),\n  borderRadius: 16,\n  marginBottom: theme.spacing(1.5),\n  boxShadow: '0 2px 8px rgba(208, 188, 255, 0.1)',\n  [theme.breakpoints.down('sm')]: {\n    gap: theme.spacing(1),\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nconst StatItem = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  textAlign: 'center',\n  padding: theme.spacing(1),\n  background: alpha(theme.palette.background.paper, 0.5),\n  borderRadius: 12,\n  transition: 'transform 0.2s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n  },\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(0.75),\n  }\n}));\n\nconst BadgeGrid = styled(Grid)(({ theme }) => ({\n  padding: theme.spacing(2),\n  [theme.breakpoints.down('sm')]: {\n    padding: theme.spacing(1),\n  }\n}));\n\nconst SortSelect = styled(FormControl)(({ theme }) => ({\n  minWidth: 160,\n  margin: theme.spacing(0, 2),\n  '& .MuiOutlinedInput-root': {\n    borderRadius: 20,\n    background: alpha(theme.palette.background.paper, 0.9),\n    boxShadow: '0 2px 5px rgba(0,0,0,0.05)',\n    '&:hover': {\n      boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n    },\n  },\n  [theme.breakpoints.down('sm')]: {\n    minWidth: '100%',\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nconst CopiesChip = styled(Chip)(({ theme, issoldout }) => ({\n  position: 'absolute',\n  top: 8,\n  right: 8,\n  height: 24,\n  borderRadius: 12,\n  fontWeight: 500,\n  backgroundColor: issoldout === 'true' \n    ? alpha(theme.palette.error.main, 0.1)\n    : alpha(theme.palette.mode === 'dark' ? '#d0bcff' : '#6200ee', 0.1),\n  color: issoldout === 'true'\n    ? theme.palette.error.main\n    : theme.palette.mode === 'dark' ? '#d0bcff' : '#6200ee',\n  border: `1px solid ${issoldout === 'true' \n    ? alpha(theme.palette.error.main, 0.2) \n    : alpha(theme.palette.mode === 'dark' ? '#d0bcff' : '#6200ee', 0.2)}`,\n  backdropFilter: 'blur(4px)',\n  boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n  '& .MuiChip-label': {\n    fontSize: '0.7rem',\n    padding: '0 8px',\n    letterSpacing: '0.02em',\n  },\n  [theme.breakpoints.down('sm')]: {\n    height: 20,\n    top: 6,\n    right: 6,\n    '& .MuiChip-label': {\n      fontSize: '0.65rem',\n    }\n  }\n}));\n\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialog-container\": {\n    zIndex: 999999999999\n  },\n  \"& .MuiDialog-paper\": {\n    borderRadius: 16,\n    background: theme.palette.mode === 'dark' \n      ? 'rgba(18, 18, 18, 0.8)' \n      : 'rgba(255, 255, 255, 0.8)',\n    backdropFilter: 'blur(10px)',\n    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n    border: theme.palette.mode === 'dark' \n      ? '1px solid rgba(255, 255, 255, 0.1)'\n      : '1px solid rgba(208, 188, 255, 0.3)',\n    overflow: 'hidden',\n    maxWidth: '450px',\n    width: '100%',\n    margin: theme.spacing(2),\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      maxWidth: '100%',\n      margin: 0,\n      borderRadius: 0,\n    },\n  },\n  \"& .MuiDialogTitle-root\": {\n    fontSize: '1.2rem',\n    fontWeight: 500\n  }\n}));\n\nconst DialogHeader = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  padding: theme.spacing(2),\n  borderBottom: `1px solid ${theme.palette.mode === 'dark' \n    ? 'rgba(255, 255, 255, 0.1)'\n    : 'rgba(208, 188, 255, 0.2)'}`,\n  background: theme.palette.mode === 'dark'\n    ? 'linear-gradient(90deg, rgba(208, 188, 255, 0.2) 0%, rgba(0, 0, 0, 0) 100%)'\n    : 'linear-gradient(90deg, rgba(208, 188, 255, 0.2) 0%, rgba(255, 255, 255, 0) 100%)',\n}));\n\nconst HeaderGlow = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  top: -50,\n  right: -50,\n  width: 150,\n  height: 150,\n  borderRadius: '50%',\n  background: 'radial-gradient(circle, rgba(208, 188, 255, 0.3) 0%, rgba(208, 188, 255, 0) 70%)',\n  zIndex: 0\n}));\n\nconst DialogHeaderContent = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  zIndex: 1,\n  display: 'flex',\n  alignItems: 'center'\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  padding: theme.spacing(2),\n  paddingLeft: theme.spacing(3),\n  paddingRight: theme.spacing(3),\n  justifyContent: 'space-between',\n  backgroundColor: theme.palette.mode === 'dark'\n    ? 'rgba(0, 0, 0, 0.4)'\n    : 'rgba(255, 255, 255, 0.6)',\n  borderTop: `1px solid ${theme.palette.mode === 'dark' \n    ? 'rgba(255, 255, 255, 0.1)'\n    : 'rgba(208, 188, 255, 0.2)'}`,\n}));\n\nconst CancelButton = styled(Button)(({ theme }) => ({\n  borderRadius: 12,\n  paddingLeft: theme.spacing(3),\n  paddingRight: theme.spacing(3),\n  borderColor: theme.palette.mode === 'dark'\n    ? 'rgba(255, 255, 255, 0.2)'\n    : 'rgba(0, 0, 0, 0.2)',\n  color: theme.palette.mode === 'dark'\n    ? 'rgba(255, 255, 255, 0.7)'\n    : 'rgba(0, 0, 0, 0.7)',\n  '&:hover': {\n    borderColor: theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, 0.4)'\n      : 'rgba(0, 0, 0, 0.4)',\n    background: theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, 0.05)'\n      : 'rgba(0, 0, 0, 0.05)'\n  }\n}));\n\nconst ActionButton = styled(Button)(({ theme }) => ({\n  borderRadius: 12,\n  paddingLeft: theme.spacing(4),\n  paddingRight: theme.spacing(4),\n  paddingTop: theme.spacing(0.75),\n  paddingBottom: theme.spacing(0.75),\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n  background: 'linear-gradient(45deg, #6200ee 30%, #9c64f2 90%)',\n  color: '#fff',\n  '&:hover': {\n    boxShadow: '0 6px 16px rgba(0, 0, 0, 0.25)',\n  }\n}));\n\nconst ContentBox = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  padding: theme.spacing(2.5),\n  borderRadius: 8,\n  backgroundColor: theme.palette.mode === 'dark'\n    ? 'rgba(208, 188, 255, 0.05)'\n    : 'rgba(208, 188, 255, 0.1)',\n  border: `1px solid ${theme.palette.mode === 'dark' \n    ? 'rgba(208, 188, 255, 0.2)'\n    : 'rgba(208, 188, 255, 0.3)'}`,\n  marginBottom: theme.spacing(2),\n}));\n\nconst BadgeShopPage = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user } = useContext(AuthContext);\n  const [tabValue, setTabValue] = useState(0);\n  const [sortOption, setSortOption] = useState('newest');\n  const [badges, setBadges] = useState([]);\n  const [userPoints, setUserPoints] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedBadge, setSelectedBadge] = useState(null);\n  const [openBadgeDialog, setOpenBadgeDialog] = useState(false);\n  const [openCreateDialog, setOpenCreateDialog] = useState(false);\n  const [openPurchaseDialog, setOpenPurchaseDialog] = useState(false);\n  const [purchaseStep, setPurchaseStep] = useState(0);\n  const [newBadge, setNewBadge] = useState({\n    name: '',\n    description: '',\n    price: '',\n    royalty_percentage: 30,\n    max_copies: '',\n    image: null\n  });\n  const [isPurchasing, setIsPurchasing] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [createdBadgesCount, setCreatedBadgesCount] = useState(0);\n  const [badgeLimitReached, setBadgeLimitReached] = useState(false);\n  const [badgeLimit, setBadgeLimit] = useState(3); \n  const [userSubscription, setUserSubscription] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [purchaseSuccess, setPurchaseSuccess] = useState(false);\n  \n  \n  const fetchSubscriptionStatus = async () => {\n    try {\n      const response = await axios.get('/api/user/subscription/status');\n      if (response.data.active) {\n        setUserSubscription(response.data);\n        updateBadgeLimit(response.data.subscription_type);\n      } else {\n        setUserSubscription(null);\n        setBadgeLimit(3); \n      }\n    } catch (error) {\n      console.error('Error fetching subscription status:', error);\n      setUserSubscription(null);\n      setBadgeLimit(3);\n    }\n  };\n  \n  \n  const updateBadgeLimit = (subscriptionType) => {\n    if (!subscriptionType) {\n      setBadgeLimit(3); \n      return;\n    }\n    \n    \n    const subType = subscriptionType.toLowerCase().trim();\n    \n    if (subType === 'basic') {\n      setBadgeLimit(5);\n    } else if (subType === 'premium') {\n      setBadgeLimit(8);\n    } else if (subType === 'ultimate' || subType.includes('ultimate')) {\n      setBadgeLimit(Infinity); \n    } else {\n      setBadgeLimit(3);\n    }\n  };\n  \n  \n  const fetchCreatedBadgesCount = async () => {\n    try {\n      const response = await axios.get('/api/badges/created');\n      if (response.data && response.data.total_badges !== undefined) {\n        setCreatedBadgesCount(response.data.total_badges);\n        \n        \n        \n        const isUltimate = userSubscription && userSubscription.subscription_type && \n          (userSubscription.subscription_type.toLowerCase() === 'ultimate' || \n           userSubscription.subscription_type.toLowerCase().includes('ultimate'));\n        \n        if (isUltimate) {\n          setBadgeLimitReached(false);\n        } else {\n          setBadgeLimitReached(response.data.total_badges >= badgeLimit);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching created badges count:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchBadges();\n    fetchUserPoints();\n    fetchSubscriptionStatus();\n  }, []);\n  \n  \n  useEffect(() => {\n    const isUltimate = userSubscription && userSubscription.subscription_type && \n      (userSubscription.subscription_type.toLowerCase() === 'ultimate' || \n       userSubscription.subscription_type.toLowerCase().includes('ultimate'));\n    \n    if (isUltimate) {\n      setBadgeLimitReached(false);\n    } else {\n      setBadgeLimitReached(createdBadgesCount >= badgeLimit);\n    }\n  }, [badgeLimit, createdBadgesCount, userSubscription]);\n  \n  \n  useEffect(() => {\n    fetchCreatedBadgesCount();\n  }, [userSubscription]);\n\n  // Открытие бейджика по openBadgeId из state\n  useEffect(() => {\n    if (location.state && location.state.openBadgeId && badges.length > 0) {\n      const badgeToOpen = badges.find(b => String(b.id) === String(location.state.openBadgeId));\n      if (badgeToOpen) {\n        setSelectedBadge(badgeToOpen);\n        setOpenBadgeDialog(true);\n        // Очищаем state, чтобы при повторном заходе не открывалось снова\n        navigate('/badge-shop', { replace: true, state: {} });\n      }\n    }\n  }, [location.state, badges]);\n\n  const getBadgeImageUrl = (imagePath) => {\n    if (!imagePath) return '';\n    return `/static/images/bages/shop/${imagePath}`;\n  };\n\n  const fetchBadges = async () => {\n      setLoading(true);\n    try {\n      const response = await axios.get('/api/badges/shop');\n      setBadges(response.data.badges || []);\n    } catch (error) {\n      console.error('Error fetching badges:', error);\n      setError('Ошибка при загрузке бейджиков');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUserPoints = async () => {\n    try {\n      const response = await axios.get('/api/user/points');\n      setUserPoints(response.data.points);\n    } catch (error) {\n      console.error('Error fetching user points:', error);\n    }\n  };\n\n  const handleCreateBadge = async () => {\n    try {\n      \n      \n\n      \n      if (!newBadge.name || !newBadge.description || !newBadge.price || !newBadge.image) {\n        setError('Пожалуйста, заполните все обязательные поля');\n        return;\n      }\n\n      \n      const price = parseInt(newBadge.price);\n      if (isNaN(price) || price <= 0) {\n        setError('Цена должна быть положительным числом');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('name', newBadge.name);\n      formData.append('description', newBadge.description);\n      formData.append('price', price);\n      formData.append('royalty_percentage', newBadge.royalty_percentage);\n      \n      \n      const maxCopies = parseInt(newBadge.max_copies) || 0;\n      if (maxCopies === 1) {\n        formData.append('max_copies', 1);\n        formData.append('is_sold_out', true); \n      } else if (newBadge.max_copies) {\n        formData.append('max_copies', newBadge.max_copies);\n      }\n      \n      formData.append('image', newBadge.image);\n      formData.append('strip_path_prefix', true);\n      formData.append('file_path_mode', 'clean');\n      formData.append('auto_assign_to_creator', true); \n\n      const response = await axios.post('/api/badges/create', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n\n      setOpenCreateDialog(false);\n      setNewBadge({\n        name: '',\n        description: '',\n        price: '',\n        royalty_percentage: 30,\n        max_copies: '',\n        image: null\n      });\n      \n      \n      \n      await fetchCreatedBadgesCount();\n      fetchBadges();\n      fetchUserPoints();\n    } catch (err) {\n      console.error('Ошибка при создании бейджика:', err);\n      setError(err.response?.data?.error || 'Ошибка при создании бейджика');\n    }\n  };\n\n  const handlePurchaseBadge = async (badge) => {\n    if (isPurchasing) return; \n    \n    try {\n      \n      setIsPurchasing(true);\n      \n      \n      setPurchaseStep(1.5); \n      \n      \n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      \n      await axios.post(`/api/badges/purchase/${badge.id}`, {\n        \n        badge_info: {\n          \n          name: badge.name !== 'shop_1' ? badge.name : 'Бейджик',\n          \n          remove_badge_prefix: true,\n          \n          add_shop_prefix: true\n        }\n      });\n      \n      \n      setPurchaseStep(2);\n      setPurchaseSuccess(true);\n      setShowConfetti(true); \n      \n      \n      setTimeout(() => {\n        setOpenPurchaseDialog(false);\n        setPurchaseStep(0);\n        setPurchaseSuccess(false);\n        setShowConfetti(false);\n        fetchBadges();\n        fetchUserPoints();\n        setIsPurchasing(false); \n      }, 3000);\n    } catch (err) {\n      setError(err.response?.data?.error || 'Ошибка при покупке бейджика');\n      setPurchaseStep(0);\n      setIsPurchasing(false); \n    }\n  };\n\n  const handleOpenPurchaseDialog = (badge) => {\n    setSelectedBadge(badge);\n    setPurchaseStep(0);\n    setPurchaseSuccess(false);\n    setOpenPurchaseDialog(true);\n  };\n\n  const handleNextPurchaseStep = () => {\n    setPurchaseStep(1);\n  };\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type === 'image/svg+xml') {\n      setNewBadge({ ...newBadge, image: file });\n      \n      \n      const fileUrl = URL.createObjectURL(file);\n      setPreviewUrl(fileUrl);\n    } else {\n      setError('Пожалуйста, загрузите SVG файл');\n    }\n  };\n\n  const handleBadgeClick = (badge) => {\n    setSelectedBadge(badge);\n    setOpenBadgeDialog(true);\n  };\n\n  const handleCopyBadgeLink = () => {\n    const badgeLink = `${window.location.origin}/badge/${selectedBadge.id}`;\n    navigator.clipboard.writeText(badgeLink).then(() => {\n      // Show a temporary success message\n      const copyButton = document.getElementById('copy-badge-link');\n      if (copyButton) {\n        const originalText = copyButton.textContent;\n        copyButton.textContent = 'Скопировано!';\n        setTimeout(() => {\n          copyButton.textContent = originalText;\n        }, 2000);\n      }\n    });\n  };\n\n  const handleCloseBadgeDialog = () => {\n    setOpenBadgeDialog(false);\n    setSelectedBadge(null);\n  };\n\n  \n  const getSortedBadges = (badges) => {\n    if (!badges.length) return [];\n    \n    switch (sortOption) {\n      case 'newest':\n        \n        return [...badges].sort((a, b) => b.id - a.id);\n      case 'oldest':\n        \n        return [...badges].sort((a, b) => a.id - b.id);\n      case 'popular':\n        \n        return [...badges].sort((a, b) => (b.purchases?.length || 0) - (a.purchases?.length || 0));\n      case 'price-low':\n        \n        return [...badges].sort((a, b) => a.price - b.price);\n      case 'price-high':\n        \n        return [...badges].sort((a, b) => b.price - a.price);\n      default:\n        return badges;\n    }\n  };\n\n  \n  const processedBadges = () => {\n    \n    let filtered = badges;\n    if (tabValue === 0) {\n      \n      filtered = badges.filter(badge => \n        \n        !((badge.max_copies === 1 && badge.copies_sold >= 1) || \n          (badge.max_copies && badge.copies_sold >= badge.max_copies)) &&\n        \n        !badge.purchases?.some(p => p.buyer_id === user?.id)\n      );\n    } else if (tabValue === 1) {\n      \n      filtered = badges.filter(badge => badge.creator_id === user?.id);\n    } else if (tabValue === 2) {\n      \n      filtered = badges.filter(badge => badge.purchases?.some(p => p.buyer_id === user?.id));\n    } else if (tabValue === 3) {\n      \n      filtered = badges.filter(badge => \n        (badge.max_copies === 1 && badge.copies_sold >= 1) || \n        (badge.max_copies && badge.copies_sold >= badge.max_copies)\n      );\n    }\n\n    \n    return getSortedBadges(filtered);\n  };\n\n  const handleSortChange = (event) => {\n    setSortOption(event.target.value);\n  };\n\n  \n  useEffect(() => {\n    return () => {\n      if (previewUrl) {\n        URL.revokeObjectURL(previewUrl);\n      }\n    };\n  }, [previewUrl]);\n  \n  const badgePreviewStyles = {\n    previewContainer: {\n      display: 'flex', \n      gap: theme.spacing(3),\n      marginTop: theme.spacing(2),\n      backgroundColor: 'rgba(0, 0, 0, 0.02)',\n      borderRadius: theme.shape.borderRadius,\n      padding: theme.spacing(2),\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    previewItem: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: theme.spacing(1)\n    },\n    previewLabel: {\n      fontSize: 12,\n      color: theme.palette.text.secondary\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: isMobile ? 2 : 4, pb: isMobile ? 12 : 4 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={isMobile ? 2 : 4} flexDirection={isMobile ? 'column' : 'row'} gap={2}>\n        <Typography variant={isMobile ? 'h5' : 'h4'} component=\"h1\" gutterBottom>\n          Магазин бейджиков\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" gap={2}>\n          <BalanceChip\n            icon={<AccountBalanceWalletIcon />}\n            label={`${userPoints} баллов`}\n          />\n          <StyledButton\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={() => setOpenCreateDialog(true)}\n          >\n            Создать бейджик\n          </StyledButton>\n        </Box>\n      </Box>\n\n      \n      {isMobile && (\n        <Box sx={{ \n          mb: 2, \n          p: 1.5, \n          bgcolor: 'background.paper', \n          borderRadius: 2,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          <Typography variant=\"h6\" align=\"center\" sx={{ fontWeight: 600 }}>\n            {tabValue === 0 && 'Доступные бейджики'}\n            {tabValue === 1 && 'Мои бейджики'}\n            {tabValue === 2 && 'Купленные бейджики'}\n            {tabValue === 3 && 'Скупленные бейджики'}\n          </Typography>\n        </Box>\n      )}\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\n          {error}\n        </Alert>\n      )}\n\n      <Box sx={{ \n        display: 'flex', \n        flexDirection: isMobile ? 'column' : 'row', \n        alignItems: isMobile ? 'stretch' : 'center',\n        justifyContent: 'space-between',\n        mb: 3,\n        gap: 2\n      }}>\n        <StyledTabs\n          value={tabValue}\n          onChange={(e, newValue) => setTabValue(newValue)}\n          variant={isMobile ? 'fullWidth' : 'standard'}\n          centered={!isMobile}\n          sx={{ \n            mb: isMobile ? 2 : 0,\n            display: { xs: 'none', md: 'flex' } \n          }}\n        >\n          <Tab label=\"Доступные\" />\n          <Tab label=\"Мои\" />\n          <Tab label=\"Купленные\" />\n          <Tab label=\"Скупленные\" />\n        </StyledTabs>\n\n        <SortSelect size=\"small\">\n          <InputLabel id=\"sort-select-label\">\n            <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\n              <SortIcon fontSize=\"small\" />\n              <span>Сортировка</span>\n            </Box>\n          </InputLabel>\n          <Select\n            labelId=\"sort-select-label\"\n            value={sortOption}\n            onChange={handleSortChange}\n            label={\n              <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\n                <SortIcon fontSize=\"small\" />\n                <span>Сортировка</span>\n              </Box>\n            }\n            size=\"small\"\n          >\n            <MenuItem value=\"newest\">\n              <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                <NewReleasesIcon fontSize=\"small\" />\n                <span>Сначала новые</span>\n              </Box>\n            </MenuItem>\n            <MenuItem value=\"oldest\">\n              <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                <NewReleasesIcon fontSize=\"small\" sx={{ transform: 'rotate(180deg)' }} />\n                <span>Сначала старые</span>\n              </Box>\n            </MenuItem>\n            <MenuItem value=\"popular\">\n              <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                <TrendingUpIcon fontSize=\"small\" />\n                <span>Популярные</span>\n              </Box>\n            </MenuItem>\n            <MenuItem value=\"price-low\">\n              <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                <AttachMoneyIcon fontSize=\"small\" />\n                <span>Дешевле</span>\n              </Box>\n            </MenuItem>\n            <MenuItem value=\"price-high\">\n              <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                <AttachMoneyIcon fontSize=\"small\" sx={{ transform: 'scale(1.2)' }} />\n                <span>Дороже</span>\n              </Box>\n            </MenuItem>\n          </Select>\n        </SortSelect>\n      </Box>\n\n      <Grid container spacing={isMobile ? 1 : 2}>\n        {processedBadges().map((badge) => (\n          <Grid item xs={6} sm={4} md={3} key={badge.id}>\n            <StyledCard onClick={() => handleBadgeClick(badge)} sx={{ cursor: 'pointer', height: '100%' }}>\n              <Box sx={{ position: 'relative', overflow: 'hidden' }}>\n                <BadgeImage \n                  className=\"badge-image\"\n                  src={`/static/images/bages/shop/${badge.image_path}`}\n                  alt={badge.name || 'Бейджик'} \n                />\n                <BadgeOverlay className=\"badge-overlay\">\n                  <Typography variant=\"body2\" color=\"white\" sx={{ textAlign: 'center' }}>\n                    Нажмите для подробностей\n                  </Typography>\n                </BadgeOverlay>\n                {badge.max_copies > 0 && (\n                  <CopiesChip\n                    size=\"small\"\n                    label={`${badge.copies_sold || 0}/${badge.max_copies}`}\n                    issoldout={((badge.max_copies === 1 && badge.copies_sold >= 1) || \n                      (badge.max_copies && badge.copies_sold >= badge.max_copies)).toString()}\n                  />\n                )}\n              </Box>\n              \n              <BadgeCardHeader>\n                <BadgeTitle variant=\"subtitle1\">\n                  {badge.name || 'Бейджик без названия'}\n                </BadgeTitle>\n              </BadgeCardHeader>\n              \n              <BadgeCardContent>\n                <BadgeDescription variant=\"body2\">\n                  {badge.description || 'Описание отсутствует'}\n                </BadgeDescription>\n                \n                <BadgeCreator>\n                  <BadgeCreatorAvatar \n                    src={badge.creator?.avatar_url} \n                    alt={badge.creator?.name || 'Создатель'} \n                  />\n                  <BadgeCreatorName variant=\"caption\">\n                    {badge.creator?.name || 'Создатель'}\n                  </BadgeCreatorName>\n                </BadgeCreator>\n                \n                <BadgeFooter>\n                  <BadgePrice>\n                    <BadgePriceIcon />\n                    <BadgePriceText>\n                      {badge.price} баллов\n                    </BadgePriceText>\n                  </BadgePrice>\n                  {(badge.max_copies === 1 && badge.copies_sold >= 1) || \n                    (badge.max_copies && badge.copies_sold >= badge.max_copies) ? (\n                    <BadgeBuyButton\n                      variant=\"outlined\"\n                      color=\"error\"\n                      disabled\n                    >\n                      Распродано\n                    </BadgeBuyButton>\n                  ) : !badge.purchases?.some(p => p.buyer_id === user?.id) && (\n                    <BadgeBuyButton\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenPurchaseDialog(badge);\n                      }}\n                      disabled={userPoints < badge.price}\n                    >\n                      Купить\n                    </BadgeBuyButton>\n                  )}\n                </BadgeFooter>\n              </BadgeCardContent>\n            </StyledCard>\n          </Grid>\n        ))}\n      </Grid>\n\n      <BadgeDialog\n        open={openBadgeDialog}\n        onClose={handleCloseBadgeDialog}\n        fullScreen={false}\n        TransitionComponent={Fade}\n        TransitionProps={{ timeout: 300 }}\n        PaperProps={{\n          style: {\n            background: theme.palette.background.default,\n            borderRadius: 20,\n            overflow: 'hidden',\n            zIndex: 1000000000,\n            maxHeight: '90vh',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n        }}\n      >\n        {selectedBadge && (\n          <>\n            <BadgeDialogHeader>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <BadgeDialogTitle variant=\"h5\">\n                  {selectedBadge.name !== 'shop_1' ? selectedBadge.name : 'Бейджик без названия'}\n                </BadgeDialogTitle>\n                {selectedBadge.max_copies > 0 && (\n                  <CopiesChip\n                    size=\"small\"\n                    label={`${selectedBadge.copies_sold || 0}/${selectedBadge.max_copies}`}\n                    issoldout={((selectedBadge.max_copies === 1 && selectedBadge.copies_sold >= 1) || \n                      (selectedBadge.max_copies && selectedBadge.copies_sold >= selectedBadge.max_copies)).toString()}\n                    sx={{ position: 'static', my: 0, ml: 1 }}\n                  />\n                )}\n              </Box>\n              <IconButton\n                edge=\"end\"\n                color=\"inherit\"\n                onClick={handleCloseBadgeDialog}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </BadgeDialogHeader>\n            <BadgeDialogContent>\n              <Box sx={{ position: 'relative', mb: 4 }}>\n                <BadgeDialogImage src={getBadgeImageUrl(selectedBadge.image_path)} alt={selectedBadge.name} />\n              </Box>\n              \n              <CreatorInfo>\n                <CreatorAvatar src={selectedBadge.creator?.avatar_url} alt={selectedBadge.creator?.name} />\n                <Box>\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                    Создатель\n                  </Typography>\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\n                    {selectedBadge.creator?.name || 'Создатель'}\n                  </Typography>\n                </Box>\n              </CreatorInfo>\n\n              {selectedBadge.purchases?.length > 0 && (\n                <Box sx={{ mb: 3 }}>\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                    Владельцы\n                  </Typography>\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                    {selectedBadge.purchases.map(purchase => (\n                      <Box\n                        key={purchase.buyer_id}\n                        sx={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: 1,\n                          p: 1,\n                          borderRadius: 1,\n                          bgcolor: 'background.paper',\n                          boxShadow: 1\n                        }}\n                      >\n                        <Avatar\n                          src={purchase.buyer?.avatar_url}\n                          alt={purchase.buyer?.name}\n                          sx={{ width: 24, height: 24 }}\n                        />\n                        <Typography variant=\"body2\">\n                          {purchase.buyer?.name || 'Пользователь'}\n                        </Typography>\n                      </Box>\n                    ))}\n                  </Box>\n                </Box>\n              )}\n\n              <BadgeDialogDescription variant=\"body1\">\n                {selectedBadge.description || 'Описание отсутствует'}\n              </BadgeDialogDescription>\n\n              <Button\n                id=\"copy-badge-link\"\n                variant=\"outlined\"\n                startIcon={<ContentCopyIcon />}\n                onClick={() => {\n                  const badgeLink = `${window.location.origin}/badge/${selectedBadge.id}`;\n                  navigator.clipboard.writeText(badgeLink).then(() => {\n                    const copyButton = document.getElementById('copy-badge-link');\n                    if (copyButton) {\n                      const originalText = copyButton.textContent;\n                      copyButton.textContent = 'Скопировано!';\n                      setTimeout(() => {\n                        copyButton.textContent = originalText;\n                      }, 2000);\n                    }\n                  });\n                }}\n                sx={{ mb: 2 }}\n              >\n                Ссылка\n              </Button>\n\n              <StatsBox>\n                <StatItem>\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                    {selectedBadge.max_copies > 0 ? 'Продано копий' : 'Всего продано'}\n                  </Typography>\n                  <Typography variant=\"h4\" sx={{ color: theme.palette.primary.main, fontWeight: 'bold' }}>\n                    {selectedBadge.max_copies > 0 \n                      ? `${selectedBadge.purchases?.length || 0}/${selectedBadge.max_copies}`\n                      : selectedBadge.purchases?.length || 0\n                    }\n                  </Typography>\n                </StatItem>\n                <StatItem>\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                    Доход создателя\n                  </Typography>\n                  <Typography variant=\"h4\" sx={{ color: theme.palette.primary.main, fontWeight: 'bold' }}>\n                    {Math.round(((selectedBadge.purchases?.length || 0) * selectedBadge.price * 0.3))}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    баллов\n                  </Typography>\n                </StatItem>\n              </StatsBox>\n            </BadgeDialogContent>\n            <BadgeDialogFooter>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <MonetizationOnIcon sx={{ color: theme.palette.primary.main, fontSize: 28 }} />\n                <Typography variant=\"h5\" sx={{ color: theme.palette.primary.main, fontWeight: 'bold' }}>\n                  {selectedBadge.price} баллов\n                </Typography>\n              </Box>\n              {!selectedBadge.purchases?.some(p => p.buyer_id === user?.id) && selectedBadge.creator_id !== user?.id && (\n                <StyledButton\n                  variant=\"contained\"\n                  startIcon={<ShoppingCartIcon />}\n                  onClick={() => {\n                    handleCloseBadgeDialog();\n                    handleOpenPurchaseDialog(selectedBadge);\n                  }}\n                  disabled={userPoints < selectedBadge.price}\n                  sx={{ minWidth: 120 }}\n                >\n                  Купить\n                </StyledButton>\n              )}\n            </BadgeDialogFooter>\n          </>\n        )}\n      </BadgeDialog>\n\n      \n      <Dialog \n        open={openCreateDialog} \n        onClose={() => setOpenCreateDialog(false)} \n        maxWidth=\"sm\" \n        fullWidth\n        sx={{ \n          position: 'fixed',\n          zIndex: 1000000,\n          '& .MuiBackdrop-root': {\n            position: 'fixed',\n          },\n          '& .MuiPaper-root': {\n            borderRadius: '16px',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.12)',\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <DialogTitle sx={{\n          borderBottom: '1px solid rgba(0, 0, 0, 0.06)',\n          backgroundColor: 'rgba(0, 0, 0, 0.02)',\n          fontWeight: 600,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Box\n              component=\"span\"\n              sx={{\n                display: 'inline-flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                p: 1,\n                bgcolor: 'primary.light',\n                borderRadius: '50%',\n                color: 'white',\n                mr: 1\n              }}\n            >\n              <AddIcon fontSize=\"small\" />\n            </Box>\n          Создание нового бейджика\n          </Box>\n          <IconButton\n            aria-label=\"close\"\n            onClick={() => setOpenCreateDialog(false)}\n            sx={{\n              color: 'text.secondary',\n              '&:hover': {\n                bgcolor: 'rgba(0, 0, 0, 0.04)',\n              }\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{ \n          padding: theme.spacing(3), \n          bgcolor: 'background.paper'\n        }}>\n          <Box sx={{ pt: 1 }}>\n            \n            <Box sx={{ mb: 2, p: 2, bgcolor: 'rgba(0, 0, 0, 0.03)', borderRadius: 1 }}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Лимиты создания бейджиков:\n              </Typography>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 1 }}>\n                <Chip label=\"Без подписки: 3 бейджика\" size=\"small\" />\n                <Chip label=\"Basic: 5 бейджиков\" size=\"small\" />\n                <Chip label=\"Premium: 8 бейджиков\" size=\"small\" />\n                <Chip label=\"Ultimate: без ограничений\" size=\"small\" color=\"primary\" />\n              </Box>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Вы создали {createdBadgesCount || 0} из {userSubscription?.subscription_type === 'ultimate' ? '∞' : badgeLimit || 3} бейджиков\n              </Typography>\n            </Box>\n            \n            \n            <Box sx={{ mb: 2, p: 2, bgcolor: 'rgba(0, 0, 0, 0.03)', borderRadius: 1 }}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Требования к изображению:\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                • Загружайте только SVG формат\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                • Максимальная ширина: 100px\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                • Ограничения по высоте: 23px, 30px, 60px\n              </Typography>\n              \n              {previewUrl ? (\n                <Box sx={badgePreviewStyles.previewContainer}>\n                  <Box sx={badgePreviewStyles.previewItem}>\n                    <Typography sx={badgePreviewStyles.previewLabel}>23px</Typography>\n                    <Box sx={{ \n                      height: 23, \n                      maxWidth: 100, \n                      display: 'flex', \n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      border: '1px solid rgba(0, 0, 0, 0.12)',\n                      borderRadius: '4px',\n                      padding: '0 8px',\n                      overflow: 'hidden'\n                    }}>\n                      <img src={previewUrl} alt=\"Badge preview\" style={{ height: '100%', maxWidth: '100%' }} />\n                    </Box>\n                  </Box>\n                  \n                  <Box sx={badgePreviewStyles.previewItem}>\n                    <Typography sx={badgePreviewStyles.previewLabel}>30px</Typography>\n                    <Box sx={{ \n                      height: 30, \n                      maxWidth: 100, \n                      display: 'flex', \n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      border: '1px solid rgba(0, 0, 0, 0.12)',\n                      borderRadius: '4px',\n                      padding: '0 8px',\n                      overflow: 'hidden'\n                    }}>\n                      <img src={previewUrl} alt=\"Badge preview\" style={{ height: '100%', maxWidth: '100%' }} />\n                    </Box>\n                  </Box>\n                  \n                  <Box sx={badgePreviewStyles.previewItem}>\n                    <Typography sx={badgePreviewStyles.previewLabel}>60px</Typography>\n                    <Box sx={{ \n                      height: 60, \n                      maxWidth: 100, \n                      display: 'flex', \n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      border: '1px solid rgba(0, 0, 0, 0.12)',\n                      borderRadius: '4px',\n                      padding: '0 8px',\n                      overflow: 'hidden'\n                    }}>\n                      <img src={previewUrl} alt=\"Badge preview\" style={{ height: '100%', maxWidth: '100%' }} />\n                    </Box>\n                  </Box>\n                </Box>\n              ) : (\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" sx={{ mt: 2 }}>\n                  Загрузите SVG для просмотра превью\n                </Typography>\n              )}\n            </Box>\n            \n            <TextField\n              fullWidth\n              label=\"Название\"\n              value={newBadge.name}\n              onChange={(e) => setNewBadge({ ...newBadge, name: e.target.value })}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputProps={{\n                sx: { borderRadius: '8px' }\n              }}\n            />\n            <TextField\n              fullWidth\n              label=\"Описание\"\n              multiline\n              rows={3}\n              value={newBadge.description}\n              onChange={(e) => setNewBadge({ ...newBadge, description: e.target.value })}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputProps={{\n                sx: { borderRadius: '8px' }\n              }}\n            />\n            <TextField\n              fullWidth\n              label=\"Цена (баллов)\"\n              type=\"number\"\n              value={newBadge.price}\n              onChange={(e) => setNewBadge({ ...newBadge, price: e.target.value })}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputProps={{\n                sx: { borderRadius: '8px' }\n              }}\n            />\n            <TextField\n              fullWidth\n              label=\"Максимальное количество копий\"\n              type=\"number\"\n              value={newBadge.max_copies}\n              onChange={(e) => setNewBadge({ ...newBadge, max_copies: e.target.value })}\n              margin=\"normal\"\n              helperText=\"Оставьте пустым для неограниченного количества\"\n              variant=\"outlined\"\n              InputProps={{\n                sx: { borderRadius: '8px' }\n              }}\n            />\n            <Box\n              component=\"label\"\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                p: 3,\n                mt: 2,\n                borderRadius: '12px',\n                border: '2px dashed',\n                borderColor: previewUrl ? 'primary.main' : 'divider',\n                bgcolor: 'rgba(0, 0, 0, 0.02)',\n                cursor: 'pointer',\n                transition: 'all 0.2s',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  bgcolor: 'rgba(0, 0, 0, 0.03)'\n                }\n              }}\n            >\n              <input\n                type=\"file\"\n                hidden\n                accept=\".svg\"\n                onChange={handleImageChange}\n              />\n              <Box sx={{ textAlign: 'center' }}>\n                {previewUrl ? (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <img \n                      src={previewUrl} \n                      alt=\"SVG Preview\" \n                      style={{ \n                        height: 80, \n                        maxWidth: '100%', \n                        marginBottom: theme.spacing(2),\n                        filter: 'drop-shadow(0 4px 6px rgba(0,0,0,0.1))'\n                      }} \n                    />\n                    <Typography variant=\"body2\" color=\"primary\">\n                      Нажмите, чтобы выбрать другой файл\n              </Typography>\n                  </Box>\n                ) : (\n                  <>\n\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Загрузите SVG изображение\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      Перетащите файл сюда или нажмите для выбора\n                    </Typography>\n                  </>\n                )}\n              </Box>\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions sx={{ \n          padding: theme.spacing(2, 3),\n          borderTop: '1px solid rgba(0, 0, 0, 0.06)',\n          backgroundColor: 'rgba(0, 0, 0, 0.02)'\n        }}>\n          <Button \n            onClick={() => setOpenCreateDialog(false)}\n            sx={{ \n              borderRadius: '8px',\n              textTransform: 'none',\n              fontWeight: 500\n            }}\n          >\n            Отмена\n          </Button>\n          <Button\n            onClick={handleCreateBadge}\n            variant=\"contained\"\n            disabled={!newBadge.name || !newBadge.price || !newBadge.image}\n            sx={{ \n              borderRadius: '8px',\n              textTransform: 'none',\n              fontWeight: 500,\n              boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n              px: 3\n            }}\n          >\n            Создать за 3000 баллов\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      \n      <StyledDialog \n        open={openPurchaseDialog} \n        onClose={() => {\n          if (purchaseStep !== 2) {\n            setOpenPurchaseDialog(false);\n            setPurchaseStep(0);\n          }\n        }}\n        fullWidth\n      >\n        <DialogHeader>\n          <HeaderGlow />\n          <DialogHeaderContent>\n            <ShoppingCartIcon color=\"primary\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary.light\">\n              Покупка бейджика\n            </Typography>\n          </DialogHeaderContent>\n          {purchaseStep !== 2 && (\n            <IconButton\n              aria-label=\"close\"\n              onClick={() => setOpenPurchaseDialog(false)}\n              sx={{ position: 'absolute', right: 8, top: 8 }}\n            >\n              <CloseIcon />\n            </IconButton>\n          )}\n        </DialogHeader>\n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          {selectedBadge && (\n            <>\n              <Stepper \n                activeStep={purchaseStep} \n                sx={{ \n                  mt: 3, \n                  mb: 4,\n                  '& .MuiStepLabel-label': {\n                    [theme.breakpoints.down('sm')]: {\n                      fontSize: '0.75rem',\n                    }\n                  },\n                  '& .MuiStepper-root': {\n                    flexWrap: 'nowrap',\n                  },\n                  '& .MuiStep-root': {\n                    px: 0,\n                  },\n                  '& .MuiStepConnector-line': {\n                    minHeight: 0,\n                  }\n                }}\n                alternativeLabel={isMobile}\n              >\n                <Step>\n                  <StepLabel>\n                    {isMobile ? 'Инфо' : 'Информация'}\n                  </StepLabel>\n                </Step>\n                <Step>\n                  <StepLabel>\n                    {isMobile ? 'Подтв.' : 'Подтверждение'}\n                  </StepLabel>\n                </Step>\n                <Step>\n                  <StepLabel>\n                    {isMobile ? 'Итог' : 'Завершение'}\n                  </StepLabel>\n                </Step>\n              </Stepper>\n              \n              {purchaseStep === 0 && (\n                <ContentBox>\n                  <Box sx={{ \n                    display: 'flex', \n                    flexDirection: 'column',\n                    alignItems: 'center', \n                    mb: 3 \n                  }}>\n                    <Box sx={{ \n                      width: 120, \n                      height: 120, \n                      mb: 3,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      backgroundColor: 'rgba(208, 188, 255, 0.1)',\n                      borderRadius: 2,\n                      padding: 1\n                    }}>\n                      <img \n                        src={getBadgeImageUrl(selectedBadge.image_path)} \n                        alt={selectedBadge.name} \n                        style={{ width: '90%', height: '90%', objectFit: 'contain' }}\n                      />\n                    </Box>\n                    <Box sx={{ width: '100%', textAlign: 'center' }}>\n                      <Typography variant=\"h6\" gutterBottom>{selectedBadge.name}</Typography>\n                      <Typography variant=\"body2\" gutterBottom sx={{ opacity: 0.7 }}>{selectedBadge.description}</Typography>\n                      <PriceChip \n                        icon={<MonetizationOnIcon />} \n                        label={`${selectedBadge.price} баллов`}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        sx={{ mt: 1 }}\n                      />\n                    </Box>\n                  </Box>\n\n                  <Alert severity=\"warning\" sx={{ mb: 2 }}>\n                    <AlertTitle>Важное уведомление</AlertTitle>\n                    Покупка бейджика является необратимой операцией. Пожалуйста, убедитесь, что вы хотите приобрести этот бейджик.\n                  </Alert>\n                </ContentBox>\n              )}\n              \n              {purchaseStep === 1 && (\n                <ContentBox>\n                  <Typography variant=\"subtitle1\" sx={{ mb: 2, fontWeight: 'bold' }}>\n                    Детали покупки:\n                  </Typography>\n                  \n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body1\">Название:</Typography>\n                    <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\n                      {selectedBadge.name}\n                    </Typography>\n                  </Box>\n                  \n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body1\">Стоимость:</Typography>\n                    <Typography variant=\"body1\" sx={{ fontWeight: 'bold', color: 'primary.main' }}>\n                      {selectedBadge.price} баллов\n                    </Typography>\n                  </Box>\n                  \n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n                    <Typography variant=\"body1\">Ваш баланс после покупки:</Typography>\n                    <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\n                      {userPoints - selectedBadge.price} баллов\n                    </Typography>\n                  </Box>\n                  \n                  <Divider sx={{ my: 2 }} />\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Бейджик будет добавлен в ваши достижения сразу после покупки\n                  </Typography>\n                </ContentBox>\n              )}\n              \n              {purchaseStep === 2 && (\n                <Box sx={{ \n                  display: 'flex', \n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  py: 4,\n                  position: 'relative',\n                  overflow: 'hidden'\n                }}>\n                  {purchaseSuccess ? (\n                    <>\n                      {showConfetti && (\n                        <Box sx={{\n                          position: 'absolute',\n                          top: 0,\n                          left: 0,\n                          right: 0,\n                          bottom: 0,\n                          zIndex: 1,\n                          animation: 'confetti 1s ease-out forwards',\n                          '@keyframes confetti': {\n                            '0%': { opacity: 0 },\n                            '100%': { opacity: 1 }\n                          }\n                        }}>\n                          \n                          {[...Array(15)].map((_, i) => (\n                            <Box\n                              key={i}\n                              sx={{\n                                position: 'absolute',\n                                width: Math.random() * 8 + 5,\n                                height: Math.random() * 8 + 5,\n                                backgroundColor: [\n                                  '#6200ee', '#9c64f2', '#d0bcff', '#e9ddff', '#6200ee',\n                                  '#9c64f2', '#d0bcff', '#e9ddff', '#6200ee', '#9c64f2'\n                                ][Math.floor(Math.random() * 10)],\n                                borderRadius: '50%',\n                                left: `${Math.random() * 100}%`,\n                                top: 0,\n                                animation: `fall${i % 3} ${Math.random() * 1.5 + 1}s linear forwards`,\n                                '@keyframes fall0': {\n                                  to: { transform: 'translateY(300px) rotate(360deg)', opacity: 0 }\n                                },\n                                '@keyframes fall1': {\n                                  to: { transform: 'translateY(300px) rotate(-360deg)', opacity: 0 }\n                                },\n                                '@keyframes fall2': {\n                                  to: { transform: 'translateY(300px) rotate(720deg)', opacity: 0 }\n                                }\n                              }}\n                            />\n                          ))}\n                        </Box>\n                      )}\n                      <Box sx={{\n                        animation: 'pop-in 0.5s cubic-bezier(0.19, 1, 0.22, 1) forwards',\n                        '@keyframes pop-in': {\n                          '0%': { transform: 'scale(0)', opacity: 0 },\n                          '80%': { transform: 'scale(1.1)', opacity: 1 },\n                          '100%': { transform: 'scale(1)', opacity: 1 }\n                        },\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        zIndex: 2\n                      }}>\n                        <CheckCircleIcon color=\"success\" sx={{ fontSize: 80, mb: 2 }} />\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\n                          Поздравляем с покупкой!\n                        </Typography>\n                        <Typography variant=\"body1\" align=\"center\">\n                          Бейджик \"{selectedBadge.name}\" успешно добавлен в ваши достижения.\n                        </Typography>\n                        \n                        \n                        <Box sx={{ \n                          mt: 3,\n                          p: 2,\n                          borderRadius: 2,\n                          bgcolor: 'background.paper',\n                          boxShadow: 1,\n                          width: '100%',\n                          maxWidth: 250,\n                          animation: 'fade-in 1s ease-in-out forwards',\n                          '@keyframes fade-in': {\n                            from: { opacity: 0, transform: 'translateY(20px)' },\n                            to: { opacity: 1, transform: 'translateY(0)' }\n                          }\n                        }}>\n                          <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom align=\"center\">\n                            Новый баланс:\n                          </Typography>\n                          <Typography variant=\"h6\" color=\"primary\" sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                            <AccountBalanceWalletIcon sx={{ mr: 1 }} />\n                            {userPoints - Math.ceil(selectedBadge?.price * 1.1)} баллов\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </>\n                  ) : (\n                    <Box sx={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      gap: 2\n                    }}>\n                      <CircularProgress size={40} />\n                      <Typography variant=\"body1\">\n                        Обработка транзакции...\n                      </Typography>\n                    </Box>\n                  )}\n                </Box>\n              )}\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          {purchaseStep === 0 && (\n            <>\n              <CancelButton \n                onClick={() => setOpenPurchaseDialog(false)} \n                variant=\"outlined\"\n              >\n                Отмена\n              </CancelButton>\n              <ActionButton\n                onClick={handleNextPurchaseStep}\n                disabled={userPoints < (selectedBadge?.price || 0)}\n              >\n                Продолжить\n              </ActionButton>\n            </>\n          )}\n          \n          {purchaseStep === 1 && (\n            <>\n              <CancelButton \n                onClick={() => setPurchaseStep(0)} \n                variant=\"outlined\"\n                disabled={isPurchasing}\n              >\n                Назад\n              </CancelButton>\n              <ActionButton\n                onClick={() => handlePurchaseBadge(selectedBadge)}\n                disabled={isPurchasing}\n                startIcon={isPurchasing ? <CircularProgress size={16} color=\"inherit\" /> : null}\n              >\n                {isPurchasing ? 'Обработка...' : 'Подтвердить покупку'}\n              </ActionButton>\n            </>\n          )}\n          \n          {purchaseStep === 2 && purchaseSuccess && (\n            <ActionButton\n              onClick={() => {\n                setOpenPurchaseDialog(false);\n                setPurchaseStep(0);\n              }}\n              sx={{ mx: 'auto' }}\n            >\n              Готово\n            </ActionButton>\n          )}\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <BadgeShopBottomNavigation \n        tabValue={tabValue}\n        onTabChange={(e, newValue) => setTabValue(newValue)}\n      />\n    </Container>\n  );\n};\n\nexport default BadgeShopPage; "],"names":["_interopRequireDefault","require$$0","Object","defineProperty","Sort","value","default","_createSvgIcon","_jsxRuntime","require$$2","jsx","d","BadgeShopBottomNavigation","tabValue","onTabChange","navigate","useNavigate","theme","useTheme","themeSettings","useContext","ThemeSettingsContext","borderColor","palette","mode","alpha","divider","common","white","textColor","text","primary","Paper","sx","position","bottom","left","right","display","xs","md","zIndex","borderTop","background","backdropFilter","WebkitBackdropFilter","boxShadow","elevation","children","jsxs","BottomNavigation","onChange","event","newValue","bgcolor","height","justifyContent","alignItems","marginTop","color","primaryColor","main","BottomNavigationAction","icon","Icon","width","minWidth","StyledCard","styled","Card","flexDirection","transition","borderRadius","overflow","backgroundColor","transform","opacity","breakpoints","down","BadgeImage","objectFit","padding","BadgeOverlay","Box","top","spacing","BadgeCardHeader","BadgeCardContent","CardContent","flexGrow","paper","paddingBottom","BadgeTitle","Typography","fontWeight","fontSize","textAlign","marginBottom","BadgeDescription","secondary","WebkitLineClamp","WebkitBoxOrient","lineHeight","BadgeCreator","gap","BadgeCreatorAvatar","Avatar","border","BadgeCreatorName","BadgeFooter","paddingTop","BadgePrice","BadgePriceIcon","MonetizationOnIcon","BadgePriceText","BadgeBuyButton","Button","textTransform","action","disabled","PriceChip","Chip","BalanceChip","StyledTabs","Tabs","StyledButton","BadgeDialog","Dialog","maxWidth","margin","shape","maxHeight","BadgeDialogImage","BadgeDialogHeader","borderBottom","BadgeDialogTitle","BadgeDialogContent","DialogContent","BadgeDialogDescription","BadgeDialogFooter","CreatorInfo","CreatorAvatar","success","StatsBox","gridTemplateColumns","StatItem","Grid","SortSelect","FormControl","CopiesChip","issoldout","error","letterSpacing","StyledDialog","DialogHeader","HeaderGlow","DialogHeaderContent","DialogActions","MuiDialogActions","paddingLeft","paddingRight","CancelButton","ActionButton","ContentBox","BadgeShopPage","isMobile","useMediaQuery","location","useLocation","user","AuthContext","setTabValue","useState","sortOption","setSortOption","badges","setBadges","userPoints","setUserPoints","loading","setLoading","setError","selectedBadge","setSelectedBadge","openBadgeDialog","setOpenBadgeDialog","openCreateDialog","setOpenCreateDialog","openPurchaseDialog","setOpenPurchaseDialog","purchaseStep","setPurchaseStep","newBadge","setNewBadge","name","description","price","royalty_percentage","max_copies","image","isPurchasing","setIsPurchasing","showConfetti","setShowConfetti","createdBadgesCount","setCreatedBadgesCount","badgeLimitReached","setBadgeLimitReached","badgeLimit","setBadgeLimit","userSubscription","setUserSubscription","previewUrl","setPreviewUrl","purchaseSuccess","setPurchaseSuccess","fetchCreatedBadgesCount","async","response","axios","get","data","undefined","total_badges","isUltimate","subscription_type","toLowerCase","includes","useEffect","fetchBadges","fetchUserPoints","active","subscriptionType","subType","trim","Infinity","fetchSubscriptionStatus","state","openBadgeId","length","badgeToOpen","find","b","String","id","replace","getBadgeImageUrl","imagePath","points","handleOpenPurchaseDialog","badge","handleCloseBadgeDialog","URL","revokeObjectURL","badgePreviewStyles","previewContainer","flexWrap","previewItem","previewLabel","minHeight","CircularProgress","Container","py","pb","mb","variant","component","gutterBottom","AccountBalanceWalletIcon","label","startIcon","AddIcon","onClick","p","align","Alert","severity","onClose","e","centered","Tab","size","InputLabel","SortIcon","Select","labelId","target","MenuItem","NewReleasesIcon","TrendingUpIcon","AttachMoneyIcon","container","processedBadges","filtered","filter","copies_sold","purchases","some","buyer_id","creator_id","sort","a","getSortedBadges","map","item","sm","handleBadgeClick","cursor","className","src","image_path","alt","toString","creator","avatar_url","stopPropagation","open","fullScreen","TransitionComponent","Fade","TransitionProps","timeout","PaperProps","style","Fragment","my","ml","IconButton","edge","CloseIcon","purchase","buyer","ContentCopyIcon","badgeLink","window","origin","navigator","clipboard","writeText","then","copyButton","document","getElementById","originalText","textContent","setTimeout","Math","round","ShoppingCartIcon","fullWidth","DialogTitle","mr","pt","mt","TextField","InputProps","multiline","rows","type","helperText","hidden","accept","file","files","fileUrl","createObjectURL","parseInt","isNaN","formData","FormData","append","post","headers","err","px","Stepper","activeStep","alternativeLabel","Step","StepLabel","AlertTitle","Divider","animation","Array","_","i","random","floor","to","CheckCircleIcon","from","ceil","handleNextPurchaseStep","Promise","resolve","badge_info","remove_badge_prefix","add_shop_prefix","handlePurchaseBadge","mx"],"mappings":"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","x_google_ignoreList":[0]}