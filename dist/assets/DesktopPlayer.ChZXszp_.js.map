{"version":3,"file":"DesktopPlayer.ChZXszp_.js","sources":["../../src/components/Music/DesktopPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo, memo } from 'react';\nimport {\n  Box,\n  Typography,\n  IconButton,\n  Paper,\n  Slider,\n  styled,\n  useTheme,\n  Snackbar,\n  Alert\n} from '@mui/material';\nimport {\n  IoPlayCircle,\n  IoPauseCircle,\n  IoPlaySkipForward,\n  IoPlaySkipBack,\n  IoHeart,\n  IoHeartOutline,\n  IoVolumeHigh,\n  IoVolumeMedium,\n  IoVolumeMute,\n  IoList,\n  IoRepeat,\n  IoRepeatOutline,\n  IoShuffle,\n  IoChevronDown,\n  IoShareSocial\n} from 'react-icons/io5';\nimport { useMusic } from '../../context/MusicContext';\nimport { formatDuration } from '../../utils/formatters';\nimport { ThemeSettingsContext } from '../../App';\nimport { useContext } from 'react';\nimport FullScreenPlayer from './FullScreenPlayer/index.js';\nimport { extractDominantColor } from '../../utils/imageUtils';\n\n\nconst PlayerContainer = styled(Paper)(({ theme, covercolor }) => ({\n  position: 'fixed',\n  bottom: 20,\n  left: '60%',\n  transform: 'translateX(-50%)',\n  width: '85%',\n  maxWidth: 1100,\n  minWidth: 580,\n  zIndex: theme.zIndex.appBar - 1,\n  backgroundColor: covercolor ? `rgba(${covercolor}, 0.22)` : 'rgba(10, 10, 10, 0.3)',\n  backdropFilter: 'blur(35px)',\n  boxShadow: '0 4px 25px rgba(0, 0, 0, 0.2)',\n  borderRadius: 16,\n  padding: theme.spacing(0.8),\n  border: '1px solid rgba(255, 255, 255, 0.06)',\n  display: 'flex',\n  alignItems: 'center',\n  overflow: 'hidden',\n  '&.hidden': {\n    display: 'none !important',\n    opacity: 0,\n    pointerEvents: 'none',\n    visibility: 'hidden'\n  },\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    background: covercolor ? \n      `radial-gradient(circle at center, rgba(${covercolor}, 0.3) 0%, rgba(10, 10, 10, 0.1) 70%)` :\n      'none',\n    opacity: 0.6,\n    pointerEvents: 'none',\n  },\n  '@media (max-width: 900px)': {\n    width: '85%',\n    minWidth: 'auto',\n  },\n}));\n\n\nconst MarqueeText = styled(Typography, {\n  shouldForwardProp: (prop) => prop !== 'isactive'\n})(({ isactive }) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  display: 'block',\n  position: 'relative',\n  animation: isactive === 'true' ? 'marquee 15s linear infinite' : 'none',\n  animationDelay: '1.5s',\n  '@keyframes marquee': {\n    '0%': {\n      transform: 'translateX(0%)',\n    },\n    '100%': {\n      transform: 'translateX(-100%)',\n    },\n  },\n  '&::after': {\n    content: isactive === 'true' ? 'attr(data-text)' : 'none',\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    left: '100%',\n    paddingLeft: '20px',\n  }\n}));\n\nconst TrackSlider = styled(Slider)(({ theme, covercolor }) => ({\n  color: covercolor ? `rgba(${covercolor}, 1)` : theme.palette.primary.main,\n  height: 3,\n  '& .MuiSlider-thumb': {\n    width: 0,\n    height: 0,\n    opacity: 0,\n    transition: '0.2s cubic-bezier(.47,1.64,.41,.8)',\n  },\n  '&:hover .MuiSlider-thumb, &.Mui-active .MuiSlider-thumb': {\n    width: 10,\n    height: 10,\n    opacity: 1,\n  },\n  '& .MuiSlider-rail': {\n    opacity: 0.3,\n    height: 3,\n  },\n  '& .MuiSlider-track': {\n    height: 3,\n  }\n}));\n\nconst VolumeSlider = styled(Slider)(({ theme, covercolor }) => ({\n  color: covercolor ? `rgba(${covercolor}, 1)` : theme.palette.primary.main,\n  width: 80,\n  height: 3,\n  '& .MuiSlider-thumb': {\n    width: 8,\n    height: 8,\n    '&:hover, &.Mui-focusVisible': {\n      boxShadow: 'none',\n    },\n  },\n  '& .MuiSlider-rail': {\n    opacity: 0.3,\n  },\n}));\n\n\nconst ControlButton = memo(({ icon, onClick, ariaLabel, color = 'white', active = false, activeColor = null }) => (\n  <IconButton\n    onClick={onClick}\n    aria-label={ariaLabel}\n    sx={{\n      color: active ? (activeColor || 'primary.main') : color,\n      '&:hover': {\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n      }\n    }}\n  >\n    {icon}\n  </IconButton>\n));\n\n\nconst getColorFromImage = extractDominantColor;\n\nconst DesktopPlayer = memo(() => {\n  const theme = useTheme();\n  const { themeSettings } = useContext(ThemeSettingsContext);\n  const { \n    currentTrack, \n    isPlaying, \n    togglePlay, \n    nextTrack, \n    prevTrack,\n    likeTrack,\n    currentTime,\n    duration,\n    seekTo,\n    volume,\n    setVolume,\n    isMuted,\n    toggleMute,\n    getCurrentTimeRaw,\n    getDurationRaw,\n    audioRef\n  } = useMusic();\n\n  const [seekValue, setSeekValue] = useState(0);\n  const [isSeeking, setIsSeeking] = useState(false);\n  const [fullScreenOpen, setFullScreenOpen] = useState(false);\n  const [repeatMode, setRepeatMode] = useState('off'); \n  const [shuffleMode, setShuffleMode] = useState(false);\n  const [dominantColor, setDominantColor] = useState(null);\n  const [isPlayerHovered, setIsPlayerHovered] = useState(false);\n  \n  \n  const [titleOverflowing, setTitleOverflowing] = useState(false);\n  const [artistOverflowing, setArtistOverflowing] = useState(false);\n  \n  const [shareSnackbar, setShareSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  \n  const progressRef = useRef(null);\n  const titleRef = useRef(null);\n  const artistRef = useRef(null);\n  const lastUpdateRef = useRef(0);\n  const currentSeekValueRef = useRef(0);\n  \n  const formattedCurrentTime = useMemo(() => {\n    try {\n\n      const globalTimeElement = document.getElementById('global-player-current-time');\n      if (globalTimeElement && globalTimeElement.textContent) {\n        return globalTimeElement.textContent;\n      }\n      \n\n      if (typeof getCurrentTimeRaw === 'function') {\n        const time = getCurrentTimeRaw();\n        return formatDuration(typeof time === 'number' ? time : 0);\n      }\n      \n\n      return '0:00';\n    } catch (error) {\n      console.error(\"Error getting current time:\", error);\n      return '0:00';\n    }\n  }, [getCurrentTimeRaw]);\n  \n  const formattedDuration = useMemo(() => {\n    try {\n\n      const globalDurationElement = document.getElementById('global-player-duration');\n      if (globalDurationElement && globalDurationElement.textContent) {\n        return globalDurationElement.textContent;\n      }\n      \n\n      if (typeof getDurationRaw === 'function') {\n        const duration = getDurationRaw();\n        return formatDuration(typeof duration === 'number' ? duration : 0);\n      }\n      \n\n      return '0:00';\n    } catch (error) {\n      console.error(\"Error getting duration:\", error);\n      return '0:00';\n    }\n  }, [getDurationRaw]);\n\n  \n  useEffect(() => {\n\n    let isMounted = true;\n    \n\n    const updateDisplays = () => {\n      try {\n\n        if (!isMounted) return;\n        \n        const currentTimeEl = document.getElementById('desktop-current-time');\n        const durationEl = document.getElementById('desktop-duration');\n        \n\n        if (currentTimeEl && window.audioTiming && window.audioTiming.formattedCurrentTime) {\n          currentTimeEl.textContent = window.audioTiming.formattedCurrentTime;\n        }\n        \n        if (durationEl && window.audioTiming && window.audioTiming.formattedDuration) {\n          durationEl.textContent = window.audioTiming.formattedDuration;\n        }\n        \n\n        if (!isSeeking && window.audioTiming && typeof window.audioTiming.progress === 'number') {\n          setSeekValue(window.audioTiming.progress);\n          currentSeekValueRef.current = window.audioTiming.progress;\n        }\n        \n\n        if (isMounted) {\n          requestAnimationFrame(updateDisplays);\n        }\n      } catch (error) {\n        console.error(\"Error updating player displays:\", error);\n\n        if (isMounted) {\n          requestAnimationFrame(updateDisplays);\n        }\n      }\n    };\n    \n\n    const animationId = requestAnimationFrame(updateDisplays);\n    \n\n    return () => {\n      isMounted = false;\n      cancelAnimationFrame(animationId);\n    };\n  }, [isSeeking]);\n\n  \n  useEffect(() => {\n    \n  }, []);\n  \n  useEffect(() => {\n    if (titleRef.current) {\n      setTitleOverflowing(titleRef.current.scrollWidth > titleRef.current.clientWidth);\n    }\n    if (artistRef.current) {\n      setArtistOverflowing(artistRef.current.scrollWidth > artistRef.current.clientWidth);\n    }\n  }, [currentTrack]);\n  \n  useEffect(() => {\n    if (currentTrack?.cover_path) {\n      getColorFromImage(\n        currentTrack.cover_path || '/static/uploads/system/album_placeholder.jpg',\n        (color) => {\n          setDominantColor(color);\n        }\n      );\n    }\n  }, [currentTrack]);\n  \n  useEffect(() => {\n    \n    const handleProgressUpdate = (event) => {\n      if (!isSeeking && event.detail && event.detail.progressPercent) {\n        setSeekValue(event.detail.progressPercent);\n        currentSeekValueRef.current = event.detail.progressPercent;\n      }\n    };\n    \n    document.addEventListener('audioProgressUpdate', handleProgressUpdate);\n    \n    \n    if (window.currentAudioProgress !== undefined && !isSeeking) {\n      setSeekValue(window.currentAudioProgress);\n      currentSeekValueRef.current = window.currentAudioProgress;\n    }\n    \n    return () => {\n      document.removeEventListener('audioProgressUpdate', handleProgressUpdate);\n    };\n  }, [isSeeking]);\n  \n  if (!currentTrack) {\n    return null;\n  }\n  \n  const handleSeekStart = useCallback(() => {\n    setIsSeeking(true);\n  }, []);\n  \n  const handleSeekChange = useCallback((_, newValue) => {\n    setSeekValue(newValue);\n  }, []);\n  \n  const handleSeekEnd = useCallback((_, newValue) => {\n    try {\n      let durationValue = 0;\n      \n\n      if (typeof getDurationRaw === 'function') {\n        const rawDuration = getDurationRaw();\n        if (typeof rawDuration === 'number' && rawDuration > 0) {\n          durationValue = rawDuration;\n        } else if (typeof duration === 'number' && duration > 0) {\n          durationValue = duration;\n        }\n      } else if (typeof duration === 'number' && duration > 0) {\n        durationValue = duration;\n      } else if (audioRef && audioRef.current && audioRef.current.duration) {\n\n        durationValue = audioRef.current.duration;\n      }\n      \n\n      if (durationValue > 0) {\n        seekTo((newValue * durationValue) / 100);\n      }\n      \n      setIsSeeking(false);\n    } catch (error) {\n      console.error(\"Error in handleSeekEnd:\", error);\n      setIsSeeking(false);\n    }\n  }, [seekTo, getDurationRaw, duration, audioRef]);\n\n  const handleClickProgress = useCallback((event) => {\n    try {\n      if (progressRef.current) {\n\n        let durationValue = 0;\n        \n        if (typeof getDurationRaw === 'function') {\n          const rawDuration = getDurationRaw();\n          if (typeof rawDuration === 'number' && rawDuration > 0) {\n            durationValue = rawDuration;\n          } else if (typeof duration === 'number' && duration > 0) {\n            durationValue = duration;\n          }\n        } else if (typeof duration === 'number' && duration > 0) {\n          durationValue = duration;\n        } else if (audioRef && audioRef.current && audioRef.current.duration) {\n          durationValue = audioRef.current.duration;\n        }\n        \n\n        if (durationValue > 0) {\n          const rect = progressRef.current.getBoundingClientRect();\n          const position = ((event.clientX - rect.left) / rect.width) * 100;\n          const clampedPosition = Math.min(Math.max(position, 0), 100);\n          setSeekValue(clampedPosition);\n          seekTo((clampedPosition * durationValue) / 100);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error in handleClickProgress:\", error);\n    }\n  }, [progressRef, seekTo, getDurationRaw, duration, audioRef]);\n\n  const toggleLikeTrack = useCallback((e) => {\n    \n    if (e) {\n      e.stopPropagation();\n    }\n    \n    if (currentTrack?.id) {\n      try {\n        \n        const likeButton = e.currentTarget;\n        likeButton.style.transform = 'scale(1.3)';\n        setTimeout(() => {\n          likeButton.style.transform = 'scale(1)';\n        }, 150);\n        \n        likeTrack(currentTrack.id)\n          .then(result => {\n            console.log(\"Like result:\", result);\n            \n          })\n          .catch(error => {\n            console.error(\"Error liking track:\", error);\n          });\n      } catch (error) {\n        console.error(\"Error liking track:\", error);\n      }\n    }\n  }, [currentTrack, likeTrack]);\n\n  const handleShare = useCallback(() => {\n    if (!currentTrack) return;\n    \n    const trackLink = `${window.location.origin}/music/track/${currentTrack.id}`;\n    \n    copyToClipboard(trackLink);\n  }, [currentTrack]);\n  \n  const copyToClipboard = useCallback((text) => {\n    navigator.clipboard.writeText(text)\n      .then(() => {\n        setShareSnackbar({\n          open: true,\n          message: 'Ссылка на трек скопирована в буфер обмена',\n          severity: 'success'\n        });\n      })\n      .catch(err => {\n        console.error('Не удалось скопировать ссылку:', err);\n        setShareSnackbar({\n          open: true,\n          message: 'Не удалось скопировать ссылку',\n          severity: 'error'\n        });\n      });\n  }, []);\n  \n  const handleCloseSnackbar = useCallback((event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setShareSnackbar(prev => ({ ...prev, open: false }));\n  }, []);\n  \n  const handleVolumeChange = useCallback((_, newValue) => {\n    setVolume(newValue / 100);\n  }, [setVolume]);\n  \n  const handleRepeatClick = useCallback(() => {\n    \n    setRepeatMode(prev => {\n      if (prev === 'off') return 'all';\n      if (prev === 'all') return 'one';\n      return 'off';\n    });\n  }, []);\n  \n  const handleShuffleClick = useCallback(() => {\n    setShuffleMode(prev => !prev);\n  }, []);\n  \n  const openFullScreen = useCallback(() => {\n    setFullScreenOpen(true);\n  }, []);\n  \n  const closeFullScreen = useCallback(() => {\n    setFullScreenOpen(false);\n  }, []);\n  \n  const getVolumeIcon = useMemo(() => {\n    if (isMuted || volume === 0) return <IoVolumeMute size={20} />;\n    if (volume < 0.5) return <IoVolumeMedium size={20} />;\n    return <IoVolumeHigh size={20} />;\n  }, [isMuted, volume]);\n  \n  const getRepeatIcon = useMemo(() => {\n    if (repeatMode === 'one') return <IoRepeat size={20} />;\n    return <IoRepeatOutline size={20} />;\n  }, [repeatMode]);\n  \n  return (\n    <React.Fragment>\n      <PlayerContainer \n        elevation={0} \n        covercolor={dominantColor}\n        onMouseEnter={() => setIsPlayerHovered(true)}\n        onMouseLeave={() => setIsPlayerHovered(false)}\n        sx={{ display: fullScreenOpen ? 'none' : 'flex' }}\n        className={fullScreenOpen ? 'hidden' : ''}\n      >\n        {/* Трек-информация */}\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '25%',\n            cursor: 'pointer',\n          }}\n          onClick={openFullScreen}\n        >\n          <Box\n            component=\"img\"\n            src={currentTrack?.cover_path || '/static/uploads/system/album_placeholder.jpg'}\n            alt={currentTrack?.title || ''}\n            sx={{\n              width: 52,\n              height: 52,\n              borderRadius: 1.5,\n              objectFit: 'cover',\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n              marginRight: 1.5,\n              transition: 'all 0.3s ease',\n              '&:hover': {\n                boxShadow: '0 0 15px rgba(255, 255, 255, 0.1)',\n              },\n            }}\n          />\n          \n          <Box sx={{ overflow: 'hidden', maxWidth: '70%' }}>\n            <MarqueeText\n              variant=\"body1\"\n              ref={titleRef}\n              fontWeight=\"medium\"\n              isactive={titleOverflowing && isPlayerHovered ? 'true' : 'false'}\n              data-text={currentTrack?.title || 'Unknown Title'}\n              sx={{ \n                fontSize: '0.95rem',\n                color: 'white'\n              }}\n            >\n              {currentTrack?.title || 'Unknown Title'}\n            </MarqueeText>\n            \n            <MarqueeText\n              variant=\"body2\"\n              ref={artistRef}\n              isactive={artistOverflowing && isPlayerHovered ? 'true' : 'false'}\n              data-text={currentTrack?.artist || 'Unknown Artist'}\n              sx={{ \n                fontSize: '0.8rem',\n                opacity: 0.7,\n                color: 'white'\n              }}\n            >\n              {currentTrack?.artist || 'Unknown Artist'}\n            </MarqueeText>\n          </Box>\n        </Box>\n        \n        {/* Кнопки управления и прогресс */}\n        <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1, mx: 2 }}>\n          {/* Кнопки */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mb: 0.8 }}>\n            <ControlButton\n              icon={<IoShuffle size={20} />}\n              onClick={handleShuffleClick}\n              ariaLabel=\"Toggle shuffle\"\n              active={shuffleMode}\n            />\n            \n            <ControlButton\n              icon={<IoPlaySkipBack size={20} />}\n              onClick={prevTrack}\n              ariaLabel=\"Previous track\"\n            />\n            \n            <ControlButton\n              icon={isPlaying ? <IoPauseCircle size={24} /> : <IoPlayCircle size={24} />}\n              onClick={togglePlay}\n              ariaLabel={isPlaying ? \"Pause\" : \"Play\"}\n              active={true}\n              activeColor={dominantColor ? `rgba(${dominantColor}, 1)` : null}\n            />\n            \n            <ControlButton\n              icon={<IoPlaySkipForward size={20} />}\n              onClick={nextTrack}\n              ariaLabel=\"Next track\"\n            />\n            \n            <ControlButton\n              icon={repeatMode === 'one' ? <IoRepeat size={20} /> : <IoRepeatOutline size={20} />}\n              onClick={handleRepeatClick}\n              ariaLabel=\"Toggle repeat mode\"\n              active={repeatMode !== 'off'}\n            />\n          </Box>\n          \n          {/* Прогресс */}\n          <Box sx={{ display: 'flex', alignItems: 'center', px: 1 }}>\n            <Typography \n              id=\"desktop-current-time\"\n              variant=\"caption\" \n              sx={{ color: 'rgba(255, 255, 255, 0.7)', mr: 1, minWidth: 35, textAlign: 'center' }}\n            >\n              {formattedCurrentTime}\n            </Typography>\n            \n            <Box\n              ref={progressRef}\n              onClick={handleClickProgress}\n              sx={{ flexGrow: 1 }}\n            >\n              <TrackSlider\n                covercolor={dominantColor}\n                value={seekValue}\n                onChange={handleSeekChange}\n                onMouseDown={handleSeekStart}\n                onChangeCommitted={handleSeekEnd}\n                onTouchStart={handleSeekStart}\n                aria-labelledby=\"track-progress-slider\"\n                step={0.01}\n              />\n            </Box>\n            \n            <Typography \n              id=\"desktop-duration\"\n              variant=\"caption\" \n              sx={{ color: 'rgba(255, 255, 255, 0.7)', ml: 1, minWidth: 35, textAlign: 'center' }}\n            >\n              {formattedDuration}\n            </Typography>\n          </Box>\n        </Box>\n        \n        {/* Дополнительные кнопки */}\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end', width: '25%' }}>\n          <ControlButton\n            icon={currentTrack?.is_liked ? <IoHeart size={20} /> : <IoHeartOutline size={20} />}\n            onClick={toggleLikeTrack}\n            ariaLabel=\"Toggle like\"\n            active={currentTrack?.is_liked}\n            activeColor=\"error.main\"\n          />\n          \n          <ControlButton\n            icon={<IoShareSocial size={20} />}\n            onClick={handleShare}\n            ariaLabel=\"Share track\"\n          />\n          \n          <ControlButton\n            icon={isMuted ? <IoVolumeMute size={20} /> : \n                 volume < 0.5 ? <IoVolumeMedium size={20} /> : \n                 <IoVolumeHigh size={20} />}\n            onClick={toggleMute}\n            ariaLabel=\"Toggle mute\"\n          />\n          \n          <VolumeSlider\n            covercolor={dominantColor}\n            value={isMuted ? 0 : volume * 100}\n            onChange={handleVolumeChange}\n            aria-labelledby=\"volume-slider\"\n            sx={{ mx: 1 }}\n          />\n          \n          <ControlButton\n            icon={<IoChevronDown size={20} />}\n            onClick={openFullScreen}\n            ariaLabel=\"Open fullscreen player\"\n          />\n        </Box>\n      </PlayerContainer>\n      \n      <FullScreenPlayer open={fullScreenOpen} onClose={closeFullScreen} />\n      \n      <Snackbar\n        open={shareSnackbar.open && !fullScreenOpen}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={shareSnackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {shareSnackbar.message}\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n});\n\nexport default DesktopPlayer; "],"names":["PlayerContainer","styled","Paper","theme","covercolor","position","bottom","left","transform","width","maxWidth","minWidth","zIndex","appBar","backgroundColor","backdropFilter","boxShadow","borderRadius","padding","spacing","border","display","alignItems","overflow","opacity","pointerEvents","visibility","content","top","right","background","MarqueeText","Typography","shouldForwardProp","prop","isactive","whiteSpace","textOverflow","animation","animationDelay","paddingLeft","TrackSlider","Slider","color","palette","primary","main","height","transition","VolumeSlider","ControlButton","memo","icon","onClick","ariaLabel","active","activeColor","jsx","IconButton","sx","getColorFromImage","extractDominantColor","DesktopPlayer","useTheme","themeSettings","useContext","ThemeSettingsContext","currentTrack","isPlaying","togglePlay","nextTrack","prevTrack","likeTrack","currentTime","duration","seekTo","volume","setVolume","isMuted","toggleMute","getCurrentTimeRaw","getDurationRaw","audioRef","useMusic","seekValue","setSeekValue","useState","isSeeking","setIsSeeking","fullScreenOpen","setFullScreenOpen","repeatMode","setRepeatMode","shuffleMode","setShuffleMode","dominantColor","setDominantColor","isPlayerHovered","setIsPlayerHovered","titleOverflowing","setTitleOverflowing","artistOverflowing","setArtistOverflowing","shareSnackbar","setShareSnackbar","open","message","severity","progressRef","useRef","titleRef","artistRef","currentSeekValueRef","formattedCurrentTime","useMemo","globalTimeElement","document","getElementById","textContent","time","formatDuration","error","formattedDuration","globalDurationElement","useEffect","isMounted","updateDisplays","currentTimeEl","durationEl","window","audioTiming","progress","current","requestAnimationFrame","animationId","cancelAnimationFrame","scrollWidth","clientWidth","cover_path","handleProgressUpdate","event","detail","progressPercent","addEventListener","undefined","currentAudioProgress","removeEventListener","handleSeekStart","useCallback","handleSeekChange","_","newValue","handleSeekEnd","durationValue","rawDuration","handleClickProgress","rect","getBoundingClientRect","clientX","clampedPosition","Math","min","max","toggleLikeTrack","e","stopPropagation","id","likeButton","currentTarget","style","setTimeout","then","result","catch","handleShare","trackLink","location","origin","copyToClipboard","text","navigator","clipboard","writeText","err","handleCloseSnackbar","reason","prev","handleVolumeChange","handleRepeatClick","handleShuffleClick","openFullScreen","closeFullScreen","IoVolumeMute","size","IoVolumeMedium","IoVolumeHigh","IoRepeat","IoRepeatOutline","jsxs","React","Fragment","children","elevation","onMouseEnter","onMouseLeave","className","Box","cursor","component","src","alt","title","objectFit","marginRight","variant","ref","fontWeight","fontSize","artist","flexDirection","flexGrow","mx","justifyContent","mb","IoShuffle","IoPlaySkipBack","IoPauseCircle","IoPlayCircle","IoPlaySkipForward","px","mr","textAlign","value","onChange","onMouseDown","onChangeCommitted","onTouchStart","step","ml","is_liked","IoHeart","IoHeartOutline","IoShareSocial","IoChevronDown","FullScreenPlayer","onClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert"],"mappings":"mZAqCA,MAAMA,EAAkBC,EAAOC,EAAPD,CAAc,EAAGE,QAAOC,iBAAkB,CAChEC,SAAU,QACVC,OAAQ,GACRC,KAAM,MACNC,UAAW,mBACXC,MAAO,MACPC,SAAU,KACVC,SAAU,IACVC,OAAQT,EAAMS,OAAOC,OAAS,EAC9BC,gBAAiBV,EAAa,QAAQA,WAAsB,wBAC5DW,eAAgB,aAChBC,UAAW,gCACXC,aAAc,GACdC,QAASf,EAAMgB,QAAQ,IACvBC,OAAQ,sCACRC,QAAS,OACTC,WAAY,SACZC,SAAU,SACV,WAAY,CACVF,QAAS,kBACTG,QAAS,EACTC,cAAe,OACfC,WAAY,UAEd,YAAa,CACXC,QAAS,KACTtB,SAAU,WACVuB,IAAK,EACLrB,KAAM,EACNsB,MAAO,EACPvB,OAAQ,EACRwB,WAAY1B,EACV,0CAA0CA,yCAC1C,OACFoB,QAAS,GACTC,cAAe,QAEjB,4BAA6B,CAC3BhB,MAAO,MACPE,SAAU,WAKRoB,EAAc9B,EAAO+B,EAAY,CACrCC,qBAAsC,aAATC,GADXjC,CAEjB,EAAGkC,eAAgB,CACpBC,WAAY,SACZb,SAAU,SACVc,aAAc,WACdhB,QAAS,QACThB,SAAU,WACViC,UAAwB,SAAbH,EAAsB,8BAAgC,OACjEI,eAAgB,OAChB,qBAAsB,CACpB,KAAM,CACJ/B,UAAW,kBAEb,OAAQ,CACNA,UAAW,sBAGf,WAAY,CACVmB,QAAsB,SAAbQ,EAAsB,kBAAoB,OACnD9B,SAAU,WACV+B,WAAY,SACZ7B,KAAM,OACNiC,YAAa,WAIXC,EAAcxC,EAAOyC,EAAPzC,CAAe,EAAGE,QAAOC,iBAAkB,CAC7DuC,MAAOvC,EAAa,QAAQA,QAAmBD,EAAMyC,QAAQC,QAAQC,KACrEC,OAAQ,EACR,qBAAsB,CACpBtC,MAAO,EACPsC,OAAQ,EACRvB,QAAS,EACTwB,WAAY,sCAEd,0DAA2D,CACzDvC,MAAO,GACPsC,OAAQ,GACRvB,QAAS,GAEX,oBAAqB,CACnBA,QAAS,GACTuB,OAAQ,GAEV,qBAAsB,CACpBA,OAAQ,MAINE,EAAehD,EAAOyC,EAAPzC,CAAe,EAAGE,QAAOC,iBAAkB,CAC9DuC,MAAOvC,EAAa,QAAQA,QAAmBD,EAAMyC,QAAQC,QAAQC,KACrErC,MAAO,GACPsC,OAAQ,EACR,qBAAsB,CACpBtC,MAAO,EACPsC,OAAQ,EACR,8BAA+B,CAC7B/B,UAAW,SAGf,oBAAqB,CACnBQ,QAAS,OAKP0B,EAAgBC,OAAK,EAAGC,OAAMC,UAASC,YAAWX,QAAQ,QAASY,UAAS,EAAOC,cAAc,QACpGC,EAAAA,IAAAC,EAAA,CACCL,UACA,aAAYC,EACZK,GAAI,CACFhB,MAAOY,EAAUC,GAAe,eAAkBb,EAClD,UAAW,CACT7B,gBAAiB,6BAIpBsC,cAKCQ,EAAoBC,EAEpBC,EAAgBX,OAAK,KACXY,IACR,MAAAC,cAAEA,GAAkBC,EAAAA,WAAWC,IAC/BC,aACJA,EAAAA,UACAC,EAAAA,WACAC,EAAAA,UACAC,EAAAA,UACAC,EAAAA,UACAC,EAAAA,YACAC,EAAAA,SACAC,EAAAA,OACAC,EAAAA,OACAC,EAAAA,UACAC,EAAAA,QACAC,EAAAA,WACAC,EAAAA,kBACAC,EAAAA,eACAC,EAAAA,SACAC,GACEC,KAEGC,EAAWC,GAAgBC,EAAAA,SAAS,IACpCC,EAAWC,GAAgBF,EAAAA,UAAS,IACpCG,EAAgBC,IAAqBJ,EAAAA,UAAS,IAC9CK,GAAYC,IAAiBN,EAAAA,SAAS,QACtCO,GAAaC,IAAkBR,EAAAA,UAAS,IACxCS,GAAeC,IAAoBV,EAAAA,SAAS,OAC5CW,GAAiBC,IAAsBZ,EAAAA,UAAS,IAGhDa,GAAkBC,IAAuBd,EAAAA,UAAS,IAClDe,GAAmBC,IAAwBhB,EAAAA,UAAS,IAEpDiB,GAAeC,IAAoBlB,WAAS,CACjDmB,MAAM,EACNC,QAAS,GACTC,SAAU,YAGNC,GAAcC,SAAO,MACrBC,GAAWD,SAAO,MAClBE,GAAYF,SAAO,MACHA,EAAAA,OAAO,GACvBG,MAAAA,GAAsBH,SAAO,GAE7BI,GAAuBC,EAAAA,QAAQ,KAC/B,IAEIC,MAAAA,EAAoBC,SAASC,eAAe,8BAC9CF,GAAAA,GAAqBA,EAAkBG,YACzC,OAAOH,EAAkBG,YAIvB,GAA6B,mBAAtBtC,EAAkC,CAC3C,MAAMuC,EAAOvC,IACb,OAAOwC,EAA+B,iBAATD,EAAoBA,EAAO,EAAC,CAIpD,MAAA,aACAE,GAEA,MAAA,MAAA,GAER,CAACzC,IAEE0C,GAAoBR,EAAAA,QAAQ,KAC5B,IAEIS,MAAAA,EAAwBP,SAASC,eAAe,0BAClDM,GAAAA,GAAyBA,EAAsBL,YACjD,OAAOK,EAAsBL,YAI3B,GAA0B,mBAAnBrC,EAA+B,CACxC,MAAMP,EAAWO,IACjB,OAAOuC,EAAmC,iBAAb9C,EAAwBA,EAAW,EAAC,CAI5D,MAAA,aACA+C,GAEA,MAAA,MAAA,GAER,CAACxC,IAqGJ,GAlGA2C,EAAAA,UAAU,KAER,IAAIC,GAAY,EAGhB,MAAMC,EAAiBA,KACjB,IAEF,IAAKD,EAAW,OAEVE,MAAAA,EAAgBX,SAASC,eAAe,wBACxCW,EAAaZ,SAASC,eAAe,oBAGvCU,GAAiBE,OAAOC,aAAeD,OAAOC,YAAYjB,uBAC9CK,EAAAA,YAAcW,OAAOC,YAAYjB,sBAG7Ce,GAAcC,OAAOC,aAAeD,OAAOC,YAAYR,oBAC9CJ,EAAAA,YAAcW,OAAOC,YAAYR,oBAIzCnC,GAAa0C,OAAOC,aAAsD,iBAAhCD,OAAOC,YAAYC,WACnDF,EAAAA,OAAOC,YAAYC,UACZC,GAAAA,QAAUH,OAAOC,YAAYC,UAI/CN,GACFQ,sBAAsBP,SAEjBL,GAGHI,GACFQ,sBAAsBP,EACxB,GAKEQ,EAAcD,sBAAsBP,GAG1C,MAAO,KACOD,GAAA,EACZU,qBAAqBD,KAEtB,CAAC/C,IAGJqC,EAAAA,UAAU,OAEP,IAEHA,EAAAA,UAAU,KACJd,GAASsB,SACXhC,GAAoBU,GAASsB,QAAQI,YAAc1B,GAASsB,QAAQK,aAElE1B,GAAUqB,SACZ9B,GAAqBS,GAAUqB,QAAQI,YAAczB,GAAUqB,QAAQK,cAExE,CAACtE,IAEJyD,EAAAA,UAAU,KACJzD,GAAcuE,YAEdvE,EAAAA,EAAauE,YAAc,+CAChB/F,IACTqD,GAAiBrD,MAItB,CAACwB,IAEJyD,EAAAA,UAAU,KAER,MAAMe,EAAkCC,KACjCrD,GAAaqD,EAAMC,QAAUD,EAAMC,OAAOC,kBAChCF,EAAAA,EAAMC,OAAOC,iBACNV,GAAAA,QAAUQ,EAAMC,OAAOC,kBAY/C,OARSC,SAAAA,iBAAiB,sBAAuBJ,QAGbK,IAAhCf,OAAOgB,sBAAuC1D,IAChDF,EAAa4C,OAAOgB,sBACpBjC,GAAoBoB,QAAUH,OAAOgB,sBAGhC,KACIC,SAAAA,oBAAoB,sBAAuBP,KAErD,CAACpD,KAECpB,EACI,OAAA,KAGHgF,MAAAA,GAAkBC,EAAAA,YAAY,KAClC5D,GAAa,IACZ,IAEG6D,GAAmBD,EAAAA,YAAY,CAACE,EAAGC,KACvClE,EAAakE,IACZ,IAEGC,GAAgBJ,EAAAA,YAAY,CAACE,EAAGC,KAChC,IACF,IAAIE,EAAgB,EAGhB,GAA0B,mBAAnBxE,EAA+B,CACxC,MAAMyE,EAAczE,IACO,iBAAhByE,GAA4BA,EAAc,EACnCA,EAAAA,EACa,iBAAbhF,GAAyBA,EAAW,IACpCA,EAAAA,EAET,KAAoB,iBAAbA,GAAyBA,EAAW,EACpCA,EAAAA,EACPQ,GAAYA,EAASkD,SAAWlD,EAASkD,QAAQ1D,WAE1D+E,EAAgBvE,EAASkD,QAAQ1D,UAI/B+E,EAAgB,GACVF,EAAAA,EAAWE,EAAiB,KAGtCjE,GAAa,SACNiC,GAEPjC,GAAa,EAAK,GAEnB,CAACb,EAAQM,EAAgBP,EAAUQ,IAEhCyE,GAAsBP,cAAuBR,IAC7C,IACF,GAAIhC,GAAYwB,QAAS,CAEvB,IAAIqB,EAAgB,EAEhB,GAA0B,mBAAnBxE,EAA+B,CACxC,MAAMyE,EAAczE,IACO,iBAAhByE,GAA4BA,EAAc,EACnCA,EAAAA,EACa,iBAAbhF,GAAyBA,EAAW,IACpCA,EAAAA,EAET,KAAoB,iBAAbA,GAAyBA,EAAW,EACpCA,EAAAA,EACPQ,GAAYA,EAASkD,SAAWlD,EAASkD,QAAQ1D,WAC1D+E,EAAgBvE,EAASkD,QAAQ1D,UAInC,GAAI+E,EAAgB,EAAG,CACfG,MAAAA,EAAOhD,GAAYwB,QAAQyB,wBAC3BxJ,GAAauI,EAAMkB,QAAUF,EAAKrJ,MAAQqJ,EAAKnJ,MAAS,IACxDsJ,EAAkBC,KAAKC,IAAID,KAAKE,IAAI7J,EAAU,GAAI,KACxDgF,EAAa0E,GACLA,EAAAA,EAAkBN,EAAiB,IAAG,CAChD,QAEKhC,GAAO,GAGf,CAACb,GAAajC,EAAQM,EAAgBP,EAAUQ,IAE7CiF,GAAkBf,cAAmBgB,IAMzC,GAJIA,GACFA,EAAEC,kBAGAlG,GAAcmG,GACZ,IAEF,MAAMC,EAAaH,EAAEI,cACrBD,EAAWE,MAAMjK,UAAY,aAC7BkK,WAAW,KACTH,EAAWE,MAAMjK,UAAY,YAC5B,KAEHgE,EAAUL,EAAamG,IACpBK,KAAeC,OAIfC,MAAepD,aAGXA,GAAO,GAIjB,CAACtD,EAAcK,IAEZsG,GAAc1B,EAAAA,YAAY,KAC9B,IAAKjF,EAAc,OAEnB,MAAM4G,EAAY,GAAG9C,OAAO+C,SAASC,sBAAsB9G,EAAamG,KAExEY,GAAgBH,IACf,CAAC5G,IAEE+G,GAAkB9B,cAAsB+B,IAC5CC,UAAUC,UAAUC,UAAUH,GAC3BR,KAAK,KACanE,GAAA,CACfC,MAAM,EACNC,QAAS,4CACTC,SAAU,cAGbkE,MAAaU,IAEK/E,GAAA,CACfC,MAAM,EACNC,QAAS,gCACTC,SAAU,aAGf,IAEG6E,GAAsBpC,EAAAA,YAAY,CAACR,EAAO6C,KAC/B,cAAXA,GAGJjF,GAA0BkF,IAAA,IAAKA,EAAMjF,MAAM,MAC1C,IAEGkF,GAAqBvC,EAAAA,YAAY,CAACE,EAAGC,KACzC1E,EAAU0E,EAAW,MACpB,CAAC1E,IAEE+G,GAAoBxC,EAAAA,YAAY,KAEpCxD,GAAsB8F,GACP,QAATA,EAAuB,MACd,QAATA,EAAuB,MACpB,QAER,IAEGG,GAAqBzC,EAAAA,YAAY,KACtBsC,GAAAA,IAASA,IACvB,IAEGI,GAAiB1C,EAAAA,YAAY,KACjC1D,IAAkB,IACjB,IAEGqG,GAAkB3C,EAAAA,YAAY,KAClC1D,IAAkB,IACjB,IAcD,OAZoBwB,EAAAA,QAAQ,IACxBpC,GAAsB,IAAXF,EAAsBnB,EAAAA,IAAAuI,EAAA,CAAaC,KAAM,KACpDrH,EAAS,GAAanB,EAAAA,IAAAyI,EAAA,CAAeD,KAAM,KACxCxI,EAAAA,IAAC0I,EAAa,CAAAF,KAAM,KAC1B,CAACnH,EAASF,IAESsC,EAAAA,QAAQ,IACT,QAAfvB,GAA8BlC,EAAAA,IAAA2I,EAAA,CAASH,KAAM,KAC1CxI,EAAAA,IAAC4I,EAAgB,CAAAJ,KAAM,KAC7B,CAACtG,KAGF2G,OAACC,EAAMC,SAAN,CACCC,SAAA,CAAAH,EAAAA,KAACtM,EACC,CAAA0M,UAAW,EACXtM,WAAY2F,GACZ4G,aAAc,IAAMzG,IAAmB,GACvC0G,aAAc,IAAM1G,IAAmB,GACvCvC,GAAI,CAAEtC,QAASoE,EAAiB,OAAS,QACzCoH,UAAWpH,EAAiB,SAAW,GAGvCgH,SAAA,CAAAH,OAACQ,GACCnJ,GAAI,CACFtC,QAAS,OACTC,WAAY,SACZb,MAAO,MACPsM,OAAQ,WAEV1J,QAASyI,GAETW,SAAA,CAAChJ,EAAAA,IAAAqJ,EAAA,CACCE,UAAU,MACVC,IAAK9I,GAAcuE,YAAc,+CACjCwE,IAAK/I,GAAcgJ,OAAS,GAC5BxJ,GAAI,CACFlD,MAAO,GACPsC,OAAQ,GACR9B,aAAc,IACdmM,UAAW,QACXhM,OAAQ,qCACRiM,YAAa,IACbrK,WAAY,gBACZ,UAAW,CACThC,UAAW,wCAKjBsL,OAACQ,GAAInJ,GAAI,CAAEpC,SAAU,SAAUb,SAAU,OACvC+L,SAAA,CAAAhJ,MAAC1B,GACCuL,QAAQ,QACRC,IAAKzG,GACL0G,WAAW,SACXrL,SAAUgE,IAAoBF,GAAkB,OAAS,QACzD,YAAW9B,GAAcgJ,OAAS,gBAClCxJ,GAAI,CACF8J,SAAU,UACV9K,MAAO,SAGRwB,SAAcgJ,GAAAA,OAAS,kBAGzB1J,EAAAA,IAAA1B,EAAA,CACCuL,QAAQ,QACRC,IAAKxG,GACL5E,SAAUkE,IAAqBJ,GAAkB,OAAS,QAC1D,YAAW9B,GAAcuJ,QAAU,iBACnC/J,GAAI,CACF8J,SAAU,SACVjM,QAAS,GACTmB,MAAO,SAGRwB,SAAcuJ,GAAAA,QAAU,yBAM/BpB,OAACQ,GAAInJ,GAAI,CAAEtC,QAAS,OAAQsM,cAAe,SAAUC,SAAU,EAAGC,GAAI,GAEpEpB,SAAA,CAAAH,OAACQ,GAAInJ,GAAI,CAAEtC,QAAS,OAAQyM,eAAgB,SAAUC,GAAI,IACxDtB,SAAA,CAAAhJ,EAAAA,IAACP,EACC,CAAAE,KAAOK,EAAAA,IAAAuK,EAAA,CAAU/B,KAAM,KACvB5I,QAASwI,GACTvI,UAAU,iBACVC,OAAQsC,KAGVpC,EAAAA,IAACP,EACC,CAAAE,KAAOK,EAAAA,IAAAwK,EAAA,CAAehC,KAAM,KAC5B5I,QAASkB,EACTjB,UAAU,mBAGZG,EAAAA,IAACP,EACC,CAAAE,KAAMgB,EAAYX,EAAAA,IAACyK,EAAc,CAAAjC,KAAM,KAAUxI,EAAAA,IAAA0K,EAAA,CAAalC,KAAM,KACpE5I,QAASgB,EACTf,UAAWc,EAAY,QAAU,OACjCb,QAAQ,EACRC,YAAauC,GAAgB,QAAQA,SAAsB,OAG7DtC,EAAAA,IAACP,EACC,CAAAE,KAAOK,EAAAA,IAAA2K,EAAA,CAAkBnC,KAAM,KAC/B5I,QAASiB,EACThB,UAAU,eAGZG,EAAAA,IAACP,GACCE,KAAqB,QAAfuC,GAAwBlC,EAAAA,IAAA2I,EAAA,CAASH,KAAM,WAAUI,EAAgB,CAAAJ,KAAM,KAC7E5I,QAASuI,GACTtI,UAAU,qBACVC,OAAuB,QAAfoC,QAKZ2G,OAACQ,GAAInJ,GAAI,CAAEtC,QAAS,OAAQC,WAAY,SAAU+M,GAAI,GACpD5B,SAAA,CAAAhJ,EAAAA,IAACzB,EACC,CAAAsI,GAAG,uBACHgD,QAAQ,UACR3J,GAAI,CAAEhB,MAAO,2BAA4B2L,GAAI,EAAG3N,SAAU,GAAI4N,UAAW,UAExEtH,SACHA,WAEC6F,EACC,CAAAS,IAAK3G,GACLvD,QAASsG,GACThG,GAAI,CAAEiK,SAAU,GAEhBnB,SAAChJ,MAAAhB,EAAA,CACCrC,WAAY2F,GACZyI,MAAOpJ,EACPqJ,SAAUpF,GACVqF,YAAavF,GACbwF,kBAAmBnF,GACnBoF,aAAczF,GACd,kBAAgB,wBAChB0F,KAAM,cAIT7M,EACC,CAAAsI,GAAG,mBACHgD,QAAQ,UACR3J,GAAI,CAAEhB,MAAO,2BAA4BmM,GAAI,EAAGnO,SAAU,GAAI4N,UAAW,UAExE7G,SACHA,WAKJ4E,OAACQ,GAAInJ,GAAI,CAAEtC,QAAS,OAAQC,WAAY,SAAUwM,eAAgB,WAAYrN,MAAO,OACnFgM,SAAA,CAAChJ,EAAAA,IAAAP,EAAA,CACCE,KAAMe,GAAc4K,eAAYC,EAAQ,CAAA/C,KAAM,KAAUxI,EAAAA,IAAAwL,EAAA,CAAehD,KAAM,KAC7E5I,QAAS8G,GACT7G,UAAU,cACVC,OAAQY,GAAc4K,SACtBvL,YAAY,eAGdC,EAAAA,IAACP,EACC,CAAAE,KAAOK,EAAAA,IAAAyL,EAAA,CAAcjD,KAAM,KAC3B5I,QAASyH,GACTxH,UAAU,gBAGZG,EAAAA,IAACP,EACC,CAAAE,KAAM0B,EAAUrB,EAAAA,IAACuI,GAAaC,KAAM,KAC/BrH,EAAS,GAAMnB,EAAAA,IAACyI,GAAeD,KAAM,KACrCxI,EAAAA,IAAC0I,EAAa,CAAAF,KAAM,KACzB5I,QAAS0B,EACTzB,UAAU,gBAGXG,EAAAA,IAAAR,EAAA,CACC7C,WAAY2F,GACZyI,MAAO1J,EAAU,EAAa,IAATF,EACrB6J,SAAU9C,GACV,kBAAgB,gBAChBhI,GAAI,CAAEkK,GAAI,KAGZpK,EAAAA,IAACP,EACC,CAAAE,KAAOK,EAAAA,IAAA0L,EAAA,CAAclD,KAAM,KAC3B5I,QAASyI,GACTxI,UAAU,iCAKfG,EAAAA,IAAA2L,EAAA,CAAiB3I,KAAMhB,EAAgB4J,QAAStD,KAEjDtI,EAAAA,IAAC6L,EACC,CAAA7I,KAAMF,GAAcE,OAAShB,EAC7B8J,iBAAkB,IAClBF,QAAS7D,GACTgE,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAEhDjD,eAACkD,EACC,CAAAN,QAAS7D,GACT7E,SAAUJ,GAAcI,SACxBhD,GAAI,CAAElD,MAAO,QAEZ8F,SAAcG,GAAAA"}