{"version":3,"file":"ElementAuth.DtLlgwrh.js","sources":["../../src/pages/Auth/ElementAuth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { \n  Box, \n  Typography, \n  CircularProgress, \n  Alert, \n  Container, \n  Paper, \n  Button,\n  Chip\n} from '@mui/material';\n\n/**\n * Компонент для обработки авторизации через Element\n * Принимает token из query параметров и отправляет запрос на сервер\n */\nconst ElementAuth = () => {\n  const { token } = useParams();\n  const navigate = useNavigate();\n  const [status, setStatus] = useState('Подготовка авторизации...');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionInfo, setConnectionInfo] = useState(null);\n  const [attemptCount, setAttemptCount] = useState(0);\n\n  useEffect(() => {\n    console.log(\"[BROWSER] Запуск авторизации с токеном:\", token);\n    checkServiceStatus();\n    const timeoutId = setTimeout(() => tryAuth(), 500);\n    return () => clearTimeout(timeoutId);\n  }, [token]);\n\n  \n  const checkServiceStatus = async () => {\n    try {\n      const response = await fetch('/api/auth/status');\n      const status = await response.json();\n      setConnectionInfo(status);\n      console.log(\"[BROWSER] Статус сервиса:\", status);\n      \n      if (!status.external_socket_connected) {\n        setStatus(\"Ожидание подключения к серверу Element...\");\n      }\n    } catch (err) {\n      console.error(\"[BROWSER] Ошибка при проверке статуса:\", err);\n    }\n  };\n\n  const tryAuth = async () => {\n    setAttemptCount(prev => prev + 1);\n    setStatus(\"Попытка авторизации...\");\n    console.log(\"[BROWSER] Отправка запроса на сервер...\");\n\n    try {\n      const response = await fetch(`/api/auth_elem/${token}`, {  \n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ connect_key: token })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Ошибка сервера: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log(\"[BROWSER] Ответ сервера:\", result);\n      \n      if(result.status === \"success\" && result.redirect) {\n        setStatus(\"Авторизация успешна. Перенаправляем...\");\n        console.log(\"[BROWSER] Перенаправление на:\", result.redirect);\n        \n        \n        if (result.elem_connected) {\n          localStorage.setItem('elem_connected', 'true');\n          \n          window.dispatchEvent(new StorageEvent('storage', {\n            key: 'elem_connected',\n            newValue: 'true'\n          }));\n        }\n        \n        navigate(result.redirect);\n      } else if (result.status === \"error\" && result.message.includes(\"недоступен\")) {\n        \n        setError(result.message);\n        setStatus(\"Проблема с сервисом авторизации\");\n        setIsLoading(false);\n        \n        await checkServiceStatus();\n      } else {\n        console.error(\"[BROWSER] ❌ Ошибка авторизации:\", result.message);\n        setError(result.message || \"Неизвестная ошибка\");\n        setStatus(\"Ошибка авторизации\");\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.error(\"[BROWSER] ❌ Ошибка связи с сервером:\", err);\n      setError(`Ошибка связи: ${err.message}`);\n      setStatus(\"Ошибка авторизации\");\n      setIsLoading(false);\n      \n      await checkServiceStatus();\n    }\n  };\n\n  \n  const handleRetry = () => {\n    setError('');\n    setIsLoading(true);\n    tryAuth();\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\n      <Paper \n        elevation={3} \n        sx={{ \n          p: 4, \n          display: 'flex', \n          flexDirection: 'column', \n          alignItems: 'center',\n          borderRadius: 2,\n          background: 'rgba(30, 30, 30, 0.8)',\n          backdropFilter: 'blur(10px)'\n        }}\n      >\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ color: 'primary.main' }}>\n          Авторизация через Element\n        </Typography>\n        \n        {connectionInfo && (\n          <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 1 }}>\n            <Chip \n              label={connectionInfo.external_socket_connected ? \"Соединение активно\" : \"Соединение отсутствует\"} \n              color={connectionInfo.external_socket_connected ? \"success\" : \"error\"}\n              size=\"small\"\n            />\n            {connectionInfo.using_proxy && (\n              <Chip \n                label={`${connectionInfo.proxy_type || \"\"} прокси`} \n                color=\"info\"\n                size=\"small\"\n              />\n            )}\n          </Box>\n        )}\n        \n        {isLoading ? (\n          <Box sx={{ textAlign: 'center', my: 4 }}>\n            <CircularProgress size={60} thickness={4} sx={{ mb: 3 }} />\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              {status}\n            </Typography>\n            {attemptCount > 1 && (\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                Попытка {attemptCount}...\n              </Typography>\n            )}\n          </Box>\n        ) : (\n          <Box sx={{ width: '100%', mt: 2 }}>\n            {error && (\n              <Alert \n                severity=\"error\" \n                sx={{ mb: 3 }}\n              >\n                {error}\n              </Alert>\n            )}\n            \n            <Button \n              variant=\"contained\" \n              color=\"primary\" \n              fullWidth \n              onClick={handleRetry}\n              sx={{ mt: 2 }}\n            >\n              Попробовать снова\n            </Button>\n            \n            <Button \n              variant=\"outlined\" \n              fullWidth \n              onClick={() => navigate('/login')}\n              sx={{ mt: 2 }}\n            >\n              Вернуться на страницу входа\n            </Button>\n          </Box>\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ElementAuth; "],"names":["ElementAuth","token","useParams","navigate","useNavigate","status","setStatus","useState","error","setError","isLoading","setIsLoading","connectionInfo","setConnectionInfo","attemptCount","setAttemptCount","useEffect","checkServiceStatus","timeoutId","setTimeout","tryAuth","clearTimeout","async","response","fetch","json","external_socket_connected","err","prev","method","headers","body","JSON","stringify","connect_key","ok","Error","result","redirect","elem_connected","setItem","dispatchEvent","StorageEvent","key","newValue","message","includes","jsx","Container","maxWidth","sx","mt","children","jsxs","Paper","elevation","p","display","flexDirection","alignItems","borderRadius","background","backdropFilter","Typography","variant","component","gutterBottom","color","Box","mb","justifyContent","gap","Chip","label","size","using_proxy","proxy_type","textAlign","my","CircularProgress","thickness","width","Alert","severity","Button","fullWidth","onClick","handleRetry"],"mappings":"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"}