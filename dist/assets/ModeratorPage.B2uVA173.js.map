{"version":3,"file":"ModeratorPage.B2uVA173.js","sources":["../../node_modules/@mui/icons-material/LibraryMusic.js","../../node_modules/@mui/icons-material/AccessTime.js","../../node_modules/@mui/icons-material/OpenInNew.js","../../node_modules/@mui/icons-material/Paid.js","../../node_modules/@mui/icons-material/FileUpload.js","../../node_modules/@mui/icons-material/Dashboard.js","../../node_modules/@mui/icons-material/DoNotDisturb.js","../../node_modules/@mui/icons-material/Audiotrack.js","../../node_modules/@mui/icons-material/EmojiEventsOutlined.js","../../node_modules/@mui/icons-material/Stars.js","../../src/UIKIT/DecorationMenu/DecorationMenu.js","../../src/pages/Admin/ModeratorPage.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-2 5h-3v5.5c0 1.38-1.12 2.5-2.5 2.5S10 13.88 10 12.5s1.12-2.5 2.5-2.5c.57 0 1.08.19 1.5.51V5h4zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4z\"\n}), 'LibraryMusic');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m.88 15.76V19h-1.75v-1.29c-.74-.18-2.39-.77-3.02-2.96l1.65-.67c.06.22.58 2.09 2.4 2.09.93 0 1.98-.48 1.98-1.61 0-.96-.7-1.46-2.28-2.03-1.1-.39-3.35-1.03-3.35-3.31 0-.1.01-2.4 2.62-2.96V5h1.75v1.24c1.84.32 2.51 1.79 2.66 2.23l-1.58.67c-.11-.35-.59-1.34-1.9-1.34-.7 0-1.81.37-1.81 1.39 0 .95.86 1.31 2.64 1.9 2.4.83 3.01 2.05 3.01 3.45 0 2.63-2.5 3.13-3.02 3.22\"\n}), 'Paid');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\"\n}), 'FileUpload');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13h8V3H3zm0 8h8v-6H3zm10 0h8V11h-8zm0-18v6h8V3z\"\n}), 'Dashboard');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20m6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9\"\n}), 'DoNotDisturb');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3z\"\n}), 'Audiotrack');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5h-2V3H7v2H5c-1.1 0-2 .9-2 2v1c0 2.55 1.92 4.63 4.39 4.94.63 1.5 1.98 2.63 3.61 2.96V19H7v2h10v-2h-4v-3.1c1.63-.33 2.98-1.46 3.61-2.96C19.08 12.63 21 10.55 21 8V7c0-1.1-.9-2-2-2M5 8V7h2v3.82C5.84 10.4 5 9.3 5 8m7 6c-1.65 0-3-1.35-3-3V5h6v6c0 1.65-1.35 3-3 3m7-6c0 1.3-.84 2.4-2 2.82V7h2z\"\n}), 'EmojiEventsOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2m4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23z\"\n}), 'Stars');","import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Divider,\n  CircularProgress,\n  Paper,\n  Grid,\n  Tooltip\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  backgroundImage:'unset',\n  border: '2px solid rgb(17, 17, 17)',\n\n}));\n\nconst DecorationPreview = styled(Box)(({ theme, decoration }) => {\n  const isGradient = decoration?.background?.includes('linear-gradient');\n  const isImage = decoration?.background?.includes('/');\n\n  return {\n    position: 'relative',\n    width: '100%',\n    height: '80px',\n    borderRadius: theme.shape.borderRadius,\n    overflow: 'hidden',\n    background: decoration?.background ? (\n      isImage ? `url(${decoration.background})` : decoration.background\n    ) : theme.palette.background.paper,\n    backgroundSize: isImage ? 'cover' : 'auto',\n    backgroundPosition: 'center',\n    marginBottom: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  };\n});\n\nconst DecorationItem = styled('img')({\n  position: 'absolute',\n  right: 0,\n  height: 'max-content',\n  maxHeight: '60px',\n  opacity: 1,\n  pointerEvents: 'none',\n});\n\nconst DecorationMenu = ({ open, onClose, userId, username }) => {\n  const [loading, setLoading] = useState(false);\n  const [availableDecorations, setAvailableDecorations] = useState([]);\n  const [userDecorations, setUserDecorations] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchDecorations = async () => {\n    setLoading(true);\n    try {\n      const [availableRes, userRes] = await Promise.all([\n        fetch('/api/moderator/decorations'),\n        fetch(`/api/moderator/users/${userId}/decorations`)\n      ]);\n\n      if (!availableRes.ok || !userRes.ok) {\n        throw new Error('Failed to fetch decorations');\n      }\n\n      const availableData = await availableRes.json();\n      const userData = await userRes.json();\n\n      setAvailableDecorations(availableData.decorations || []);\n      setUserDecorations(userData.decorations.map(item => ({\n        ...item.decoration,\n        is_active: item.is_active,\n        user_decoration_id: item.id\n      })) || []);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (open && userId) {\n      fetchDecorations();\n    }\n  }, [open, userId]);\n\n  const handleGrantDecoration = async (decorationId) => {\n    try {\n      const response = await fetch(`/api/moderator/users/${userId}/decorations`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ decoration_id: decorationId })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to grant decoration');\n      }\n\n      fetchDecorations();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleRevokeDecoration = async (decorationId) => {\n    try {\n      const response = await fetch(`/api/moderator/users/${userId}/decorations/${decorationId}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to revoke decoration');\n      }\n\n      fetchDecorations();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const renderDecorationItem = (decoration, isUserDecoration = false) => {\n    const userHasDecoration = userDecorations.some(ud => ud.id === decoration.id);\n    const userDecorationData = userDecorations.find(ud => ud.id === decoration.id);\n    \n    return (\n      <StyledPaper key={decoration.id}>\n        <DecorationPreview decoration={decoration}>\n          {decoration.item_path && (() => {\n            const [path, ...styles] = decoration.item_path.split(';');\n            const styleObj = styles.reduce((acc, style) => {\n              const [key, value] = style.split(':').map(s => s.trim());\n              return { ...acc, [key]: value };\n            }, {});\n            \n            return (\n              <DecorationItem\n                src={path}\n                style={styleObj}\n                alt=\"\"\n              />\n            );\n          })()}\n        </DecorationPreview>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"subtitle1\">{decoration.name}</Typography>\n          {isUserDecoration ? (\n            <Tooltip title=\"Отозвать декорацию\">\n              <IconButton \n                onClick={() => handleRevokeDecoration(decoration.id)}\n                color=\"error\"\n                size=\"small\"\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title={userHasDecoration ? 'Уже выдано' : 'Выдать декорацию'}>\n              <span>\n                <IconButton\n                  onClick={() => handleGrantDecoration(decoration.id)}\n                  color=\"primary\"\n                  size=\"small\"\n                  disabled={userHasDecoration}\n                >\n                  {userHasDecoration ? <CheckCircleIcon /> : <AddIcon />}\n                </IconButton>\n              </span>\n            </Tooltip>\n          )}\n        </Box>\n      </StyledPaper>\n    );\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n      PaperProps={{\n        style: {\n          backgroundImage: 'unset',\n        },\n      }}\n    >\n      <DialogTitle>\n        Управление декорациями пользователя {username}\n      </DialogTitle>\n      <DialogContent>\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n            <CircularProgress />\n          </Box>\n        ) : error ? (\n          <Typography color=\"error\">{error}</Typography>\n        ) : (\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h6\" gutterBottom>\n                Декорации пользователя\n              </Typography>\n              {userDecorations.map(decoration => renderDecorationItem(decoration, true))}\n              {userDecorations.length === 0 && (\n                <Typography color=\"textSecondary\">\n                  У пользователя нет декораций\n                </Typography>\n              )}\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h6\" gutterBottom>\n                Доступные декорации\n              </Typography>\n              {availableDecorations.map(decoration => renderDecorationItem(decoration))}\n            </Grid>\n          </Grid>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Закрыть\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DecorationMenu; ","import React, { useContext, useEffect, useState, useRef, useCallback } from 'react';\nimport { \n  Box, \n  Typography, \n  List, \n  ListItem, \n  ListItemIcon, \n  ListItemText, \n  Paper, \n  Avatar, \n  Container, \n  Button, \n  Divider,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  Tabs,\n  Tab,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  Switch,\n  Tooltip,\n  Badge,\n  CardMedia,\n  CardActions,\n  Fade,\n  Zoom,\n  Stack,\n  DialogContentText,\n  styled,\n  Checkbox\n} from '@mui/material';\nimport { AuthContext } from '../../context/AuthContext';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport PostAddIcon from '@mui/icons-material/PostAdd';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport PersonIcon from '@mui/icons-material/Person';\nimport DoneIcon from '@mui/icons-material/Done';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport CreditCardIcon from '@mui/icons-material/CreditCard';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport SaveIcon from '@mui/icons-material/Save';\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport DoNotDisturbIcon from '@mui/icons-material/DoNotDisturb';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport axios from 'axios';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport { Link } from 'react-router-dom';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport BlockIcon from '@mui/icons-material/Block';\nimport HistoryIcon from '@mui/icons-material/History';\nimport LinkIcon from '@mui/icons-material/Link';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport AudiotrackIcon from '@mui/icons-material/Audiotrack';\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\nimport QueueMusicIcon from '@mui/icons-material/QueueMusic';\nimport AddIcon from '@mui/icons-material/Add';\nimport EmojiEventsOutlinedIcon from '@mui/icons-material/EmojiEventsOutlined';\nimport CloseIcon from '@mui/icons-material/Close';\nimport VpnKeyIcon from '@mui/icons-material/VpnKey';\nimport StarsIcon from '@mui/icons-material/Stars';\nimport DecorationMenu from '../../UIKIT/DecorationMenu';\nimport VerifiedIcon from '@mui/icons-material/Verified';\n\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialog-container\": {\n    zIndex: 999999999999\n  },\n  \"& .MuiDialog-paper\": {\n    borderRadius: 12,\n    background: 'rgba(18, 18, 18, 0.8)',\n    backdropFilter: 'blur(10px)',\n    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n    border: '1px solid rgba(255, 255, 255, 0.1)',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      maxWidth: '100%',\n      margin: 0,\n      borderRadius: 0,\n    }\n  },\n  \"& .MuiDialogTitle-root\": {\n    fontSize: '1.2rem',\n    fontWeight: 500\n  },\n  \"& .MuiDialogContentText-root\": {\n    fontSize: '0.95rem',\n    lineHeight: 1.5,\n    overflowWrap: 'break-word',\n    wordBreak: 'break-word'\n  },\n  \"& .MuiDialogContent-root\": {\n    padding: '16px 24px',\n    '@media (max-width: 600px)': {\n      padding: '12px 16px',\n      fontSize: '0.9rem'\n    }\n  }\n}));\n\n\nconst snackbarStyle = {\n  zIndex: 9999999\n};\n\nconst ModeratorPage = () => {\n  const { user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [tabValue, setTabValue] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [moderatorData, setModeratorData] = useState(null);\n  const [permissions, setPermissions] = useState({});\n  const [error, setError] = useState(null);\n  const [lastModeratorCheck, setLastModeratorCheck] = useState(0);\n  \n  \n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  \n  const [posts, setPosts] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const [bugReports, setBugReports] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [artists, setArtists] = useState([]);\n  \n  \n  const [deletePostDialogOpen, setDeletePostDialogOpen] = useState(false);\n  const [deleteTrackDialogOpen, setDeleteTrackDialogOpen] = useState(false);\n  const [deleteCommentDialogOpen, setDeleteCommentDialogOpen] = useState(false);\n  const [deleteAvatarDialogOpen, setDeleteAvatarDialogOpen] = useState(false);\n  const [editUserDialogOpen, setEditUserDialogOpen] = useState(false);\n  const [bugReportStatusDialogOpen, setBugReportStatusDialogOpen] = useState(false);\n  const [editBadgeDialogOpen, setEditBadgeDialogOpen] = useState(false);\n  const [deleteBadgeDialogOpen, setDeleteBadgeDialogOpen] = useState(false);\n  const [deleteArtistDialogOpen, setDeleteArtistDialogOpen] = useState(false);\n  const [editArtistDialogOpen, setEditArtistDialogOpen] = useState(false);\n  const [createArtistDialogOpen, setCreateArtistDialogOpen] = useState(false);\n  const [manageArtistTracksDialogOpen, setManageArtistTracksDialogOpen] = useState(false);\n  const [artistTracks, setArtistTracks] = useState([]);\n  const [searchableTracksList, setSearchableTracksList] = useState([]);\n  const [trackSearch, setTrackSearch] = useState('');\n  const [loadingTracks, setLoadingTracks] = useState(false);\n  const [searchMode, setSearchMode] = useState('artist');\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  \n  \n  const [selectedPost, setSelectedPost] = useState(null);\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  const [selectedComment, setSelectedComment] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedBugReport, setSelectedBugReport] = useState(null);\n  const [selectedBadge, setSelectedBadge] = useState(null);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  \n  \n  const [editUserName, setEditUserName] = useState('');\n  const [editUsername, setEditUsername] = useState('');\n  const [bugReportStatus, setBugReportStatus] = useState('');\n  const [editBadgeName, setEditBadgeName] = useState('');\n  const [editBadgeDescription, setEditBadgeDescription] = useState('');\n  const [editBadgePrice, setEditBadgePrice] = useState('');\n  const [editBadgeActive, setEditBadgeActive] = useState(true);\n  const [editBadgeImage, setEditBadgeImage] = useState(null);\n  const [editBadgeImagePreview, setEditBadgeImagePreview] = useState('');\n  const [editArtistName, setEditArtistName] = useState('');\n  const [editArtistBio, setEditArtistBio] = useState('');\n  const [editArtistAvatar, setEditArtistAvatar] = useState(null);\n  const [editArtistAvatarPreview, setEditArtistAvatarPreview] = useState('');\n  const [editArtistVerified, setEditArtistVerified] = useState(false);\n  const [editArtistInfo, setEditArtistInfo] = useState('');\n  \n  \n  const [page, setPage] = useState(1); \n  \n  \n  const [pageStates, setPageStates] = useState({\n    posts: 1,\n    tracks: 1,\n    comments: 1,\n    users: 1,\n    bugReports: 1,\n    badges: 1,\n    artists: 1\n  });\n  \n  const [hasMore, setHasMore] = useState({\n    posts: true,\n    tracks: true,\n    comments: true,\n    users: true,\n    bugReports: true,\n    badges: true,\n    artists: true\n  });\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  \n  const postsObserver = useRef();\n  const tracksObserver = useRef();\n  const commentsObserver = useRef();\n  const usersObserver = useRef();\n  const bugReportsObserver = useRef();\n  const badgesObserver = useRef();\n  const artistsObserver = useRef();\n\n  \n  const [search, setSearch] = useState({\n    posts: '',\n    tracks: '',\n    comments: '',\n    users: '',\n    bugReports: '',\n    badges: '',\n    artists: ''\n  });\n  \n  \n  const searchTimeout = useRef(null);\n\n  \n  const [warningUser, setWarningUser] = useState(null);\n  const [warningDialogOpen, setWarningDialogOpen] = useState(false);\n  const [warningData, setWarningData] = useState({\n    reason: '',\n    details: ''\n  });\n  \n  const [banUser, setBanUser] = useState(null);\n  const [banDialogOpen, setBanDialogOpen] = useState(false);\n  const [banData, setBanData] = useState({\n    reason: '',\n    details: '',\n    duration_days: 30\n  });\n  \n  const [userWarningsDialogOpen, setUserWarningsDialogOpen] = useState(false);\n  const [userBansDialogOpen, setUserBansDialogOpen] = useState(false);\n  const [selectedUserHistory, setSelectedUserHistory] = useState(null);\n  const [userWarnings, setUserWarnings] = useState([]);\n  const [userBans, setUserBans] = useState([]);\n  const [loadingHistory, setLoadingHistory] = useState(false);\n  \n  \n  const [moderatorStats, setModeratorStats] = useState({\n    deleted_posts: 0,\n    deleted_tracks: 0,\n    deleted_comments: 0,\n    deleted_avatars: 0,\n    updated_users: 0,\n    warnings_issued: 0,\n    bans_issued: 0,\n    total_actions: 0,\n    loading: true\n  });\n  \n  const [issueMedalDialogOpen, setIssueMedalDialogOpen] = useState(false);\n  const [medalUser, setMedalUser] = useState(null);\n  const [availableMedals, setAvailableMedals] = useState([]);\n  const [loadingMedals, setLoadingMedals] = useState(false);\n  const [selectedMedal, setSelectedMedal] = useState('');\n  const [medalDescription, setMedalDescription] = useState('');\n  \n  // --- СТЕЙТЫ ДЛЯ КЛЮЧЕЙ ---\n  const [modKeys, setModKeys] = useState([]);\n  const [modKeysLoading, setModKeysLoading] = useState(false);\n  const [modKeysLoadingMore, setModKeysLoadingMore] = useState(false);\n  const [modKeysError, setModKeysError] = useState(null);\n  const [modKeysPage, setModKeysPage] = useState(1);\n  const [modKeysTotal, setModKeysTotal] = useState(0);\n  const [modKeysHasNext, setModKeysHasNext] = useState(false);\n  const [modKeysDialogOpen, setModKeysDialogOpen] = useState(false);\n  const [modKeysCreateLoading, setModKeysCreateLoading] = useState(false);\n  const [modKeysCreateError, setModKeysCreateError] = useState(null);\n  const [modKeysCreateSuccess, setModKeysCreateSuccess] = useState(null);\n  const [modKeysForm, setModKeysForm] = useState({\n    type: 'points',\n    points: 1000,\n    subscription_type: 'basic',\n    subscription_duration_days: 30,\n    max_uses: 1,\n    count: 1,\n    expires_days: 30,\n    description: ''\n  });\n  const [modKeysDeleting, setModKeysDeleting] = useState({});\n  const modKeysLoaderRef = useRef(null);\n  const [generatedKeys, setGeneratedKeys] = useState([]);\n  \n  const [decorationMenuOpen, setDecorationMenuOpen] = useState(false);\n  const [selectedUserForDecorations, setSelectedUserForDecorations] = useState(null);\n  \n  // --- ЗАГРУЗКА КЛЮЧЕЙ ---\n  const fetchModKeys = useCallback(async (page = 1, append = false) => {\n    if (page === 1) setModKeysLoading(true);\n    else setModKeysLoadingMore(true);\n    setModKeysError(null);\n    try {\n      const res = await axios.get(`/api/moderator/keys?page=${page}&per_page=20`);\n      if (res.data && res.data.success) {\n        setModKeysTotal(res.data.total);\n        setModKeysPage(res.data.page);\n        setModKeysHasNext(res.data.has_next);\n        setModKeys((prev) => {\n          const newKeys = res.data.keys || [];\n          let merged;\n          if (append) {\n            // Исключаем дубли по id\n            const ids = new Set(prev.map(k => k.id));\n            merged = [...prev, ...newKeys.filter(k => !ids.has(k.id))];\n          } else {\n            merged = newKeys;\n          }\n          // Сортировка по created_at (сначала новые)\n          return merged.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        });\n      } else {\n        setModKeysError('Ошибка загрузки ключей');\n      }\n    } catch (e) {\n      setModKeysError('Ошибка загрузки ключей');\n    } finally {\n      setModKeysLoading(false);\n      setModKeysLoadingMore(false);\n    }\n  }, []);\n  \n  useEffect(() => {\n    fetchModKeys(1, false);\n  }, [fetchModKeys]);\n  \n  // --- INFINITE SCROLL ---\n  useEffect(() => {\n    if (!modKeysHasNext || modKeysLoading || modKeysLoadingMore) return;\n    const observer = new window.IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) {\n        fetchModKeys(modKeysPage + 1, true);\n      }\n    }, { threshold: 1 });\n    if (modKeysLoaderRef.current) {\n      observer.observe(modKeysLoaderRef.current);\n    }\n    return () => {\n      if (modKeysLoaderRef.current) observer.unobserve(modKeysLoaderRef.current);\n    };\n  // eslint-disable-next-line\n  }, [modKeysHasNext, modKeysLoading, modKeysLoadingMore, modKeysPage, fetchModKeys]);\n  \n  // --- СОЗДАНИЕ КЛЮЧА ---\n  const handleOpenCreateKeyDialog = () => {\n    setModKeysForm({\n      type: 'points',\n      points: 1000,\n      subscription_type: 'basic',\n      subscription_duration_days: 30,\n      max_uses: 1,\n      count: 1,\n      expires_days: 30,\n      description: ''\n    });\n    setGeneratedKeys([]);\n    setModKeysCreateError(null);\n    setModKeysCreateSuccess(null);\n    setModKeysDialogOpen(true);\n  };\n  const handleCloseCreateKeyDialog = () => {\n    setModKeysDialogOpen(false);\n  };\n  const handleModKeysFormChange = (e) => {\n    const { name, value } = e.target;\n    setModKeysForm((prev) => ({ ...prev, [name]: value }));\n  };\n  const handleCreateKey = async () => {\n    setModKeysCreateLoading(true);\n    setModKeysCreateError(null);\n    setModKeysCreateSuccess(null);\n    try {\n      const payload = {\n        key_type: modKeysForm.type,\n        points_value: modKeysForm.type === 'points' ? Number(modKeysForm.points) : undefined,\n        subscription_type: modKeysForm.type === 'subscription' ? modKeysForm.subscription_type : undefined,\n        subscription_duration_days: modKeysForm.type === 'subscription' ? Number(modKeysForm.subscription_duration_days) : undefined,\n        max_uses: Number(modKeysForm.max_uses),\n        count: Number(modKeysForm.count),\n        expires_days: Number(modKeysForm.expires_days),\n        description: modKeysForm.description\n      };\n      // Удаляем undefined поля\n      Object.keys(payload).forEach((k) => payload[k] === undefined && delete payload[k]);\n      const res = await axios.post('/api/moderator/keys/generate', payload);\n      if (res.data && res.data.success) {\n        // Если вернулся массив ключей (keys), показываем их все\n        if (Array.isArray(res.data.keys)) {\n          setGeneratedKeys(res.data.keys.map(k => k.key || k));\n        } else if (res.data.key && res.data.key.key) {\n          setGeneratedKeys([res.data.key.key]);\n        }\n        setModKeysCreateSuccess('Ключ(и) успешно созданы!');\n        setModKeysCreateError(null);\n        fetchModKeys();\n      } else {\n        setModKeysCreateError(res.data?.error || 'Ошибка создания ключа');\n      }\n    } catch (e) {\n      setModKeysCreateError(e.response?.data?.error || 'Ошибка создания ключа');\n    } finally {\n      setModKeysCreateLoading(false);\n    }\n  };\n  \n  // --- УДАЛЕНИЕ КЛЮЧА ---\n  const handleDeleteKey = async (keyId) => {\n    setModKeysDeleting((prev) => ({ ...prev, [keyId]: true }));\n    try {\n      await axios.delete(`/api/moderator/keys/${keyId}`);\n      fetchModKeys();\n      showNotification('success', 'Ключ удалён');\n    } catch (e) {\n      showNotification('error', e.response?.data?.error || 'Ошибка удаления ключа');\n    } finally {\n      setModKeysDeleting((prev) => ({ ...prev, [keyId]: false }));\n    }\n  };\n  \n  // --- КОПИРОВАНИЕ КЛЮЧА ---\n  const handleCopyKey = (key) => {\n    navigator.clipboard.writeText(key.key).then(() => {\n      showNotification('success', 'Ключ скопирован');\n    });\n  };\n  \n  // --- UI СЕКЦИЯ КЛЮЧЕЙ ---\n  const renderModKeysSection = () => (\n    <Box sx={{ mt: 4, mb: 2 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 700, color: 'primary.light' }}>\n        Управление ключами\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleOpenCreateKeyDialog}\n        sx={{ mb: 2, fontWeight: 600, borderRadius: 2 }}\n        fullWidth={true}\n      >\n        Создать ключ\n      </Button>\n      {modKeysLoading && modKeys.length === 0 ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 3 }}>\n          <CircularProgress size={28} />\n        </Box>\n      ) : modKeysError ? (\n        <Alert severity=\"error\">{modKeysError}</Alert>\n      ) : (\n        <Grid container spacing={2}>\n          {modKeys.length === 0 ? (\n            <Grid item xs={12}>\n              <Alert severity=\"info\">Нет созданных ключей</Alert>\n            </Grid>\n          ) : (\n            modKeys.map((key, idx) => (\n              <Grid item xs={12} sm={6} md={4} key={key.id}>\n                <Paper sx={{ p: 2, borderRadius: 2, bgcolor: 'rgba(18,18,18,0.95)', display: 'flex', flexDirection: 'column', gap: 1 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', gap: 1 }}>\n                    <Typography variant=\"subtitle2\" sx={{ fontWeight: 700, color: 'primary.main', wordBreak: 'break-all' }}>\n                      {key.key}\n                    </Typography>\n                    <IconButton size=\"small\" onClick={() => handleCopyKey(key)}>\n                      <ContentCopyIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Тип: {key.key_type === 'points' ? 'Баллы' : 'Подписка'}\n                  </Typography>\n                  {key.key_type === 'points' && (\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Баллы: <b>{key.points_value}</b>\n                    </Typography>\n                  )}\n                  {key.key_type === 'subscription' && (\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Подписка: <b>{key.subscription_type}</b>\n                    </Typography>\n                  )}\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Использовано: <b>{key.current_uses}/{key.max_uses}</b>\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Создан: {key.created_at ? new Date(key.created_at).toLocaleDateString() : '-'}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Действителен до: {key.expires_at ? new Date(key.expires_at).toLocaleDateString() : '-'}\n                  </Typography>\n                  <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"error\"\n                      size=\"small\"\n                      onClick={() => handleDeleteKey(key.id)}\n                      disabled={modKeysDeleting[key.id]}\n                      fullWidth\n                    >\n                      {modKeysDeleting[key.id] ? <CircularProgress size={18} /> : 'Удалить'}\n                    </Button>\n                  </Box>\n                </Paper>\n                {/* Внизу последней карточки — ref для infinite scroll */}\n                {idx === modKeys.length - 1 && modKeysHasNext && (\n                  <div ref={modKeysLoaderRef} style={{ height: 1 }} />\n                )}\n              </Grid>\n            ))\n          )}\n          {/* Лоадер подгрузки */}\n          {modKeysLoadingMore && (\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center', py: 2 }}>\n              <CircularProgress size={24} />\n            </Grid>\n          )}\n        </Grid>\n      )}\n      {/* Диалог создания ключа */}\n      <StyledDialog open={modKeysDialogOpen} onClose={handleCloseCreateKeyDialog} fullWidth maxWidth=\"sm\">\n        <DialogTitle sx={{ bgcolor: 'rgba(18,18,18,0.95)', color: '#fff' }}>\n          Генерация ключа\n          {!modKeysCreateLoading && (\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleCloseCreateKeyDialog}\n              sx={{ position: 'absolute', right: 8, top: 8, color: '#fff' }}\n            >\n              <CloseIcon />\n            </IconButton>\n          )}\n        </DialogTitle>\n        <DialogContent sx={{ bgcolor: 'rgba(18,18,18,0.95)' }}>\n          <Box sx={{ mt: 1 }}>\n            {generatedKeys.length > 0 ? (\n              <Box sx={{ mb: 2 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#fff\">\n                    Сгенерированный ключ:\n                  </Typography>\n                  <Button\n                    size=\"small\"\n                    startIcon={<ContentCopyIcon />}\n                    onClick={() => navigator.clipboard.writeText(generatedKeys.join('\\n'))}\n                    sx={{ color: '#fff', borderColor: '#fff' }}\n                    variant=\"outlined\"\n                  >\n                    Копировать\n                  </Button>\n                </Box>\n                <Paper variant=\"outlined\" sx={{ p: 2, maxHeight: 200, overflow: 'auto', bgcolor: 'rgba(30,30,30,0.8)' }}>\n                  {generatedKeys.map((key, index) => (\n                    <Typography key={index} variant=\"body2\" fontFamily=\"monospace\" sx={{ mb: 0.5, color: '#fff' }}>\n                      {key}\n                    </Typography>\n                  ))}\n                </Paper>\n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                  <Button variant=\"outlined\" onClick={() => setGeneratedKeys([])} sx={{ color: '#fff', borderColor: '#fff' }}>\n                    Сгенерировать еще\n                  </Button>\n                </Box>\n              </Box>\n            ) : (\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <FormControl fullWidth>\n                    <InputLabel sx={{ color: '#fff' }}>Тип ключа</InputLabel>\n                    <Select\n                      value={modKeysForm.type}\n                      label=\"Тип ключа\"\n                      name=\"type\"\n                      onChange={handleModKeysFormChange}\n                      sx={{ color: '#fff', '.MuiOutlinedInput-notchedOutline': { borderColor: '#444' }, '.MuiSvgIcon-root': { color: '#fff' } }}\n                    >\n                      <MenuItem value=\"points\">Баллы</MenuItem>\n                      <MenuItem value=\"subscription\">Подписка</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                {modKeysForm.type === 'points' ? (\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Количество баллов\"\n                      name=\"points\"\n                      type=\"number\"\n                      fullWidth\n                      value={modKeysForm.points}\n                      onChange={handleModKeysFormChange}\n                      InputProps={{ inputProps: { min: 1 } }}\n                      sx={{ input: { color: '#fff' }, label: { color: '#fff' } }}\n                    />\n                  </Grid>\n                ) : (\n                  <>\n                    <Grid item xs={12} sm={6}>\n                      <FormControl fullWidth>\n                        <InputLabel sx={{ color: '#fff' }}>Тип подписки</InputLabel>\n                        <Select\n                          value={modKeysForm.subscription_type}\n                          label=\"Тип подписки\"\n                          name=\"subscription_type\"\n                          onChange={handleModKeysFormChange}\n                          sx={{ color: '#fff', '.MuiOutlinedInput-notchedOutline': { borderColor: '#444' }, '.MuiSvgIcon-root': { color: '#fff' } }}\n                        >\n                          <MenuItem value=\"basic\">Базовая</MenuItem>\n                          <MenuItem value=\"premium\">Премиум</MenuItem>\n                          <MenuItem value=\"ultimate\">Ультимейт</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        label=\"Срок действия подписки (дней)\"\n                        name=\"subscription_duration_days\"\n                        type=\"number\"\n                        fullWidth\n                        value={modKeysForm.subscription_duration_days}\n                        onChange={handleModKeysFormChange}\n                        InputProps={{ inputProps: { min: 1 } }}\n                        sx={{ input: { color: '#fff' }, label: { color: '#fff' } }}\n                      />\n                    </Grid>\n                  </>\n                )}\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label=\"Макс. число использований\"\n                    name=\"max_uses\"\n                    type=\"number\"\n                    fullWidth\n                    value={modKeysForm.max_uses}\n                    onChange={handleModKeysFormChange}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    helperText=\"Сколько раз можно использовать ключ\"\n                    sx={{ input: { color: '#fff' }, label: { color: '#fff' } }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label=\"Количество ключей\"\n                    name=\"count\"\n                    type=\"number\"\n                    fullWidth\n                    value={modKeysForm.count}\n                    onChange={handleModKeysFormChange}\n                    InputProps={{ inputProps: { min: 1, max: 100 } }}\n                    helperText=\"От 1 до 100 ключей\"\n                    sx={{ input: { color: '#fff' }, label: { color: '#fff' } }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    label=\"Срок действия (дней)\"\n                    name=\"expires_days\"\n                    type=\"number\"\n                    fullWidth\n                    value={modKeysForm.expires_days}\n                    onChange={handleModKeysFormChange}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    helperText=\"0 = бессрочно\"\n                    sx={{ input: { color: '#fff' }, label: { color: '#fff' } }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    label=\"Описание\"\n                    name=\"description\"\n                    fullWidth\n                    multiline\n                    rows={2}\n                    value={modKeysForm.description}\n                    onChange={handleModKeysFormChange}\n                    helperText=\"Необязательное описание для модераторов\"\n                    sx={{ input: { color: '#fff' }, label: { color: '#fff' } }}\n                  />\n                </Grid>\n                {modKeysCreateError && (\n                  <Grid item xs={12}>\n                    <Alert severity=\"error\">{modKeysCreateError}</Alert>\n                  </Grid>\n                )}\n                {modKeysCreateSuccess && (\n                  <Grid item xs={12}>\n                    <Alert severity=\"success\">{modKeysCreateSuccess}</Alert>\n                  </Grid>\n                )}\n              </Grid>\n            )}\n          </Box>\n        </DialogContent>\n        <DialogActions sx={{ bgcolor: 'rgba(18,18,18,0.95)' }}>\n          {generatedKeys.length === 0 && (\n            <>\n              <Button onClick={handleCloseCreateKeyDialog} disabled={modKeysCreateLoading} sx={{ color: '#fff' }}>\n                Отмена\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleCreateKey}\n                disabled={modKeysCreateLoading}\n                startIcon={modKeysCreateLoading ? <CircularProgress size={20} /> : null}\n              >\n                {modKeysCreateLoading ? 'Генерация...' : 'Сгенерировать'}\n              </Button>\n            </>\n          )}\n          {generatedKeys.length > 0 && (\n            <Button\n              onClick={() => {\n                setModKeysDialogOpen(false);\n                setGeneratedKeys([]);\n              }}\n              sx={{ color: '#fff' }}\n            >\n              Закрыть\n            </Button>\n          )}\n        </DialogActions>\n      </StyledDialog>\n      {modKeysHasNext && !modKeysLoadingMore && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => fetchModKeys(modKeysPage + 1, true)}\n          sx={{ mt: 2, mb: 2, width: '100%' }}\n        >\n          Отобразить ещё\n        </Button>\n      )}\n    </Box>\n  );\n\n  useEffect(() => {\n    checkModeratorStatus();\n    \n    \n    fetchModeratorStats();\n  }, []);\n\n  \n  useEffect(() => {\n    if (moderatorData) {\n      \n      resetTabData();\n      loadTabData(tabValue);\n    }\n  }, [tabValue]);\n  \n  \n  const resetTabData = () => {\n    \n    setPage(1);\n    \n    \n    setPageStates({\n      posts: 1,\n      tracks: 1,\n      comments: 1,\n      users: 1,\n      bugReports: 1,\n      badges: 1,\n      artists: 1\n    });\n    \n    \n    setHasMore({\n      posts: true,\n      tracks: true,\n      comments: true,\n      users: true,\n      bugReports: true,\n      badges: true,\n      artists: true\n    });\n  };\n\n  \n  const checkModeratorStatus = async () => {\n    try {\n      \n      if (window._moderatorCheckInProgress) {\n        console.log('ModeratorPage: Moderator check already in progress, waiting...');\n        \n        await new Promise(resolve => {\n          const checkInterval = setInterval(() => {\n            if (!window._moderatorCheckInProgress) {\n              clearInterval(checkInterval);\n              resolve();\n            }\n          }, 100);\n        });\n        return;\n      }\n      \n      \n      const now = Date.now();\n      if (now - lastModeratorCheck < 15 * 60 * 1000 && moderatorData) {\n        console.log('ModeratorPage: Using cached moderator data');\n        return;\n      }\n      \n      \n      window._moderatorCheckInProgress = true;\n      const quickCheckResponse = await axios.get('/api/moderator/quick-status');\n      \n      if (!quickCheckResponse.data.is_moderator) {\n        \n        setLoading(false);\n        showNotification('error', 'У вас нет прав модератора');\n        navigate('/'); \n        window._moderatorCheckInProgress = false;\n        return;\n      }\n      \n      \n      setLoading(true);\n      const response = await axios.get('/api/moderator/status');\n      \n      if (response.data.is_moderator) {\n        setModeratorData(response.data);\n        setPermissions(response.data.permissions);\n        \n        setLastModeratorCheck(now);\n      } else {\n        \n        showNotification('error', 'У вас нет прав модератора');\n        navigate('/'); \n      }\n    } catch (error) {\n      console.error('Error checking moderator status:', error);\n      showNotification('error', 'Не удалось проверить права модератора');\n      navigate('/'); \n    } finally {\n      setLoading(false);\n      \n      window._moderatorCheckInProgress = false;\n    }\n  };\n\n  \n  const fetchModeratorStats = async () => {\n    try {\n      setModeratorStats(prev => ({ ...prev, loading: true }));\n      \n      \n      const response = await axios.get('/api/moderator/actions');\n      \n      if (response.data && response.data.success) {\n        const stats = response.data.stats || {};\n        \n        \n        setModeratorStats({\n          deleted_posts: stats.deleted_posts || 0,\n          deleted_tracks: stats.deleted_tracks || 0,\n          deleted_comments: stats.deleted_comments || 0,\n          deleted_avatars: stats.deleted_avatars || 0,\n          updated_users: stats.updated_users || 0,\n          warnings_issued: stats.warnings_issued || 0,\n          bans_issued: stats.bans_issued || 0,\n          total_actions: stats.total_actions || 0,\n          loading: false\n        });\n      } else {\n        console.error('Ошибка при получении статистики модератора:', response.data?.error || 'Неизвестная ошибка');\n      }\n    } catch (error) {\n      console.error('Ошибка при получении статистики:', error);\n    } finally {\n      setModeratorStats(prev => ({ ...prev, loading: false }));\n    }\n  };\n\n  \n  const showNotification = (severity, message) => {\n    setSnackbar({\n      open: true,\n      severity,\n      message\n    });\n  };\n\n  \n  const loadTabData = (tabIndex) => {\n    \n    setPage(1);\n    setHasMore(prev => ({...prev}));\n\n    switch (tabIndex) {\n      case 0: \n        \n        break;\n      case 1: \n        if (permissions.delete_posts) {\n          setPosts([]);\n          fetchPosts();\n        }\n        break;\n      case 2: \n        if (permissions.delete_music) {\n          setTracks([]);\n          fetchTracks();\n        }\n        break;\n      case 3: \n        if (permissions.delete_comments) {\n          setComments([]);\n          fetchComments();\n        }\n        break;\n      case 4: \n        if (permissions.change_user_name || permissions.change_username || permissions.delete_avatar) {\n          setUsers([]);\n          fetchUsers();\n        }\n        break;\n      case 5: \n        if (permissions.manage_bug_reports || permissions.delete_bug_reports) {\n          setBugReports([]);\n          fetchBugReports();\n        }\n        break;\n      case 6: \n        if (permissions.edit_badges || permissions.delete_badges) {\n          setBadges([]);\n          fetchBadges();\n        }\n        break;\n      case 7:\n        if (permissions.manage_artists || permissions.delete_artists) {\n          setArtists([]);\n          fetchArtists();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  \n  \n  const handleSearchChange = (tab, value) => {\n    setSearch(prev => ({...prev, [tab]: value}));\n    \n    \n    if (searchTimeout.current) {\n      clearTimeout(searchTimeout.current);\n    }\n    \n    \n    searchTimeout.current = setTimeout(() => {\n      \n      setPageStates(prev => ({\n        ...prev,\n        [tab]: 1\n      }));\n      \n      \n      switch (tab) {\n        case 'posts':\n          setPosts([]);\n          fetchPosts(false, value);\n          break;\n        case 'tracks':\n          setTracks([]);\n          fetchTracks(false, value);\n          break;\n        case 'comments':\n          setComments([]);\n          fetchComments(false, value);\n          break;\n        case 'users':\n          setUsers([]);\n          fetchUsers(false, value);\n          break;\n        case 'bugReports':\n          setBugReports([]);\n          fetchBugReports(false, value);\n          break;\n        case 'badges':\n          setBadges([]);\n          fetchBadges(false, value);\n          break;\n        case 'artists':\n          setArtists([]);\n          fetchArtists(false, value);\n          break;\n        default:\n          break;\n      }\n    }, 500);\n  };\n\n  \n  const clearSearch = (tab) => {\n    setSearch(prev => ({...prev, [tab]: ''}));\n    \n    \n    setPageStates(prev => ({\n      ...prev,\n      [tab]: 1\n    }));\n    \n    \n    switch (tab) {\n      case 'posts':\n        setPosts([]);\n        fetchPosts(false, '');\n        break;\n      case 'tracks':\n        setTracks([]);\n        fetchTracks(false, '');\n        break;\n      case 'comments':\n        setComments([]);\n        fetchComments(false, '');\n        break;\n      case 'users':\n        setUsers([]);\n        fetchUsers(false, '');\n        break;\n      case 'bugReports':\n        setBugReports([]);\n        fetchBugReports(false, '');\n        break;\n      case 'badges':\n        setBadges([]);\n        fetchBadges(false, '');\n        break;\n      case 'artists':\n        setArtists([]);\n        fetchArtists(false, '');\n        break;\n      default:\n        break;\n    }\n  };\n\n  \n  const fetchPosts = async (loadMore = false, searchQuery = search.posts) => {\n    try {\n      if (!hasMore.posts && loadMore) return;\n      \n      loadMore ? setLoadingMore(true) : setLoading(true);\n      const currentPage = loadMore ? pageStates.posts : 1;\n      \n      const response = await axios.get(`/api/moderator/posts?page=${currentPage}&per_page=${rowsPerPage}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`);\n      \n      if (response.data && response.data.posts) {\n        const newPosts = response.data.posts;\n        if (loadMore) {\n          setPosts(prevPosts => [...prevPosts, ...newPosts]);\n        } else {\n          setPosts(newPosts);\n        }\n        \n        \n        setHasMore(prev => ({\n          ...prev,\n          posts: newPosts.length === rowsPerPage\n        }));\n        \n        if (loadMore) {\n          setPageStates(prev => ({\n            ...prev,\n            posts: prev.posts + 1\n          }));\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      showNotification('error', 'Не удалось загрузить посты');\n    } finally {\n      loadMore ? setLoadingMore(false) : setLoading(false);\n    }\n  };\n\n  const fetchTracks = async (loadMore = false, searchQuery = search.tracks) => {\n    try {\n      if (!hasMore.tracks && loadMore) return;\n      \n      loadMore ? setLoadingMore(true) : setLoading(true);\n      const currentPage = loadMore ? pageStates.tracks : 1;\n      \n      const response = await axios.get(`/api/moderator/tracks?page=${currentPage}&per_page=${rowsPerPage}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`);\n      \n      if (response.data && response.data.tracks) {\n        const newTracks = response.data.tracks;\n        if (loadMore) {\n          setTracks(prevTracks => [...prevTracks, ...newTracks]);\n        } else {\n          setTracks(newTracks);\n        }\n        \n        \n        setHasMore(prev => ({\n          ...prev,\n          tracks: newTracks.length === rowsPerPage\n        }));\n        \n        if (loadMore) {\n          setPageStates(prev => ({\n            ...prev,\n            tracks: prev.tracks + 1\n          }));\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching tracks:', error);\n      showNotification('error', 'Не удалось загрузить треки');\n    } finally {\n      loadMore ? setLoadingMore(false) : setLoading(false);\n    }\n  };\n\n  const fetchComments = async (loadMore = false, searchQuery = search.comments) => {\n    try {\n      if (!hasMore.comments && loadMore) return;\n      \n      loadMore ? setLoadingMore(true) : setLoading(true);\n      const currentPage = loadMore ? pageStates.comments : 1;\n      \n      const response = await axios.get(`/api/moderator/comments?page=${currentPage}&per_page=${rowsPerPage}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`);\n      \n      if (response.data && response.data.comments) {\n        const newComments = response.data.comments;\n        if (loadMore) {\n          setComments(prevComments => [...prevComments, ...newComments]);\n        } else {\n          setComments(newComments);\n        }\n        \n        \n        setHasMore(prev => ({\n          ...prev,\n          comments: newComments.length === rowsPerPage\n        }));\n        \n        if (loadMore) {\n          setPageStates(prev => ({\n            ...prev,\n            comments: prev.comments + 1\n          }));\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      showNotification('error', 'Не удалось загрузить комментарии');\n    } finally {\n      loadMore ? setLoadingMore(false) : setLoading(false);\n    }\n  };\n\n  const fetchUsers = async (loadMore = false, searchQuery = search.users) => {\n    try {\n      if (!hasMore.users && loadMore) return;\n      \n      loadMore ? setLoadingMore(true) : setLoading(true);\n      const currentPage = loadMore ? pageStates.users : 1;\n      \n      const response = await axios.get(`/api/moderator/users?page=${currentPage}&per_page=${rowsPerPage}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`);\n      \n      if (response.data && response.data.users) {\n        const newUsers = response.data.users;\n        if (loadMore) {\n          setUsers(prevUsers => [...prevUsers, ...newUsers]);\n        } else {\n          setUsers(newUsers);\n        }\n        \n        \n        setHasMore(prev => ({\n          ...prev,\n          users: newUsers.length === rowsPerPage\n        }));\n        \n        if (loadMore) {\n          setPageStates(prev => ({\n            ...prev,\n            users: prev.users + 1\n          }));\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      showNotification('error', 'Не удалось загрузить пользователей');\n    } finally {\n      loadMore ? setLoadingMore(false) : setLoading(false);\n    }\n  };\n\n  const BUG_STATUSES = ['Открыт', 'В обработке', 'Решено'];\n\n  const fetchBugReports = async (loadMore = false, searchQuery = search.bugReports) => {\n    try {\n      if (!permissions.manage_bug_reports && !permissions.delete_bug_reports) {\n        showNotification('error', 'У вас нет прав на просмотр баг-репортов');\n        return;\n      }\n      if (!hasMore.bugReports && loadMore) return;\n      if (loadingMore) return;\n      loadMore ? setLoadingMore(true) : setLoading(true);\n      const currentPage = loadMore ? pageStates.bugReports + 1 : 1;\n      const response = await axios.get(`/api/moderator/bug-reports?page=${currentPage}&per_page=${rowsPerPage}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`);\n      if (response.data && response.data.bug_reports) {\n        const newReports = response.data.bug_reports;\n        if (loadMore) {\n          setBugReports(prevReports => [...prevReports, ...newReports]);\n          setPageStates(prev => ({ ...prev, bugReports: currentPage }));\n        } else {\n          setBugReports(newReports);\n          setPageStates(prev => ({ ...prev, bugReports: 1 }));\n        }\n        setHasMore(prev => ({\n          ...prev,\n          bugReports: newReports.length === rowsPerPage\n        }));\n      } else {\n        showNotification('error', 'Неверный формат ответа от сервера');\n      }\n    } catch (error) {\n      showNotification('error', error.response?.data?.error || 'Не удалось загрузить баг-репорты');\n    } finally {\n      loadMore ? setLoadingMore(false) : setLoading(false);\n    }\n  };\n\n  const fetchBadges = async (loadMore = false, searchQuery = search.badges) => {\n    try {\n      if (!permissions.edit_badges && !permissions.delete_badges) {\n        showNotification('error', 'У вас нет прав на просмотр бейджиков');\n        return;\n      }\n      if (!hasMore.badges && loadMore) return;\n      if (loadingMore) return;\n      loadMore ? setLoadingMore(true) : setLoading(true);\n      const currentPage = loadMore ? pageStates.badges + 1 : 1;\n      const response = await axios.get(`/api/moderator/badges?page=${currentPage}&per_page=${rowsPerPage}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`);\n      if (response.data && response.data.badges) {\n        const newBadges = response.data.badges;\n        if (loadMore) {\n          setBadges(prevBadges => [...prevBadges, ...newBadges]);\n          setPageStates(prev => ({ ...prev, badges: currentPage }));\n        } else {\n          setBadges(newBadges);\n          setPageStates(prev => ({ ...prev, badges: 1 }));\n        }\n        setHasMore(prev => ({\n          ...prev,\n          badges: newBadges.length === rowsPerPage\n        }));\n      } else {\n        showNotification('error', 'Неверный формат ответа от сервера при загрузке бейджиков');\n      }\n    } catch (error) {\n      showNotification('error', error.response?.data?.error || 'Не удалось загрузить бейджики');\n    } finally {\n      loadMore ? setLoadingMore(false) : setLoading(false);\n    }\n  };\n\n  const fetchArtists = async (loadMore = false, searchQuery = search.artists) => {\n    try {\n      if (!hasMore.artists && loadMore) return;\n      if (loadingMore) return;\n      loadMore ? setLoadingMore(true) : setLoading(true);\n      const currentPage = loadMore ? pageStates.artists + 1 : 1;\n      const response = await axios.get(`/api/moderator/artists?page=${currentPage}&per_page=${rowsPerPage}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}`);\n      if (response.data && response.data.artists) {\n        const newArtists = response.data.artists;\n        if (loadMore) {\n          setArtists(prevArtists => [...prevArtists, ...newArtists]);\n          setPageStates(prev => ({ ...prev, artists: currentPage }));\n        } else {\n          setArtists(newArtists);\n          setPageStates(prev => ({ ...prev, artists: 1 }));\n        }\n        setHasMore(prev => ({\n          ...prev,\n          artists: newArtists.length === rowsPerPage\n        }));\n      }\n    } catch (error) {\n      showNotification('error', 'Не удалось загрузить артистов');\n    } finally {\n      loadMore ? setLoadingMore(false) : setLoading(false);\n    }\n  };\n\n  \n  const lastPostElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (postsObserver.current) postsObserver.current.disconnect();\n    \n    postsObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore.posts) {\n        fetchPosts(true);\n      }\n    });\n    \n    if (node) postsObserver.current.observe(node);\n  }, [loading, loadingMore, hasMore.posts]);\n\n  const lastTrackElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (tracksObserver.current) tracksObserver.current.disconnect();\n    \n    tracksObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore.tracks) {\n        fetchTracks(true);\n      }\n    });\n    \n    if (node) tracksObserver.current.observe(node);\n  }, [loading, loadingMore, hasMore.tracks]);\n\n  const lastCommentElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (commentsObserver.current) commentsObserver.current.disconnect();\n    \n    commentsObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore.comments) {\n        fetchComments(true);\n      }\n    });\n    \n    if (node) commentsObserver.current.observe(node);\n  }, [loading, loadingMore, hasMore.comments]);\n\n  const lastUserElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (usersObserver.current) usersObserver.current.disconnect();\n    \n    usersObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore.users) {\n        fetchUsers(true);\n      }\n    });\n    \n    if (node) usersObserver.current.observe(node);\n  }, [loading, loadingMore, hasMore.users]);\n\n  const lastBugReportElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (bugReportsObserver.current) bugReportsObserver.current.disconnect();\n    \n    bugReportsObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore.bugReports) {\n        fetchBugReports(true);\n      }\n    });\n    \n    if (node) bugReportsObserver.current.observe(node);\n  }, [loading, loadingMore, hasMore.bugReports]);\n\n  const lastBadgeElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (badgesObserver.current) badgesObserver.current.disconnect();\n    \n    badgesObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore.badges) {\n        fetchBadges(true);\n      }\n    });\n    \n    if (node) badgesObserver.current.observe(node);\n  }, [loading, loadingMore, hasMore.badges]);\n\n  const lastArtistElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (artistsObserver.current) artistsObserver.current.disconnect();\n    \n    artistsObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore.artists) {\n        fetchArtists(true);\n      }\n    });\n    \n    if (node) artistsObserver.current.observe(node);\n  }, [loading, loadingMore, hasMore.artists]);\n\n  \n  const handleDeletePost = async () => {\n    if (!selectedPost) return;\n    \n    try {\n      setLoading(true);\n      const response = await axios.delete(`/api/moderator/posts/${selectedPost.id}`);\n      \n      if (response.data.success) {\n        showNotification('success', 'Пост успешно удален');\n        setPosts(posts.filter(post => post.id !== selectedPost.id));\n      } else {\n        throw new Error(response.data.error || 'Failed to delete post');\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      showNotification('error', 'Не удалось удалить пост');\n    } finally {\n      setLoading(false);\n      setDeletePostDialogOpen(false);\n    }\n  };\n\n  const handleDeleteTrack = async () => {\n    if (!selectedTrack) return;\n    \n    try {\n      setLoading(true);\n      const response = await axios.delete(`/api/moderator/tracks/${selectedTrack.id}`);\n      \n      if (response.data.success) {\n        showNotification('success', 'Трек успешно удален');\n        setTracks(tracks.filter(track => track.id !== selectedTrack.id));\n      } else {\n        throw new Error(response.data.error || 'Failed to delete track');\n      }\n    } catch (error) {\n      console.error('Error deleting track:', error);\n      showNotification('error', 'Не удалось удалить трек');\n    } finally {\n      setLoading(false);\n      setDeleteTrackDialogOpen(false);\n    }\n  };\n\n  const handleDeleteComment = async () => {\n    if (!selectedComment) return;\n    \n    try {\n      setLoading(true);\n      const response = await axios.delete(`/api/moderator/comments/${selectedComment.id}`);\n      \n      if (response.data.success) {\n        showNotification('success', 'Комментарий успешно удален');\n        setComments(comments.filter(comment => comment.id !== selectedComment.id));\n      } else {\n        throw new Error(response.data.error || 'Failed to delete comment');\n      }\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      showNotification('error', 'Не удалось удалить комментарий');\n    } finally {\n      setLoading(false);\n      setDeleteCommentDialogOpen(false);\n    }\n  };\n\n  const handleDeleteAvatar = async () => {\n    if (!selectedUser) return;\n    \n    try {\n      setLoading(true);\n      const response = await axios.delete(`/api/moderator/users/${selectedUser.id}/avatar`);\n      \n      if (response.data.success) {\n        showNotification('success', 'Аватар пользователя успешно удален');\n        \n        setUsers(users.map(user => \n          user.id === selectedUser.id \n            ? { ...user, photo: null } \n            : user\n        ));\n      } else {\n        throw new Error(response.data.error || 'Failed to delete avatar');\n      }\n    } catch (error) {\n      console.error('Error deleting avatar:', error);\n      showNotification('error', 'Не удалось удалить аватар');\n    } finally {\n      setLoading(false);\n      setDeleteAvatarDialogOpen(false);\n    }\n  };\n\n  const handleUpdateUserInfo = async () => {\n    if (!selectedUser) return;\n    \n    try {\n      setLoading(true);\n      const payload = {};\n      \n      if (permissions.change_user_name && editUserName) {\n        payload.name = editUserName;\n      }\n      \n      if (permissions.change_username && editUsername) {\n        payload.username = editUsername;\n      }\n      \n      const response = await axios.put(`/api/moderator/users/${selectedUser.id}`, payload);\n      \n      if (response.data.success) {\n        showNotification('success', 'Информация о пользователе обновлена');\n        \n        setUsers(users.map(user => \n          user.id === selectedUser.id \n            ? { \n                ...user, \n                name: payload.name || user.name, \n                username: payload.username || user.username \n              } \n            : user\n        ));\n      } else {\n        throw new Error(response.data.error || 'Failed to update user info');\n      }\n    } catch (error) {\n      console.error('Error updating user info:', error);\n      showNotification('error', 'Не удалось обновить информацию о пользователе');\n    } finally {\n      setLoading(false);\n      setEditUserDialogOpen(false);\n    }\n  };\n\n  const handleUpdateBugReportStatus = async () => {\n    if (!selectedBugReport || !bugReportStatus) return;\n    \n    try {\n      setLoading(true);\n      const response = await axios.put(`/api/moderator/bug-reports/${selectedBugReport.id}`, {\n        status: bugReportStatus\n      });\n      \n      if (response.data.success) {\n        showNotification('success', 'Статус баг-репорта обновлен');\n        \n        setBugReports(bugReports.map(report => \n          report.id === selectedBugReport.id \n            ? { ...report, status: bugReportStatus } \n            : report\n        ));\n      } else {\n        throw new Error(response.data.error || 'Failed to update bug report status');\n      }\n    } catch (error) {\n      console.error('Error updating bug report status:', error);\n      showNotification('error', 'Не удалось обновить статус баг-репорта');\n    } finally {\n      setLoading(false);\n      setBugReportStatusDialogOpen(false);\n    }\n  };\n\n  const handleDeleteBugReport = async (reportId) => {\n    try {\n      \n      if (!permissions.delete_bug_reports) {\n        showNotification('error', 'У вас нет прав на удаление баг-репортов');\n        return;\n      }\n      \n      \n      if (!window.confirm('Вы уверены, что хотите удалить этот баг-репорт?')) {\n        return;\n      }\n      \n      setLoading(true);\n      const response = await axios.delete(`/api/moderator/bug-reports/${reportId}`);\n      \n      if (response.data && response.data.success) {\n        \n        setBugReports(prevReports => prevReports.filter(report => report.id !== reportId));\n        showNotification('success', 'Баг-репорт успешно удален');\n      }\n    } catch (error) {\n      console.error('Error deleting bug report:', error);\n      showNotification('error', error.response?.data?.error || 'Ошибка при удалении баг-репорта');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const openDeletePostDialog = (post) => {\n    setSelectedPost(post);\n    setDeletePostDialogOpen(true);\n  };\n\n  const openDeleteTrackDialog = (track) => {\n    setSelectedTrack(track);\n    setDeleteTrackDialogOpen(true);\n  };\n\n  const openDeleteCommentDialog = (comment) => {\n    setSelectedComment(comment);\n    setDeleteCommentDialogOpen(true);\n  };\n\n  const openDeleteAvatarDialog = (user) => {\n    setSelectedUser(user);\n    setDeleteAvatarDialogOpen(true);\n  };\n\n  const openEditUserDialog = (user) => {\n    setSelectedUser(user);\n    setEditUserName(user.name || '');\n    setEditUsername(user.username || '');\n    setEditUserDialogOpen(true);\n  };\n\n  const openBugReportStatusDialog = (report) => {\n    setSelectedBugReport(report);\n    setBugReportStatus(report.status || 'Открыт');\n    setBugReportStatusDialogOpen(true);\n  };\n\n  \n  const debugBugReports = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/moderator/debug/bug-reports');\n      console.log('[DEBUG] Bug reports debug info:', response.data);\n      \n      const { total_bug_reports, sample_reports, user_permissions } = response.data;\n      \n      let message = `Всего баг-репортов в базе: ${total_bug_reports}\\n`;\n      message += `Права: manage=${user_permissions.manage_bug_reports}, delete=${user_permissions.delete_bug_reports}\\n\\n`;\n      \n      if (sample_reports.length > 0) {\n        message += 'Примеры баг-репортов:\\n';\n        sample_reports.forEach(report => {\n          message += `- ID ${report.id}: ${report.subject} (${report.status || 'Нет статуса'})\\n`;\n        });\n      } else {\n        message += 'В базе данных нет баг-репортов.';\n      }\n      \n      alert(message);\n    } catch (error) {\n      console.error('Error in debug function:', error);\n      alert(`Ошибка при отладке: ${error.response?.data?.error || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const deepDebugBugReports = async () => {\n    setLoading(true);\n    console.log('Performing deep debug of bug reports...');\n    \n    try {\n      \n      const adminCheckResponse = await axios.get('/api/admin/debug/bug-report-table');\n      console.log('Admin DB check response:', adminCheckResponse.data);\n      \n      const tableInfo = adminCheckResponse.data.table_info || {};\n      const sampleData = adminCheckResponse.data.sample_data || [];\n      const permissionsInfo = adminCheckResponse.data.permissions_info || {};\n      \n      \n      let alertMessage = `🔍 Database Direct Check:\\n`;\n      alertMessage += `Table columns: ${Object.keys(tableInfo).join(', ')}\\n\\n`;\n      alertMessage += `Found ${sampleData.length} bug reports in DB directly.\\n`;\n      alertMessage += `Moderator permissions: ${JSON.stringify(permissionsInfo)}\\n\\n`;\n      \n      if (sampleData.length > 0) {\n        alertMessage += `Sample data (first report):\\n`;\n        alertMessage += JSON.stringify(sampleData[0], null, 2);\n      }\n      \n      alert(alertMessage);\n      \n      \n      try {\n        const regularResponse = await axios.get('/api/moderator/bug-reports');\n        console.log('Regular API response:', regularResponse.data);\n        \n        \n        const paginationResponse = await axios.get('/api/moderator/bug-reports?page=1&per_page=10');\n        console.log('Pagination check response:', paginationResponse.data);\n        \n        const regularData = regularResponse.data.bug_reports || [];\n        const paginationData = paginationResponse.data.bug_reports || [];\n        \n        let compareMessage = `📊 API Comparison:\\n`;\n        compareMessage += `Regular API found: ${regularData.length} reports\\n`;\n        compareMessage += `Pagination API found: ${paginationData.length} reports\\n`;\n        compareMessage += `Database direct found: ${sampleData.length} reports\\n\\n`;\n        \n        if (regularData.length === 0 && sampleData.length > 0) {\n          compareMessage += `⚠️ ISSUE DETECTED: Data exists in DB but not in API response!\\n`;\n          compareMessage += `Possible causes:\\n`;\n          compareMessage += `- Permission filtering might be incorrect\\n`;\n          compareMessage += `- API response format mismatch\\n`;\n          compareMessage += `- Field name differences\\n`;\n        }\n        \n        alert(compareMessage);\n        \n      } catch (regularError) {\n        console.error('Error fetching regular bug reports for comparison:', regularError);\n        alert(`Failed to fetch regular bug reports: ${regularError.message}`);\n      }\n      \n    } catch (adminError) {\n      console.error('Admin debug check failed:', adminError);\n      alert(`Admin debug check failed: ${adminError.message}. Trying regular debug...`);\n      \n      \n      try {\n        const debugResponse = await axios.get('/api/moderator/debug/bug-reports');\n        console.log('Regular debug response:', debugResponse.data);\n        \n        const totalReports = debugResponse.data.total_reports || 0;\n        const sampleReports = debugResponse.data.sample_reports || [];\n        const permissions = debugResponse.data.permissions || {};\n        \n        let fallbackMessage = `🔍 Debug Check Results:\\n`;\n        fallbackMessage += `Total bug reports: ${totalReports}\\n`;\n        fallbackMessage += `User permissions: ${JSON.stringify(permissions)}\\n\\n`;\n        \n        if (sampleReports.length > 0) {\n          fallbackMessage += `Sample reports:\\n`;\n          fallbackMessage += JSON.stringify(sampleReports[0], null, 2);\n        } else {\n          fallbackMessage += `No sample reports found.`;\n        }\n        \n        alert(fallbackMessage);\n        \n      } catch (debugError) {\n        console.error('Regular debug also failed:', debugError);\n        alert(`All debug attempts failed. Please check server logs.`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  if (!user) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  \n  if (loading && !moderatorData) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', my: 4 }}>\n          <CircularProgress size={60} />\n          <Typography variant=\"h6\" sx={{ mt: 2 }}>\n            Проверка прав доступа...\n          </Typography>\n        </Box>\n      </Container>\n    );\n  }\n\n  \n  if (!loading && !moderatorData) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Paper sx={{ p: 4, textAlign: 'center' }}>\n          <SecurityIcon color=\"error\" sx={{ fontSize: 60, mb: 2 }} />\n          <Typography variant=\"h5\" sx={{ mb: 2 }}>\n            Доступ запрещен\n          </Typography>\n          <Typography variant=\"body1\" sx={{ mb: 3 }}>\n            У вас нет прав модератора. Обратитесь к администратору для получения доступа.\n          </Typography>\n          <Button variant=\"contained\" onClick={() => navigate('/')}>\n            Вернуться на главную\n          </Button>\n        </Paper>\n      </Container>\n    );\n  }\n\n  \n  const renderPosts = () => {\n    return (\n      <>\n        <Box sx={{ mb: 3 }}>\n          <TextField \n            fullWidth\n            placeholder=\"Поиск по постам...\"\n            value={search.posts}\n            onChange={(e) => handleSearchChange('posts', e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: search.posts ? (\n                <InputAdornment position=\"end\">\n                  <IconButton size=\"small\" onClick={() => clearSearch('posts')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ) : null\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Box>\n        \n        <Box sx={{ width: '100%' }}>\n          {posts.map((post, index) => (\n            <Paper \n              key={post.id}\n              ref={index === posts.length - 1 ? lastPostElementRef : null}\n              sx={{ p: { xs: 1.5, sm: 2 }, mb: 2, position: 'relative' }}\n            >\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', flexWrap: 'wrap', mb: 1 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: { xs: 1, sm: 0 }, width: { xs: 'calc(100% - 48px)', sm: 'auto' } }}>\n                  <Avatar \n                    src={post.author_avatar ? \n                      (post.author_avatar.startsWith('/') ? post.author_avatar : `/static/uploads/avatar/${post.author_id}/${post.author_avatar}`) : \n                      undefined}\n                    sx={{ mr: 1, width: 40, height: 40 }} \n                    onClick={() => navigate(`/profile/${post.author_username}`)}\n                    style={{ cursor: 'pointer' }}\n                  />\n                  <Box>\n                    <Typography \n                      variant=\"subtitle1\" \n                      onClick={() => navigate(`/profile/${post.author_username}`)}\n                      sx={{ cursor: 'pointer', '&:hover': { textDecoration: 'underline' } }}\n                    >\n                      {post.author_name}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      @{post.author_username}\n                    </Typography>\n                  </Box>\n                </Box>\n                \n                <Box display=\"flex\" alignItems=\"center\">\n                  <Button \n                    variant=\"outlined\" \n                    size=\"small\" \n                    sx={{ mr: 1, height: 36 }}\n                    onClick={() => navigate(`/post/${post.id}`)}\n                  >\n                    Открыть пост\n                  </Button>\n                  <IconButton \n                    color=\"error\" \n                    onClick={() => openDeletePostDialog(post)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </Box>\n              </Box>\n              \n              <Typography \n                variant=\"body1\" \n                sx={{ mb: 2, whiteSpace: 'pre-wrap', wordBreak: 'break-word', cursor: 'pointer' }}\n                onClick={() => navigate(`/post/${post.id}`)}\n              >\n                {post.content}\n              </Typography>\n              \n              {post.image && (\n                <Box \n                  sx={{ mb: 2, maxWidth: '100%', maxHeight: 300, overflow: 'hidden', cursor: 'pointer' }}\n                  onClick={() => navigate(`/post/${post.id}`)}\n                >\n                  <img \n                    src={post.image.startsWith('/') ? post.image : `/static/uploads/post/${post.id}/${post.image}`} \n                    alt=\"Post attachment\" \n                    style={{ width: '100%', height: 'auto', borderRadius: '8px' }} \n                  />\n                </Box>\n              )}\n              \n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {new Date(post.created_at).toLocaleString()} • {post.comments_count || 0} комментариев • {post.likes_count || 0} лайков\n              </Typography>\n            </Paper>\n          ))}\n        </Box>\n        \n        {loadingMore && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n            <CircularProgress size={30} />\n          </Box>\n        )}\n        \n        {!hasMore.posts && posts.length > 0 && (\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ py: 2 }}>\n            Больше постов нет\n          </Typography>\n        )}\n      </>\n    );\n  };\n\n  \n  const copyTrackLink = (track) => {\n    const trackLink = `${window.location.origin}/music/track/${track.id}`;\n    navigator.clipboard.writeText(trackLink)\n      .then(() => {\n        showNotification('success', 'Ссылка на трек скопирована в буфер обмена');\n      })\n      .catch(err => {\n        console.error('Не удалось скопировать ссылку:', err);\n        showNotification('error', 'Не удалось скопировать ссылку');\n      });\n  };\n\n  \n  const openTrack = (track) => {\n    navigate(`/music/track/${track.id}`);\n  };\n\n  \n  const renderTracks = () => {\n    return (\n      <>\n        <Box sx={{ mb: 3 }}>\n          <TextField \n            fullWidth\n            placeholder=\"Поиск по трекам...\"\n            value={search.tracks}\n            onChange={(e) => handleSearchChange('tracks', e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: search.tracks ? (\n                <InputAdornment position=\"end\">\n                  <IconButton size=\"small\" onClick={() => clearSearch('tracks')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ) : null\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Box>\n\n        <TableContainer sx={{ overflowX: 'auto' }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Обложка</TableCell>\n                <TableCell>Название</TableCell>\n                <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>Артист</TableCell>\n                <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Альбом</TableCell>\n                <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Загружено</TableCell>\n                <TableCell>Действия</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tracks.map((track, index) => (\n                <TableRow \n                  key={track.id}\n                  ref={index === tracks.length - 1 ? lastTrackElementRef : null}\n                >\n                  <TableCell>\n                    <Avatar \n                      src={track.cover ? `/static/music/${track.user_id}/${track.id}/${track.cover}` : \"/static/uploads/system/album_placeholder.jpg\"}\n                      variant=\"rounded\"\n                      sx={{ width: 50, height: 50, cursor: 'pointer' }}\n                      onClick={() => openTrack(track)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography \n                      noWrap \n                      sx={{ \n                        maxWidth: { xs: 100, sm: 150, md: 'none' },\n                        cursor: 'pointer',\n                        '&:hover': { textDecoration: 'underline' }\n                      }}\n                      onClick={() => openTrack(track)}\n                    >\n                      {track.title}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: { xs: 'block', sm: 'none' } }}>\n                      {track.artist}\n                    </Typography>\n                  </TableCell>\n                  <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>{track.artist}</TableCell>\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{track.album || 'Нет данных'}</TableCell>\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{new Date(track.created_at).toLocaleDateString()}</TableCell>\n                  <TableCell>\n                    <Box display=\"flex\">\n                      <IconButton \n                        color=\"primary\" \n                        onClick={() => copyTrackLink(track)}\n                        title=\"Копировать ссылку на трек\"\n                        size=\"small\"\n                      >\n                        <ContentCopyIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton \n                        color=\"primary\" \n                        onClick={() => openTrack(track)}\n                        title=\"Открыть трек\"\n                        size=\"small\"\n                      >\n                        <PlayArrowIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton \n                        color=\"error\" \n                        onClick={() => openDeleteTrackDialog(track)}\n                        title=\"Удалить трек\"\n                        size=\"small\"\n                      >\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </>\n    );\n  };\n\n  \n  const renderUsers = () => {\n    return (\n      <>\n        <Box sx={{ mb: 3 }}>\n          <TextField \n            fullWidth\n            placeholder=\"Поиск по пользователям...\"\n            value={search.users}\n            onChange={(e) => handleSearchChange('users', e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: search.users ? (\n                <InputAdornment position=\"end\">\n                  <IconButton size=\"small\" onClick={() => clearSearch('users')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ) : null\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Box>\n\n        <TableContainer sx={{ overflowX: 'auto' }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Аватар</TableCell>\n                <TableCell>Имя</TableCell>\n                <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>Username</TableCell>\n                <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Дата регистрации</TableCell>\n                <TableCell>Действия</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.map((user, index) => (\n                <TableRow \n                  key={user.id}\n                  ref={index === users.length - 1 ? lastUserElementRef : null}\n                >\n                  <TableCell>\n                    <Avatar \n                      src={user.photo ? (user.photo.startsWith('/') ? user.photo : `/static/uploads/avatar/${user.id}/${user.photo}`) : undefined}\n                      sx={{ width: 40, height: 40, cursor: 'pointer' }}\n                      onClick={() => navigate(`/profile/${user.username}`)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography \n                      noWrap \n                      sx={{ \n                        maxWidth: { xs: 120, sm: 'none' }, \n                        cursor: 'pointer',\n                        '&:hover': { textDecoration: 'underline' }\n                      }}\n                      onClick={() => navigate(`/profile/${user.username}`)}\n                    >\n                      {user.name}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: { xs: 'block', sm: 'none' } }}>\n                      @{user.username}\n                    </Typography>\n                  </TableCell>\n                  <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>\n                    <Typography \n                      sx={{ \n                        cursor: 'pointer',\n                        '&:hover': { textDecoration: 'underline' }\n                      }}\n                      onClick={() => navigate(`/profile/${user.username}`)}\n                    >\n                      @{user.username}\n                    </Typography>\n                  </TableCell>\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{new Date(user.created_at).toLocaleDateString()}</TableCell>\n                  <TableCell>\n                    <Box sx={{ display: 'flex' }}>\n                      <IconButton \n                        color=\"primary\"\n                        size=\"small\"\n                        onClick={() => navigate(`/profile/${user.username}`)}\n                        title=\"Профиль пользователя\"\n                      >\n                        <PersonIcon fontSize=\"small\" />\n                      </IconButton>\n                      \n                      {(permissions.change_user_name || permissions.change_username) && (\n                        <IconButton \n                          color=\"primary\" \n                          onClick={() => openEditUserDialog(user)}\n                          title=\"Изменить данные\"\n                          size=\"small\"\n                        >\n                          <EditIcon fontSize=\"small\" />\n                        </IconButton>\n                      )}\n                      \n                      {permissions.delete_avatar && user.photo && (\n                        <IconButton \n                          color=\"warning\" \n                          onClick={() => openDeleteAvatarDialog(user)}\n                          title=\"Удалить аватар\"\n                          size=\"small\"\n                        >\n                          <PhotoIcon fontSize=\"small\" />\n                        </IconButton>\n                      )}\n                      \n                      \n                      <Tooltip title=\"Предупреждения\">\n                        <IconButton \n                          color=\"warning\" \n                          onClick={() => openUserWarningsDialog(user)}\n                          size=\"small\"\n                        >\n                          <HistoryIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      \n                      <Tooltip title=\"Выдать предупреждение\">\n                        <IconButton \n                          color=\"warning\" \n                          onClick={() => openWarningDialog(user)}\n                          size=\"small\"\n                        >\n                          <WarningIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      \n                      <Tooltip title=\"Баны\">\n                        <IconButton \n                          color=\"error\" \n                          onClick={() => openUserBansDialog(user)}\n                          size=\"small\"\n                        >\n                          <HistoryIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      \n                      <Tooltip title=\"Забанить пользователя\">\n                        <IconButton \n                          color=\"error\" \n                          onClick={() => openBanDialog(user)}\n                          size=\"small\"\n                        >\n                          <BlockIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      \n                      {permissions.manage_bug_reports && (\n                        <Tooltip title=\"Выдать медаль\">\n                          <IconButton \n                            color=\"primary\" \n                            onClick={() => openIssueMedalDialog(user)}\n                            size=\"small\"\n                          >\n                            <EmojiEventsOutlinedIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      <Tooltip title=\"Управление декорациями\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => openDecorationMenu(user)}\n                        >\n                          <StarsIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        \n        \n        <StyledDialog open={warningDialogOpen} onClose={() => setWarningDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n          <DialogTitle>\n            Выдать предупреждение пользователю {warningUser?.name} (@{warningUser?.username})\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              fullWidth\n              label=\"Причина предупреждения\"\n              value={warningData.reason}\n              onChange={(e) => setWarningData({...warningData, reason: e.target.value})}\n              margin=\"normal\"\n              variant=\"outlined\"\n              required\n              helperText=\"Укажите причину, по которой выдается предупреждение\"\n            />\n            <TextField\n              fullWidth\n              label=\"Дополнительная информация\"\n              value={warningData.details}\n              onChange={(e) => setWarningData({...warningData, details: e.target.value})}\n              margin=\"normal\"\n              variant=\"outlined\"\n              multiline\n              rows={3}\n              helperText=\"При необходимости укажите дополнительную информацию\"\n            />\n            <Alert severity=\"warning\" sx={{ mt: 2 }}>\n              При получении 3 предупреждений пользователь будет автоматически заблокирован на 30 дней!\n            </Alert>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setWarningDialogOpen(false)}>Отмена</Button>\n            <Button \n              onClick={handleIssueWarning} \n              color=\"warning\" \n              variant=\"contained\"\n              disabled={!warningData.reason.trim()}\n            >\n              Выдать предупреждение\n            </Button>\n          </DialogActions>\n        </StyledDialog>\n        \n        \n        <StyledDialog open={banDialogOpen} onClose={() => setBanDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n          <DialogTitle>\n            Заблокировать пользователя {banUser?.name} (@{banUser?.username})\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              fullWidth\n              label=\"Причина блокировки\"\n              value={banData.reason}\n              onChange={(e) => setBanData({...banData, reason: e.target.value})}\n              margin=\"normal\"\n              variant=\"outlined\"\n              required\n              helperText=\"Укажите причину, по которой блокируется пользователь\"\n            />\n            <TextField\n              fullWidth\n              label=\"Дополнительная информация\"\n              value={banData.details}\n              onChange={(e) => setBanData({...banData, details: e.target.value})}\n              margin=\"normal\"\n              variant=\"outlined\"\n              multiline\n              rows={3}\n              helperText=\"При необходимости укажите дополнительную информацию\"\n            />\n            <TextField\n              fullWidth\n              label=\"Срок блокировки (дней)\"\n              type=\"number\"\n              value={banData.duration_days}\n              onChange={(e) => setBanData({...banData, duration_days: parseInt(e.target.value) || 1})}\n              margin=\"normal\"\n              variant=\"outlined\"\n              required\n              inputProps={{ min: 1, max: 365 }}\n              helperText=\"Укажите срок блокировки в днях (от 1 до 365)\"\n            />\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\n              Во время блокировки пользователь не сможет авторизоваться в аккаунте!\n            </Alert>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setBanDialogOpen(false)}>Отмена</Button>\n            <Button \n              onClick={handleBanUser} \n              color=\"error\" \n              variant=\"contained\"\n              disabled={!banData.reason.trim() || banData.duration_days < 1}\n            >\n              Заблокировать\n            </Button>\n          </DialogActions>\n        </StyledDialog>\n        \n        \n        <StyledDialog open={userWarningsDialogOpen} onClose={() => setUserWarningsDialogOpen(false)} maxWidth=\"md\" fullWidth>\n          <DialogTitle>\n            Предупреждения пользователя {selectedUserHistory?.name} (@{selectedUserHistory?.username})\n          </DialogTitle>\n          <DialogContent>\n            {loadingHistory ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                <CircularProgress />\n              </Box>\n            ) : userWarnings.length > 0 ? (\n              <List>\n                {userWarnings.map((warning) => (\n                  <Paper key={warning.id} sx={{ mb: 2, p: 2 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                      <Box>\n                        <Typography variant=\"subtitle1\" sx={{ display: 'flex', alignItems: 'center' }}>\n                          <WarningIcon color=\"warning\" sx={{ mr: 1 }} />\n                          {warning.reason}\n                          {warning.is_active ? (\n                            <Chip \n                              label=\"Активно\" \n                              color=\"warning\" \n                              size=\"small\" \n                              sx={{ ml: 1 }} \n                            />\n                          ) : (\n                            <Chip \n                              label=\"Снято\" \n                              color=\"default\" \n                              size=\"small\" \n                              sx={{ ml: 1 }} \n                            />\n                          )}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Выдано: {new Date(warning.created_at).toLocaleString()}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Модератор: {warning.admin_name} {warning.admin_username ? `(@${warning.admin_username})` : ''}\n                        </Typography>\n                        {warning.details && (\n                          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                            {warning.details}\n                          </Typography>\n                        )}\n                      </Box>\n                      {warning.is_active && (\n                        <Button \n                          variant=\"outlined\" \n                          color=\"primary\" \n                          size=\"small\"\n                          onClick={() => handleRemoveWarning(warning.id)}\n                        >\n                          Снять предупреждение\n                        </Button>\n                      )}\n                    </Box>\n                  </Paper>\n                ))}\n              </List>\n            ) : (\n              <Alert severity=\"info\">У пользователя нет предупреждений</Alert>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setUserWarningsDialogOpen(false)}>Закрыть</Button>\n            <Button \n              color=\"warning\" \n              variant=\"contained\" \n              onClick={() => {\n                setUserWarningsDialogOpen(false);\n                openWarningDialog(selectedUserHistory);\n              }}\n            >\n              Выдать предупреждение\n            </Button>\n          </DialogActions>\n        </StyledDialog>\n        \n        \n        <StyledDialog open={userBansDialogOpen} onClose={() => setUserBansDialogOpen(false)} maxWidth=\"md\" fullWidth>\n          <DialogTitle>\n            Блокировки пользователя {selectedUserHistory?.name} (@{selectedUserHistory?.username})\n          </DialogTitle>\n          <DialogContent>\n            {loadingHistory ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                <CircularProgress />\n              </Box>\n            ) : userBans.length > 0 ? (\n              <List>\n                {userBans.map((ban) => (\n                  <Paper key={ban.id} sx={{ mb: 2, p: 2 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                      <Box>\n                        <Typography variant=\"subtitle1\" sx={{ display: 'flex', alignItems: 'center' }}>\n                          <BlockIcon color=\"error\" sx={{ mr: 1 }} />\n                          {ban.reason}\n                          {ban.is_active && !ban.is_expired ? (\n                            <Chip \n                              label=\"Активно\" \n                              color=\"error\" \n                              size=\"small\" \n                              sx={{ ml: 1 }} \n                            />\n                          ) : (\n                            <Chip \n                              label={ban.is_active ? \"Истекло\" : \"Снято\"} \n                              color=\"default\" \n                              size=\"small\" \n                              sx={{ ml: 1 }} \n                            />\n                          )}\n                          {ban.is_auto_ban && (\n                            <Chip \n                              label=\"Авто\" \n                              color=\"primary\" \n                              size=\"small\" \n                              sx={{ ml: 1 }} \n                            />\n                          )}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Начало: {new Date(ban.start_date).toLocaleString()}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Окончание: {ban.formatted_end_date}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Модератор: {ban.admin_name} {ban.admin_username ? `(@${ban.admin_username})` : ''}\n                        </Typography>\n                        {ban.is_active && !ban.is_expired && (\n                          <Typography variant=\"body2\" color=\"error\">\n                            Осталось дней: {ban.remaining_days}\n                          </Typography>\n                        )}\n                        {ban.details && (\n                          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                            {ban.details}\n                          </Typography>\n                        )}\n                      </Box>\n                      {ban.is_active && !ban.is_expired && (\n                        <Button \n                          variant=\"outlined\" \n                          color=\"primary\" \n                          size=\"small\"\n                          onClick={() => handleRemoveBan(ban.id)}\n                        >\n                          Снять блокировку\n                        </Button>\n                      )}\n                    </Box>\n                  </Paper>\n                ))}\n              </List>\n            ) : (\n              <Alert severity=\"info\">У пользователя нет блокировок</Alert>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setUserBansDialogOpen(false)}>Закрыть</Button>\n            <Button \n              color=\"error\" \n              variant=\"contained\" \n              onClick={() => {\n                setUserBansDialogOpen(false);\n                openBanDialog(selectedUserHistory);\n              }}\n            >\n              Заблокировать\n            </Button>\n          </DialogActions>\n        </StyledDialog>\n      </>\n    );\n  };\n\n  \n  const renderComments = () => {\n    return (\n      <>\n        <Box sx={{ mb: 3 }}>\n          <TextField \n            fullWidth\n            placeholder=\"Поиск по комментариям...\"\n            value={search.comments}\n            onChange={(e) => handleSearchChange('comments', e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: search.comments ? (\n                <InputAdornment position=\"end\">\n                  <IconButton size=\"small\" onClick={() => clearSearch('comments')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ) : null\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Box>\n\n        <List sx={{ width: '100%' }}>\n          {comments.map((comment, index) => (\n            <React.Fragment key={comment.id}>\n              <Paper \n                sx={{ p: { xs: 1.5, sm: 2 }, mb: 2, bgcolor: 'background.default' }}\n                ref={index === comments.length - 1 ? lastCommentElementRef : null}\n              >\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', flexWrap: 'wrap' }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: { xs: 1, sm: 0 }, width: { xs: 'calc(100% - 48px)', sm: 'auto' } }}>\n                    <Avatar \n                      src={comment.author_avatar ? \n                        (comment.author_avatar.startsWith('/') ? comment.author_avatar : `/static/uploads/avatar/${comment.author_id}/${comment.author_avatar}`) : \n                        undefined}\n                      sx={{ mr: 1, width: 32, height: 32, cursor: 'pointer' }} \n                      onClick={() => navigate(`/profile/${comment.author_username}`)}\n                    />\n                    <Box>\n                      <Typography \n                        variant=\"subtitle2\" \n                        noWrap \n                        sx={{ \n                          maxWidth: { xs: 150, sm: 'none' },\n                          cursor: 'pointer',\n                          '&:hover': { textDecoration: 'underline' }\n                        }}\n                        onClick={() => navigate(`/profile/${comment.author_username}`)}\n                      >\n                        {comment.author_name}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {new Date(comment.created_at).toLocaleString()}\n                      </Typography>\n                    </Box>\n                  </Box>\n                  <Box display=\"flex\">\n                    <Button \n                      variant=\"outlined\" \n                      size=\"small\" \n                      sx={{ mr: 1, height: 30 }}\n                      onClick={() => navigate(`/post/${comment.post_id}`)}\n                    >\n                      К посту\n                    </Button>\n                    <IconButton color=\"error\" onClick={() => openDeleteCommentDialog(comment)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </Box>\n                </Box>\n                \n                <Typography \n                  variant=\"body1\" \n                  sx={{ \n                    mt: 1, mb: 1, \n                    wordBreak: 'break-word',\n                    cursor: 'pointer'\n                  }}\n                  onClick={() => navigate(`/post/${comment.post_id}`)}\n                >\n                  {comment.content}\n                </Typography>\n                \n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  К посту: <span \n                    style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                    onClick={() => navigate(`/post/${comment.post_id}`)}\n                  >\n                    #{comment.post_id}\n                  </span>\n                </Typography>\n              </Paper>\n            </React.Fragment>\n          ))}\n        </List>\n      </>\n    );\n  };\n\n  \n  const renderBugReports = () => {\n    \n    if (!permissions.manage_bug_reports && !permissions.delete_bug_reports) {\n      return (\n        <Box sx={{ textAlign: 'center', py: 4 }}>\n          <BugReportIcon sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            У вас нет прав на управление баг-репортами\n          </Typography>\n        </Box>\n      );\n    }\n\n    return (\n      <>\n        <Box sx={{ display: 'flex', mb: 2, flexWrap: 'wrap', gap: 2 }}>\n          <Typography variant=\"h6\">Управление баг-репортами</Typography>\n          <Box sx={{ flexGrow: 1 }} />\n          <TextField\n            placeholder=\"Поиск баг-репортов\"\n            size=\"small\"\n            value={search.bugReports}\n            onChange={(e) => handleSearchChange('bugReports', e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: search.bugReports ? (\n                <InputAdornment position=\"end\">\n                  <IconButton size=\"small\" onClick={() => clearSearch('bugReports')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ) : null\n            }}\n            variant=\"outlined\"\n          />\n        </Box>\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Пользователь</TableCell>\n                <TableCell>Заголовок</TableCell>\n                <TableCell>Описание</TableCell>\n                <TableCell>Статус</TableCell>\n                <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Дата</TableCell>\n                <TableCell>Действия</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {bugReports.length === 0 && !loading && (\n                <TableRow>\n                  <TableCell colSpan={7} align=\"center\">\n                    <Box sx={{ py: 3, display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n                      <Typography variant=\"body2\">\n                        Нет баг-репортов для отображения\n                      </Typography>\n                      <Box sx={{ display: 'flex', gap: 2 }}>\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\" \n                          color=\"primary\" \n                          onClick={debugBugReports}\n                          startIcon={<BugReportIcon />}\n                        >\n                          Проверить данные\n                        </Button>\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\" \n                          color=\"warning\" \n                          onClick={deepDebugBugReports}\n                          startIcon={<BugReportIcon />}\n                        >\n                          Глубокая проверка БД\n                        </Button>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              )}\n              \n              {loading && !loadingMore && (\n                <TableRow>\n                  <TableCell colSpan={7} align=\"center\">\n                    <CircularProgress size={32} sx={{ my: 2 }} />\n                  </TableCell>\n                </TableRow>\n              )}\n              \n              {bugReports.map((report, index) => (\n                <TableRow \n                  key={report.id}\n                  ref={index === bugReports.length - 1 ? lastBugReportElementRef : null}\n                >\n                  <TableCell>{report.id}</TableCell>\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Avatar \n                        src={report.user_photo ? \n                          (report.user_photo.startsWith('/') ? report.user_photo : `/static/uploads/avatar/${report.user_id}/${report.user_photo}`) \n                          : undefined} \n                        sx={{ mr: 1, width: 24, height: 24 }}\n                      />\n                      <Typography variant=\"body2\">{report.user_name}</Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">{report.title}</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography \n                      variant=\"body2\" \n                      sx={{ \n                        maxWidth: 200, \n                        overflow: 'hidden', \n                        textOverflow: 'ellipsis', \n                        whiteSpace: 'nowrap' \n                      }}\n                    >\n                      {report.description}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Chip \n                      label={report.status || 'Открыт'}\n                      color={\n                        report.status === 'Открыт' ? 'error' :\n                        report.status === 'В обработке' ? 'warning' :\n                        report.status === 'Решено' ? 'success' :\n                        'default'\n                      }\n                      size=\"small\"\n                      sx={{ fontSize: { xs: '0.65rem', sm: '0.75rem' } }}\n                    />\n                  </TableCell>\n                  <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>{new Date(report.created_at).toLocaleDateString()}</TableCell>\n                  <TableCell>\n                    <Box sx={{ display: 'flex' }}>\n                      {permissions.manage_bug_reports && (\n                        <IconButton \n                          size=\"small\" \n                          onClick={() => openBugReportStatusDialog(report)}\n                        >\n                          <EditIcon fontSize=\"small\" />\n                        </IconButton>\n                      )}\n                      {permissions.delete_bug_reports && (\n                        <IconButton \n                          color=\"error\" \n                          size=\"small\" \n                          onClick={() => handleDeleteBugReport(report.id)}\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n              \n              {loadingMore && (\n                <TableRow>\n                  <TableCell colSpan={7} align=\"center\">\n                    <CircularProgress size={24} sx={{ my: 1 }} />\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </>\n    );\n  };\n\n  \n  const openEditBadgeDialog = (badge) => {\n    setSelectedBadge(badge);\n    setEditBadgeName(badge.name);\n    setEditBadgeDescription(badge.description || '');\n    setEditBadgePrice(badge.price.toString());\n    setEditBadgeActive(badge.is_active);\n    setEditBadgeImage(null);\n    setEditBadgeImagePreview(`/static/images/bages/shop/${badge.image_path}`);\n    setEditBadgeDialogOpen(true);\n  };\n\n  \n  const openDeleteBadgeDialog = (badge) => {\n    setSelectedBadge(badge);\n    setDeleteBadgeDialogOpen(true);\n  };\n\n  \n  const handleUpdateBadge = async () => {\n    try {\n      if (!selectedBadge) return;\n\n      \n      if (!editBadgeName) {\n        showNotification('error', 'Название бейджика не может быть пустым');\n        return;\n      }\n\n      \n      const price = parseInt(editBadgePrice);\n      if (isNaN(price) || price <= 0) {\n        showNotification('error', 'Цена должна быть положительным числом');\n        return;\n      }\n\n      setLoading(true);\n      \n      let response;\n      \n      \n      if (editBadgeImage) {\n        const formData = new FormData();\n        formData.append('name', editBadgeName);\n        formData.append('description', editBadgeDescription || '');\n        formData.append('price', price);\n        formData.append('is_active', editBadgeActive);\n        formData.append('image', editBadgeImage);\n        \n        console.log('[DEBUG] Updating badge with image:', {\n          id: selectedBadge.id,\n          name: editBadgeName,\n          description: editBadgeDescription,\n          price: price,\n          is_active: editBadgeActive\n        });\n        \n        response = await axios.put(`/api/moderator/badges/${selectedBadge.id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        \n        const data = {\n          name: editBadgeName,\n          description: editBadgeDescription || '',\n          price: price,\n          is_active: editBadgeActive\n        };\n        \n        console.log('[DEBUG] Updating badge without image:', {\n          id: selectedBadge.id,\n          ...data\n        });\n        \n        response = await axios.put(`/api/moderator/badges/${selectedBadge.id}`, data);\n      }\n      \n      console.log('[DEBUG] Badge update response:', response.data);\n      \n      if (response.data.success) {\n        showNotification('success', 'Бейджик успешно обновлен');\n        \n        \n        setBadges(prev => \n          prev.map(badge => \n            badge.id === selectedBadge.id \n              ? { \n                  ...badge, \n                  name: editBadgeName, \n                  description: editBadgeDescription || '',\n                  price: price,\n                  is_active: editBadgeActive,\n                  image_path: response.data.badge.image_path || badge.image_path\n                }\n              : badge\n          )\n        );\n        \n        setEditBadgeDialogOpen(false);\n      } else {\n        console.error('[DEBUG] Badge update error:', response.data);\n        showNotification('error', response.data.error || 'Не удалось обновить бейджик');\n      }\n    } catch (error) {\n      console.error('Ошибка при обновлении бейджика:', error);\n      console.error('Детали ошибки:', error.response?.data);\n      showNotification('error', error.response?.data?.error || 'Не удалось обновить бейджик');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const handleDeleteBadge = async () => {\n    try {\n      if (!selectedBadge) return;\n      \n      setLoading(true);\n      \n      console.log(`[DEBUG] Deleting badge: ${selectedBadge.id} (${selectedBadge.name})`);\n      \n      const response = await axios.delete(`/api/moderator/badges/${selectedBadge.id}`);\n      \n      console.log('[DEBUG] Badge delete response:', response.data);\n      \n      if (response.data.success) {\n        showNotification('success', 'Бейджик успешно удален');\n        \n        \n        setBadges(prev => prev.filter(badge => badge.id !== selectedBadge.id));\n        \n        setDeleteBadgeDialogOpen(false);\n      } else {\n        console.error('[DEBUG] Badge delete error:', response.data);\n        showNotification('error', response.data.error || 'Не удалось удалить бейджик');\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении бейджика:', error);\n      console.error('Детали ошибки:', error.response?.data);\n      showNotification('error', error.response?.data?.error || 'Не удалось удалить бейджик');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const handleBadgeImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      \n      if (file.type !== 'image/svg+xml' && file.type !== 'image/gif') {\n        showNotification('error', 'Разрешены только SVG и GIF файлы');\n        return;\n      }\n\n      setEditBadgeImage(file);\n      \n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setEditBadgeImagePreview(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  \n  const renderBadges = () => {\n    \n    if (!permissions.edit_badges && !permissions.delete_badges) {\n      return (\n        <Alert severity=\"warning\" sx={{ mt: 2 }}>\n          У вас нет прав на управление бейджиками\n        </Alert>\n      );\n    }\n    \n    \n    if (loading && badges.length === 0) {\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n    \n    \n    if (!loading && badges.length === 0) {\n      return (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          Бейджики не найдены\n        </Alert>\n      );\n    }\n    \n    \n    try {\n      return (\n        <>\n          \n          <Box sx={{ mb: 3, mt: 2, display: 'flex', alignItems: 'center' }}>\n            <TextField\n              placeholder=\"Поиск бейджиков...\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n              value={search.badges}\n              onChange={(e) => handleSearchChange('badges', e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n                endAdornment: search.badges && (\n                  <InputAdornment position=\"end\">\n                    <IconButton size=\"small\" onClick={() => clearSearch('badges')}>\n                      <ClearIcon />\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </Box>\n          \n          \n          <Grid container spacing={3}>\n            {badges.map((badge, index) => {\n              \n              if (!badge || typeof badge !== 'object') {\n                console.error('[DEBUG] Invalid badge object:', badge);\n                return null;\n              }\n              \n              \n              const isLastElement = index === badges.length - 1;\n              \n              return (\n                <Zoom in key={badge.id} style={{ transitionDelay: `${index * 50}ms` }}>\n                  <Grid \n                    item \n                    xs={12} sm={6} md={4} lg={3} \n                    ref={isLastElement ? lastBadgeElementRef : null}\n                  >\n                    <Card \n                      elevation={3}\n                      sx={{ \n                        height: '100%', \n                        display: 'flex', \n                        flexDirection: 'column',\n                        transition: 'transform 0.2s, box-shadow 0.2s',\n                        '&:hover': {\n                          transform: 'translateY(-5px)',\n                          boxShadow: 6\n                        },\n                        bgcolor: badge.is_active ? 'background.paper' : 'rgba(0,0,0,0.05)'\n                      }}\n                    >\n                      <CardHeader\n                        avatar={\n                          <Badge\n                            overlap=\"circular\"\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                            badgeContent={\n                              <Tooltip title={badge.is_active ? 'Активен' : 'Неактивен'}>\n                                <Avatar \n                                  sx={{ \n                                    width: 15, \n                                    height: 15, \n                                    bgcolor: badge.is_active ? 'success.main' : 'text.disabled' \n                                  }}\n                                >\n                                  {badge.is_active ? <CheckCircleIcon sx={{ width: 10, height: 10 }} /> : <VisibilityOffIcon sx={{ width: 10, height: 10 }} />}\n                                </Avatar>\n                              </Tooltip>\n                            }\n                          >\n                            <Avatar \n                              src={badge.creator_avatar ? `/avatar/${badge.creator_id}/${badge.creator_avatar}` : undefined}\n                              alt={badge.creator_name || 'Creator'} \n                              sx={{ bgcolor: 'primary.main' }}\n                            >\n                              {badge.creator_name?.charAt(0) || 'U'}\n                            </Avatar>\n                          </Badge>\n                        }\n                        title={\n                          <Tooltip title={`Создатель: ${badge.creator_name || 'Неизвестно'}`}>\n                            <Typography variant=\"subtitle1\" noWrap>\n                              {badge.name ? (badge.name.length > 7 ? badge.name.slice(0, 7) + '...' : badge.name) : 'Бейджик'}\n                            </Typography>\n                          </Tooltip>\n                        }\n                        subheader={\n                          <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                            {badge.description ? (badge.description.length > 7 ? badge.description.slice(0, 7) + '...' : badge.description) : 'Нет'}\n                          </Typography>\n                        }\n                        action={\n                          <Box sx={{ display: 'flex', flexDirection: 'row' }}>\n                            {permissions.edit_badges && (\n                              <IconButton \n                                onClick={() => openEditBadgeDialog(badge)}\n                                aria-label=\"Редактировать бейджик\"\n                                color=\"primary\"\n                              >\n                                <EditIcon />\n                              </IconButton>\n                            )}\n                            {permissions.delete_badges && (\n                              <IconButton \n                                onClick={() => openDeleteBadgeDialog(badge)}\n                                aria-label=\"Удалить бейджик\"\n                                color=\"error\"\n                              >\n                                <DeleteIcon />\n                              </IconButton>\n                            )}\n                          </Box>\n                        }\n                      />\n                      <CardMedia\n                        component=\"img\"\n                        sx={{\n                          objectFit: 'contain',\n                          p: 2,\n                          height: 140,\n                          filter: badge.is_active ? 'none' : 'grayscale(100%)'\n                        }}\n                        image={badge.image_path ? `/static/images/bages/shop/${badge.image_path}` : '/static/images/bages/default.svg'}\n                        alt={badge.name || 'Бейджик'}\n                        onError={(e) => {\n                          console.error(`[DEBUG] Error loading badge image: ${badge.image_path}`);\n                          e.target.src = '/static/images/bages/default.svg';\n                        }}\n                      />\n                      <CardContent sx={{ flexGrow: 1 }}>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                          <Chip \n                            icon={<PaidIcon />} \n                            label={`${badge.price || 0} баллов`} \n                            color=\"primary\" \n                            variant=\"outlined\"\n                            size=\"small\"\n                            sx={{ borderRadius: 1 }}\n                          />\n                          <Chip \n                            icon={<CreditCardIcon />} \n                            label={`${badge.copies_sold || 0} продано`} \n                            color=\"secondary\" \n                            variant=\"outlined\"\n                            size=\"small\" \n                            sx={{ borderRadius: 1 }}\n                          />\n                        </Box>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                </Zoom>\n              );\n            })}\n          </Grid>\n          \n          \n          {loadingMore && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n              <CircularProgress size={30} />\n            </Box>\n          )}\n          \n          \n          {hasMore.badges && badges.length > 0 && (\n            <div ref={lastBadgeElementRef} style={{ height: '20px' }}></div>\n          )}\n        </>\n      );\n    } catch (error) {\n      console.error('[DEBUG] Error rendering badges:', error);\n      return (\n        <Alert severity=\"error\" sx={{ mt: 2 }}>\n          Ошибка при отображении бейджиков: {error.message}\n        </Alert>\n      );\n    }\n  };\n\n  \n  const renderProfile = () => {\n    \n    if (loading && !moderatorData) {\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n          <CircularProgress />\n        </Box>\n      );\n    }\n    \n    \n    if (!moderatorData) {\n      return (\n        <Alert severity=\"error\" sx={{ mt: 2 }}>\n          Не удалось загрузить данные модератора\n        </Alert>\n      );\n    }\n    \n    \n    const assignedDate = moderatorData.assigned_info?.assigned_at \n      ? new Date(moderatorData.assigned_info.assigned_at) \n      : null;\n    \n    \n    const daysSinceAssigned = assignedDate \n      ? Math.floor((new Date() - assignedDate) / (1000 * 60 * 60 * 24)) \n      : null;\n      \n    return (\n      <Grid container spacing={3}>\n        \n        <Grid item xs={12} md={4}>\n          <Card \n            elevation={3} \n            sx={{\n              height: '100%',\n              background: 'linear-gradient(to bottom right, rgb(35 35 35 / 95%), rgb(0 0 0 / 90%))',\n              color: 'white',\n              borderRadius: 2,\n              position: 'relative',\n              overflow: 'hidden'\n            }}\n          >\n            <Box \n              sx={{ \n                position: 'absolute',\n                top: -50,\n                right: -50,\n                width: 150,\n                height: 150,\n                borderRadius: '50%',\n                background: 'radial-gradient(circle, rgba(63,81,181,0.2) 0%, rgba(63,81,181,0) 70%)',\n                zIndex: 0\n              }} \n            />\n            \n            <CardContent sx={{ position: 'relative', zIndex: 1, p: 3 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                <Avatar \n                  src={user?.photo ? `/avatar/${user.id}/${user.photo}` : null}\n                  sx={{ \n                    width: 80, \n                    height: 80,\n                    bgcolor: 'primary.main',\n                    boxShadow: '0 4px 12px rgba(0,0,0,0.3)'\n                  }}\n                >\n                  {user?.name?.charAt(0) || 'M'}\n                </Avatar>\n                <Box sx={{ ml: 2 }}>\n                  <Typography variant=\"h5\" fontWeight=\"bold\" gutterBottom>\n                    {user?.name || 'Модератор'}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                    @{user?.username || 'username'}\n                  </Typography>\n                </Box>\n              </Box>\n              \n              <Divider sx={{ borderColor: 'rgba(255,255,255,0.1)', mb: 2 }} />\n              \n              <Typography variant=\"subtitle1\" color=\"primary.light\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n                <AdminPanelSettingsIcon sx={{ mr: 1 }} />\n                Статус модератора\n              </Typography>\n              \n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Chip \n                  icon={moderatorData.moderator_level >= 3 ? <VerifiedUserIcon /> : <SecurityIcon />}\n                  label={moderatorData.moderator_level >= 3 ? 'Администратор' : 'Модератор'} \n                  color={moderatorData.moderator_level >= 3 ? 'secondary' : 'primary'}\n                  variant=\"filled\"\n                  sx={{ \n                    borderRadius: 2,\n                    background: moderatorData.moderator_level >= 3 \n                      ? 'linear-gradient(45deg, #9c27b0 30%, #d500f9 90%)'\n                      : 'linear-gradient(45deg, #3f51b5 30%, #5c6bc0 90%)',\n                    boxShadow: '0 2px 8px rgba(0,0,0,0.3)',\n                    fontWeight: 'bold'\n                  }}\n                />\n              </Box>\n              \n              {assignedDate && (\n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"subtitle2\" color=\"rgba(255,255,255,0.7)\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n                    <AccessTimeIcon sx={{ mr: 1, fontSize: '0.9rem' }} />\n                    Назначен модератором\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"rgba(255,255,255,0.9)\">\n                    {assignedDate.toLocaleDateString()} \n                    <Typography component=\"span\" variant=\"body2\" color=\"rgba(255,255,255,0.6)\" sx={{ ml: 1 }}>\n                      ({daysSinceAssigned} {daysSinceAssigned === 1 ? 'день' : daysSinceAssigned < 5 ? 'дня' : 'дней'})\n                    </Typography>\n                  </Typography>\n                </Box>\n              )}\n              \n              {moderatorData.assigned_info?.assigned_by?.name && (\n                <Box>\n                  <Typography variant=\"subtitle2\" color=\"rgba(255,255,255,0.7)\" gutterBottom>\n                    Назначен администратором\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"rgba(255,255,255,0.9)\">\n                    {moderatorData.assigned_info.assigned_by.name}\n                  </Typography>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        \n        <Grid item xs={12} md={8}>\n          <Card \n            elevation={3}\n            sx={{\n              height: '100%',\n              background: 'linear-gradient(to bottom right, rgb(35 35 35 / 95%), rgb(0 0 0 / 90%))',\n              color: 'white',\n              borderRadius: 2\n            }}\n          >\n            <CardHeader\n              title={\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <VerifiedUserIcon sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\" color=\"primary.light\">\n                    Права модератора\n                  </Typography>\n                </Box>\n              }\n              sx={{ \n                borderBottom: '1px solid rgba(255,255,255,0.1)',\n                pb: 1\n              }}\n            />\n            \n            <CardContent sx={{ p: 3 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Удаление постов\" \n                    enabled={permissions.delete_posts}\n                    icon={<PostAddIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Удаление музыки\" \n                    enabled={permissions.delete_music}\n                    icon={<MusicNoteIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Удаление комментариев\" \n                    enabled={permissions.delete_comments}\n                    icon={<CommentIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Удаление аватаров\" \n                    enabled={permissions.delete_avatar}\n                    icon={<PhotoIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Изменение имён\" \n                    enabled={permissions.change_user_name}\n                    icon={<PersonIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Изменение username\" \n                    enabled={permissions.change_username}\n                    icon={<EditIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Управление баг-репортами\" \n                    enabled={permissions.manage_bug_reports}\n                    icon={<BugReportIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Удаление баг-репортов\" \n                    enabled={permissions.delete_bug_reports}\n                    icon={<DeleteIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Редактирование бейджиков\" \n                    enabled={permissions.edit_badges}\n                    icon={<EmojiEventsIcon />}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Удаление бейджиков\" \n                    enabled={permissions.delete_badges}\n                    icon={<DeleteIcon />}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <PermissionItem \n                    title=\"Генерация ключей\" \n                    enabled={permissions.can_generate_keys}\n                    icon={<VpnKeyIcon sx={{ color: permissions.can_generate_keys ? 'gold' : 'grey.600' }} />}\n                  />\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        \n        <Grid item xs={12}>\n          <Card \n            elevation={3}\n            sx={{\n              background: 'linear-gradient(to bottom right, rgb(35 35 35 / 95%), rgb(0 0 0 / 90%))',\n              color: 'white',\n              borderRadius: 2\n            }}\n          >\n            <CardHeader\n              title={\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <AccessTimeIcon sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\" color=\"primary.light\">\n                    Статистика работы модератора\n                  </Typography>\n                </Box>\n              }\n              sx={{ \n                borderBottom: '1px solid rgba(255,255,255,0.1)',\n                pb: 1\n              }}\n            />\n            \n            <CardContent sx={{ p: 3 }}>\n              {moderatorStats.loading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', py: 2 }}>\n                  <CircularProgress size={32} />\n                </Box>\n              ) : (\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <Box sx={{ \n                      p: 2, \n                      bgcolor: 'rgba(63,81,181,0.05)', \n                      borderRadius: 2,\n                      border: '1px solid rgba(63,81,181,0.1)',\n                      mb: 2\n                    }}>\n                      <Typography variant=\"subtitle2\" color=\"primary.light\" gutterBottom>\n                        Удаление контента\n                      </Typography>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                            <PostAddIcon sx={{ mr: 1, fontSize: '1rem', color: 'rgba(255,255,255,0.6)' }} />\n                            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                              Посты: <strong>{moderatorStats.deleted_posts}</strong>\n                            </Typography>\n                          </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                            <MusicNoteIcon sx={{ mr: 1, fontSize: '1rem', color: 'rgba(255,255,255,0.6)' }} />\n                            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                              Треки: <strong>{moderatorStats.deleted_tracks}</strong>\n                            </Typography>\n                          </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <CommentIcon sx={{ mr: 1, fontSize: '1rem', color: 'rgba(255,255,255,0.6)' }} />\n                            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                              Комментарии: <strong>{moderatorStats.deleted_comments}</strong>\n                            </Typography>\n                          </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <PhotoIcon sx={{ mr: 1, fontSize: '1rem', color: 'rgba(255,255,255,0.6)' }} />\n                            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                              Аватары: <strong>{moderatorStats.deleted_avatars}</strong>\n                            </Typography>\n                          </Box>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <Box sx={{ \n                      p: 2, \n                      bgcolor: 'rgba(255,152,0,0.05)', \n                      borderRadius: 2,\n                      border: '1px solid rgba(255,152,0,0.1)',\n                      mb: 2\n                    }}>\n                      <Typography variant=\"subtitle2\" color=\"warning.light\" gutterBottom>\n                        Наказания\n                      </Typography>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                            <WarningAmberIcon sx={{ mr: 1, fontSize: '1rem', color: 'rgba(255,255,255,0.6)' }} />\n                            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                              Предупреждения: <strong>{moderatorStats.warnings_issued}</strong>\n                            </Typography>\n                          </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                            <BlockIcon sx={{ mr: 1, fontSize: '1rem', color: 'rgba(255,255,255,0.6)' }} />\n                            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                              Баны: <strong>{moderatorStats.bans_issued}</strong>\n                            </Typography>\n                          </Box>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <PersonIcon sx={{ mr: 1, fontSize: '1rem', color: 'rgba(255,255,255,0.6)' }} />\n                            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                              Обновление данных: <strong>{moderatorStats.updated_users}</strong>\n                            </Typography>\n                          </Box>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                    <Box sx={{ \n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      borderRadius: 2,\n                      background: 'linear-gradient(135deg, rgba(208, 188, 255, 0.1) 0%, rgba(208, 188, 255, 0.05) 100%)',\n                      border: '1px solid rgba(208, 188, 255, 0.2)'\n                    }}>\n                      <Typography variant=\"subtitle1\" color=\"primary.light\" sx={{ fontWeight: 'bold' }}>\n                        Всего действий: <strong>{moderatorStats.total_actions}</strong>\n                      </Typography>\n                    </Box>\n                  </Grid>\n                </Grid>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid item xs={12}>\n          {renderModKeysSection()}\n        </Grid>\n      </Grid>\n    );\n  };\n  \n  \n  const PermissionItem = ({ title, enabled, icon }) => {\n    return (\n      <Paper \n        elevation={0}\n        sx={{\n          p: 2,\n          borderRadius: 2,\n          backgroundColor: enabled ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.3)',\n          border: `1px solid ${enabled ? 'rgba(76,175,80,0.3)' : 'rgba(255,255,255,0.1)'}`,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <Avatar \n            sx={{ \n              width: 32, \n              height: 32, \n              bgcolor: enabled ? 'rgba(76,175,80,0.2)' : 'rgba(255,255,255,0.05)',\n              mr: 1.5\n            }}\n          >\n            {React.cloneElement(icon, { fontSize: 'small', color: enabled ? 'success' : 'disabled' })}\n          </Avatar>\n          <Typography variant=\"body1\" color={enabled ? 'rgba(255,255,255,0.9)' : 'rgba(255,255,255,0.5)'}>\n            {title}\n          </Typography>\n        </Box>\n        \n        {enabled ? (\n          <CheckCircleIcon color=\"success\" />\n        ) : (\n          <DoNotDisturbIcon color=\"disabled\" sx={{ opacity: 0.5 }} />\n        )}\n      </Paper>\n    );\n  };\n\n  \n  const openWarningDialog = (user) => {\n    setWarningUser(user);\n    setWarningData({\n      reason: '',\n      details: ''\n    });\n    setWarningDialogOpen(true);\n  };\n  \n  \n  const openBanDialog = (user) => {\n    setBanUser(user);\n    setBanData({\n      reason: '',\n      details: '',\n      duration_days: 30\n    });\n    setBanDialogOpen(true);\n  };\n  \n  \n  const openUserWarningsDialog = async (user) => {\n    setSelectedUserHistory(user);\n    setLoadingHistory(true);\n    setUserWarningsDialogOpen(true);\n    \n    try {\n      const response = await axios.get(`/api/user/${user.id}/warnings`);\n      if (response.data.success) {\n        setUserWarnings(response.data.warnings);\n      } else {\n        showNotification('error', 'Не удалось загрузить историю предупреждений');\n      }\n    } catch (error) {\n      console.error('Ошибка при загрузке предупреждений:', error);\n      showNotification('error', 'Ошибка при загрузке предупреждений');\n    } finally {\n      setLoadingHistory(false);\n    }\n  };\n  \n  \n  const openUserBansDialog = async (user) => {\n    setSelectedUserHistory(user);\n    setLoadingHistory(true);\n    setUserBansDialogOpen(true);\n    \n    try {\n      const response = await axios.get(`/api/user/${user.id}/bans`);\n      if (response.data.success) {\n        setUserBans(response.data.bans);\n      } else {\n        showNotification('error', 'Не удалось загрузить историю банов');\n      }\n    } catch (error) {\n      console.error('Ошибка при загрузке банов:', error);\n      showNotification('error', 'Ошибка при загрузке банов');\n    } finally {\n      setLoadingHistory(false);\n    }\n  };\n  \n  \n  const handleIssueWarning = async () => {\n    if (!warningUser) return;\n    \n    if (!warningData.reason.trim()) {\n      showNotification('error', 'Укажите причину предупреждения');\n      return;\n    }\n    \n    try {\n      const response = await axios.post('/api/moderator/warnings', {\n        user_id: warningUser.id,\n        reason: warningData.reason,\n        details: warningData.details\n      });\n      \n      if (response.data.success) {\n        showNotification('success', 'Предупреждение успешно выдано');\n        \n        \n        if (response.data.auto_ban) {\n          showNotification('info', `Пользователь автоматически заблокирован за 3 предупреждения до ${response.data.ban_info.formatted_end_date}`);\n        }\n        \n        setWarningDialogOpen(false);\n      } else {\n        showNotification('error', response.data.message || 'Ошибка при выдаче предупреждения');\n      }\n    } catch (error) {\n      console.error('Ошибка при выдаче предупреждения:', error);\n      showNotification('error', 'Ошибка при выдаче предупреждения');\n    }\n  };\n  \n  \n  const handleBanUser = async () => {\n    if (!banUser) return;\n    \n    if (!banData.reason.trim()) {\n      showNotification('error', 'Укажите причину бана');\n      return;\n    }\n    \n    try {\n      const response = await axios.post('/api/moderator/bans', {\n        user_id: banUser.id,\n        reason: banData.reason,\n        details: banData.details,\n        duration_days: banData.duration_days\n      });\n      \n      if (response.data.success) {\n        showNotification('success', `Пользователь заблокирован до ${response.data.formatted_end_date}`);\n        setBanDialogOpen(false);\n      } else {\n        showNotification('error', response.data.message || 'Ошибка при бане пользователя');\n      }\n    } catch (error) {\n      console.error('Ошибка при бане пользователя:', error);\n      showNotification('error', 'Ошибка при бане пользователя');\n    }\n  };\n  \n  \n  const handleRemoveWarning = async (warningId) => {\n    try {\n      const response = await axios.delete(`/api/moderator/warnings/${warningId}`);\n      \n      if (response.data.success) {\n        showNotification('success', 'Предупреждение успешно снято');\n        \n        setUserWarnings(userWarnings.map(warning => \n          warning.id === warningId ? { ...warning, is_active: false } : warning\n        ));\n      } else {\n        showNotification('error', response.data.message || 'Ошибка при снятии предупреждения');\n      }\n    } catch (error) {\n      console.error('Ошибка при снятии предупреждения:', error);\n      showNotification('error', 'Ошибка при снятии предупреждения');\n    }\n  };\n  \n  \n  const handleRemoveBan = async (banId) => {\n    try {\n      const response = await axios.delete(`/api/moderator/bans/${banId}`);\n      \n      if (response.data.success) {\n        showNotification('success', 'Бан успешно снят');\n        \n        setUserBans(userBans.map(ban => \n          ban.id === banId ? { ...ban, is_active: false } : ban\n        ));\n      } else {\n        showNotification('error', response.data.message || 'Ошибка при снятии бана');\n      }\n    } catch (error) {\n      console.error('Ошибка при снятии бана:', error);\n      showNotification('error', 'Ошибка при снятии бана');\n    }\n  };\n\n  const handleDeleteArtist = async () => {\n    if (!selectedArtist) return;\n    \n    try {\n      setLoading(true);\n      const response = await axios.delete(`/api/moderator/artists/${selectedArtist.id}`);\n      \n      if (response.data.success) {\n        showNotification('success', 'Артист успешно удален');\n        setArtists(artists.filter(artist => artist.id !== selectedArtist.id));\n      } else {\n        throw new Error(response.data.error || 'Failed to delete artist');\n      }\n    } catch (error) {\n      console.error('Error deleting artist:', error);\n      showNotification('error', 'Не удалось удалить артиста');\n    } finally {\n      setLoading(false);\n      setDeleteArtistDialogOpen(false);\n    }\n  };\n  \n  const handleArtistImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (!file.type.startsWith('image/')) {\n        showNotification('error', 'Разрешены только изображения');\n        return;\n      }\n      \n      setEditArtistAvatar(file);\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setEditArtistAvatarPreview(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  const handleUpdateArtist = async () => {\n    try {\n      setLoading(true);\n      \n      let response;\n      \n\n      if (!selectedArtist) {\n\n        const formData = new FormData();\n        formData.append('name', editArtistName);\n        formData.append('bio', editArtistBio || '');\n        formData.append('verified', editArtistVerified);\n        \n        if (editArtistAvatar) {\n          formData.append('avatar_file', editArtistAvatar);\n        }\n        \n        response = await axios.post('/api/moderator/artists', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        \n        if (response.data.success) {\n          showNotification('success', 'Артист успешно создан');\n\n          setArtists(prev => [{\n            id: response.data.artist_id,\n            name: editArtistName,\n            bio: editArtistBio || '',\n            is_verified: editArtistVerified,\n            avatar: response.data.artist.avatar_url ? response.data.artist.avatar_url.split('/').pop() : '',\n            created_at: new Date().toISOString(),\n            tracks_count: 0\n          }, ...prev]);\n          \n          setEditArtistDialogOpen(false);\n        } else {\n          showNotification('error', response.data.error || 'Не удалось создать артиста');\n        }\n      } else {\n\n        if (editArtistAvatar) {\n\n          const formData = new FormData();\n          formData.append('name', editArtistName);\n          formData.append('bio', editArtistBio || '');\n          formData.append('verified', editArtistVerified);\n          formData.append('avatar_file', editArtistAvatar);\n          \n          response = await axios.put(`/api/moderator/artists/${selectedArtist.id}`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n        } else {\n\n          const data = {\n            name: editArtistName,\n            bio: editArtistBio || '',\n            verified: editArtistVerified\n          };\n          \n          response = await axios.put(`/api/moderator/artists/${selectedArtist.id}`, data);\n        }\n        \n        if (response.data.success) {\n          showNotification('success', 'Данные артиста успешно обновлены');\n          \n          setArtists(prev => \n            prev.map(artist => \n              artist.id === selectedArtist.id \n                ? { \n                    ...artist, \n                    name: editArtistName, \n                    bio: editArtistBio || '',\n                    is_verified: editArtistVerified,\n                    avatar: response.data.artist.avatar_url ? response.data.artist.avatar_url.split('/').pop() : artist.avatar\n                  }\n                : artist\n            )\n          );\n          \n          setEditArtistDialogOpen(false);\n        } else {\n          showNotification('error', response.data.error || 'Не удалось обновить данные артиста');\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при обновлении/создании артиста:', error);\n      showNotification('error', error.response?.data?.error || 'Не удалось выполнить операцию');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const openDeleteArtistDialog = (artist) => {\n    setSelectedArtist(artist);\n    setDeleteArtistDialogOpen(true);\n  };\n\n  const openEditArtistDialog = (artist) => {\n    setSelectedArtist(artist);\n    setEditArtistName(artist.name);\n    setEditArtistBio(artist.bio || '');\n    setEditArtistAvatar(null);\n    setEditArtistAvatarPreview(artist.avatar_url || '');\n    setEditArtistVerified(artist.verified || false);\n    setEditArtistDialogOpen(true);\n  };\n\n  const openCreateArtistDialog = () => {\n    setSelectedArtist(null);\n    setEditArtistName('');\n    setEditArtistBio('');\n    setEditArtistAvatar(null);\n    setEditArtistAvatarPreview('');\n    setEditArtistVerified(false);\n    setCreateArtistDialogOpen(true);\n  };\n\n  const renderArtists = () => {\n    if (!permissions.manage_artists && !permissions.delete_artists) {\n      return (\n        <Alert severity=\"warning\" sx={{ mt: 2 }}>\n          У вас нет прав на управление артистами\n        </Alert>\n      );\n    }\n    \n    return (\n      <>\n        <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <TextField \n            sx={{ flexGrow: 1, mr: 2 }}\n            placeholder=\"Поиск по артистам...\"\n            value={search.artists}\n            onChange={(e) => handleSearchChange('artists', e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: search.artists ? (\n                <InputAdornment position=\"end\">\n                  <IconButton size=\"small\" onClick={() => clearSearch('artists')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ) : null\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n          \n          {permissions.manage_artists && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<PersonAddIcon />}\n              onClick={openCreateArtistDialog}\n            >\n              Добавить артиста\n            </Button>\n          )}\n        </Box>\n\n        <Grid container spacing={3}>\n          {artists.map((artist, index) => (\n            <Grid \n              item \n              xs={12} sm={6} md={4} lg={3} \n              key={artist.id}\n              ref={index === artists.length - 1 ? lastArtistElementRef : null}\n            >\n              <Card \n                elevation={3}\n                sx={{ \n                  height: '100%', \n                  display: 'flex', \n                  flexDirection: 'column',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-5px)',\n                    boxShadow: 6\n                  },\n                  bgcolor: 'background.paper'\n                }}\n              >\n                <CardHeader\n                  avatar={\n                    <Badge\n                      overlap=\"circular\"\n                      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                      badgeContent={\n                        artist.verified ? (\n                          <Tooltip title=\"Верифицированный артист\">\n                            <Avatar \n                              sx={{ \n                                width: 15, \n                                height: 15, \n                                bgcolor: 'primary.main' \n                              }}\n                            >\n                              <CheckCircleIcon sx={{ width: 10, height: 10 }} />\n                            </Avatar>\n                          </Tooltip>\n                        ) : null\n                      }\n                    >\n                      <Avatar \n                        src={artist.avatar_url}\n                        alt={artist.name} \n                        sx={{ bgcolor: 'primary.main', width: 56, height: 56 }}\n                      >\n                        {artist.name?.charAt(0) || 'A'}\n                      </Avatar>\n                    </Badge>\n                  }\n                  title={\n                    <Tooltip title={artist.name}>\n                      <Typography \n                        variant=\"subtitle1\" \n                        sx={{ \n                          fontWeight: 'medium',\n                          maxWidth: '100%',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          whiteSpace: 'nowrap',\n                          lineHeight: 1.4\n                        }}\n                      >\n                        {artist.name}\n                      </Typography>\n                    </Tooltip>\n                  }\n                  subheader={\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {artist.tracks_count || \"0\"} треков\n                    </Typography>\n                  }\n                  sx={{ \n                    pb: 0,\n                    '& .MuiCardHeader-content': {\n                      overflow: 'hidden'\n                    }\n                  }}\n                />\n                <CardContent sx={{ flexGrow: 1, pt: 1, pb: 1 }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ \n                    overflow: 'hidden', \n                    textOverflow: 'ellipsis', \n                    display: '-webkit-box', \n                    WebkitLineClamp: 3, \n                    WebkitBoxOrient: 'vertical',\n                    height: '4.5rem',\n                    mb: 1\n                  }}>\n                    {artist.bio || 'Нет информации об артисте'}\n                  </Typography>\n                </CardContent>\n                <CardActions sx={{ justifyContent: 'space-between', flexWrap: 'wrap', px: 2, pb: 2, pt: 0 }}>\n                  <Box sx={{ display: 'flex', gap: 0.5 }}>\n                    <IconButton \n                      size=\"small\" \n                      color=\"primary\"\n                      onClick={() => window.open(`/artist/${artist.id}`, '_blank')}\n                      title=\"Открыть страницу артиста\"\n                    >\n                      <OpenInNewIcon fontSize=\"small\" />\n                    </IconButton>\n                    {permissions.manage_artists && (\n                      <IconButton \n                        onClick={() => openEditArtistDialog(artist)}\n                        aria-label=\"Редактировать артиста\"\n                        color=\"primary\"\n                        size=\"small\"\n                      >\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                    )}\n                    {permissions.manage_artists && (\n                      <IconButton \n                        onClick={() => openManageArtistTracksDialog(artist)}\n                        aria-label=\"Управление треками артиста\"\n                        color=\"primary\"\n                        size=\"small\"\n                      >\n                        <QueueMusicIcon fontSize=\"small\" />\n                      </IconButton>\n                    )}\n                    {permissions.delete_artists && (\n                      <IconButton \n                        onClick={() => openDeleteArtistDialog(artist)}\n                        aria-label=\"Удалить артиста\"\n                        color=\"error\"\n                        size=\"small\"\n                      >\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    )}\n                  </Box>\n                  <Chip \n                    icon={<AccessTimeIcon fontSize=\"small\" />} \n                    label={new Date(artist.created_at).toLocaleDateString()} \n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{ height: 24, '& .MuiChip-label': { px: 1, fontSize: '0.7rem' } }}\n                  />\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n        \n        {artists.length === 0 && !loading && (\n          <Box sx={{ textAlign: 'center', py: 4 }}>\n            <PersonAddIcon sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\" color=\"text.secondary\">\n              Артисты не найдены\n            </Typography>\n          </Box>\n        )}\n        \n        {loadingMore && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n            <CircularProgress size={30} />\n          </Box>\n        )}\n      </>\n    );\n  };\n\n  const openManageArtistTracksDialog = async (artist) => {\n    setSelectedArtist(artist);\n    setManageArtistTracksDialogOpen(true);\n    setLoadingTracks(true);\n    setArtistTracks([]);\n    setSearchableTracksList([]);\n    setTrackSearch('');\n    setSearchMode('artist');\n    setSelectedTracks([]);\n    \n    try {\n\n      const response = await axios.get(`/api/moderator/artists/${artist.id}/tracks`);\n      \n      if (response.data.success) {\n        setArtistTracks(response.data.tracks || []);\n      } else {\n        showNotification('error', response.data.error || 'Не удалось загрузить треки артиста');\n      }\n    } catch (error) {\n      console.error('Error loading artist tracks:', error);\n      showNotification('error', error.response?.data?.error || 'Не удалось загрузить треки артиста');\n    } finally {\n      setLoadingTracks(false);\n    }\n  };\n  \n  const searchUnassignedTracks = async () => {\n    if (!trackSearch || trackSearch.trim().length < 2) return;\n    \n    setLoadingTracks(true);\n    try {\n      let response;\n      \n      if (searchMode === 'artist') {\n\n        response = await axios.post('/api/moderator/artists/search-tracks', {\n          artist_name: trackSearch.trim(),\n          exact_match: false,\n          limit: 50\n        });\n      } else {\n\n        response = await axios.get(`/api/moderator/tracks?search=${encodeURIComponent(trackSearch.trim())}&per_page=50`);\n      }\n      \n      if (response.data.success) {\n        let tracks = [];\n        \n        if (searchMode === 'artist') {\n          tracks = response.data.tracks || [];\n        } else {\n          tracks = response.data.tracks || [];\n        }\n        \n\n        const artistTrackIds = new Set(artistTracks.map(track => track.id));\n        const unassignedTracks = tracks.filter(track => !artistTrackIds.has(track.id));\n        \n        setSearchableTracksList(unassignedTracks);\n      } else {\n        showNotification('error', response.data.error || 'Не удалось найти треки');\n      }\n    } catch (error) {\n      console.error('Error searching for unassigned tracks:', error);\n      showNotification('error', error.response?.data?.error || 'Не удалось выполнить поиск треков');\n    } finally {\n      setLoadingTracks(false);\n    }\n  };\n\n  const handleAssignTrackToArtist = async (trackId) => {\n    if (!selectedArtist) return;\n    \n    setLoadingTracks(true);\n    try {\n      const response = await axios.post(`/api/moderator/artists/${selectedArtist.id}/assign-track`, {\n        track_id: trackId\n      });\n      \n      if (response.data.success) {\n        showNotification('success', 'Трек успешно привязан к артисту');\n        \n\n        const assignedTrack = searchableTracksList.find(track => track.id === trackId);\n        if (assignedTrack) {\n          setArtistTracks(prev => [...prev, assignedTrack]);\n          setSearchableTracksList(prev => prev.filter(track => track.id !== trackId));\n          \n\n          setSelectedArtist(prev => ({\n            ...prev,\n            tracks_count: (parseInt(prev.tracks_count || 0) + 1).toString()\n          }));\n          \n\n          setArtists(prevArtists => prevArtists.map(artist => \n            artist.id === selectedArtist.id \n              ? { ...artist, tracks_count: (parseInt(artist.tracks_count || 0) + 1).toString() } \n              : artist\n          ));\n        }\n        \n\n        if (selectedTracks.includes(trackId)) {\n          setSelectedTracks(prev => prev.filter(id => id !== trackId));\n        }\n      } else {\n        showNotification('error', response.data.error || 'Не удалось привязать трек к артисту');\n      }\n    } catch (error) {\n      console.error('Error assigning track to artist:', error);\n      showNotification('error', error.response?.data?.error || 'Не удалось привязать трек к артисту');\n    } finally {\n      setLoadingTracks(false);\n    }\n  };\n  \n  const handleAssignSelectedTracks = async () => {\n    if (!selectedArtist || selectedTracks.length === 0) return;\n    \n    setLoadingTracks(true);\n    try {\n      const response = await axios.post('/api/moderator/tracks/verify-batch', {\n        track_ids: selectedTracks,\n        artist_id: selectedArtist.id\n      });\n      \n      if (response.data.success) {\n        showNotification('success', `${selectedTracks.length} треков успешно привязано к артисту`);\n        \n\n        const assignedTracks = searchableTracksList.filter(track => selectedTracks.includes(track.id));\n        if (assignedTracks.length > 0) {\n          setArtistTracks(prev => [...prev, ...assignedTracks]);\n          setSearchableTracksList(prev => prev.filter(track => !selectedTracks.includes(track.id)));\n          \n\n          setSelectedArtist(prev => ({\n            ...prev,\n            tracks_count: (parseInt(prev.tracks_count || 0) + assignedTracks.length).toString()\n          }));\n          \n\n          setArtists(prevArtists => prevArtists.map(artist => \n            artist.id === selectedArtist.id \n              ? { ...artist, tracks_count: (parseInt(artist.tracks_count || 0) + assignedTracks.length).toString() } \n              : artist\n          ));\n        }\n        \n\n        setSelectedTracks([]);\n      } else {\n        showNotification('error', response.data.error || 'Не удалось привязать треки к артисту');\n      }\n    } catch (error) {\n      console.error('Error assigning multiple tracks to artist:', error);\n      showNotification('error', error.response?.data?.error || 'Не удалось привязать треки к артисту');\n    } finally {\n      setLoadingTracks(false);\n    }\n  };\n  \n  const handleRemoveTrackFromArtist = async (trackId) => {\n    if (!selectedArtist) return;\n    \n    setLoadingTracks(true);\n    try {\n      const response = await axios.post(`/api/moderator/artists/${selectedArtist.id}/remove-track`, {\n        track_id: trackId\n      });\n      \n      if (response.data.success) {\n        showNotification('success', 'Трек успешно отвязан от артиста');\n        \n\n        setArtistTracks(prev => prev.filter(track => track.id !== trackId));\n        \n\n        setSelectedArtist(prev => ({\n          ...prev,\n          tracks_count: Math.max(0, parseInt(prev.tracks_count || 0) - 1).toString()\n        }));\n        \n\n        setArtists(prevArtists => prevArtists.map(artist => \n          artist.id === selectedArtist.id \n            ? { ...artist, tracks_count: Math.max(0, parseInt(artist.tracks_count || 0) - 1).toString() } \n            : artist\n        ));\n      } else {\n        showNotification('error', response.data.error || 'Не удалось отвязать трек от артиста');\n      }\n    } catch (error) {\n      console.error('Error removing track from artist:', error);\n      showNotification('error', error.response?.data?.error || 'Не удалось отвязать трек от артиста');\n    } finally {\n      setLoadingTracks(false);\n    }\n  };\n  \n  const handleToggleTrackSelection = (trackId) => {\n    setSelectedTracks(prev => \n      prev.includes(trackId) \n        ? prev.filter(id => id !== trackId) \n        : [...prev, trackId]\n    );\n  };\n  \n  const handleSelectAllSearchedTracks = () => {\n    if (searchableTracksList.length === 0) return;\n    \n    if (selectedTracks.length === searchableTracksList.length) {\n\n      setSelectedTracks([]);\n    } else {\n\n      setSelectedTracks(searchableTracksList.map(track => track.id));\n    }\n  };\n\n  const fetchAvailableMedals = async () => {\n    try {\n      setLoadingMedals(true);\n      console.log('Fetching available medals...');\n      const response = await axios.get('/api/moderator/medals/available');\n      console.log('Medals response:', response.data);\n      \n      if (response.data.success) {\n        setAvailableMedals(response.data.medals);\n        console.log('Set available medals:', response.data.medals);\n      } else {\n        throw new Error(response.data.error || 'Failed to fetch available medals');\n      }\n    } catch (error) {\n      console.error('Error fetching available medals:', error);\n      showNotification('error', 'Не удалось загрузить список доступных медалей');\n    } finally {\n      setLoadingMedals(false);\n    }\n  };\n\n  const openIssueMedalDialog = (user) => {\n    console.log('Opening medal dialog for user:', user);\n    setMedalUser(user);\n    setSelectedMedal('');\n    setMedalDescription('');\n    setIssueMedalDialogOpen(true);\n    fetchAvailableMedals();\n  };\n\n  const handleIssueMedal = async () => {\n    if (!medalUser || !selectedMedal) return;\n    \n    try {\n      setLoading(true);\n      \n      const response = await axios.post('/api/moderator/medals/issue', {\n        user_id: medalUser.id,\n        medal_name: selectedMedal,\n        description: medalDescription\n      });\n      \n      if (response.data.success) {\n        showNotification('success', `Медаль \"${selectedMedal}\" успешно выдана пользователю ${medalUser.username}`);\n        setIssueMedalDialogOpen(false);\n      } else {\n        throw new Error(response.data.error || 'Failed to issue medal');\n      }\n    } catch (error) {\n      console.error('Error issuing medal:', error);\n      showNotification('error', error.response?.data?.error || 'Не удалось выдать медаль');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const openDecorationMenu = (user) => {\n    setSelectedUserForDecorations(user);\n    setDecorationMenuOpen(true);\n  };\n\n  const handleCloseDecorationMenu = () => {\n    setDecorationMenuOpen(false);\n    setSelectedUserForDecorations(null);\n  };\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n      \n      <Paper sx={{ p: 2, mb: 3, display: 'flex', alignItems: 'center' }}>\n        <SecurityIcon sx={{ fontSize: 40, mr: 2, color: 'primary.main' }} />\n        <Box>\n          <Typography variant=\"h5\" component=\"h1\" gutterBottom>\n            Панель модератора\n          </Typography>\n          {moderatorData && (\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {moderatorData.moderator_level >= 3 ? 'Администратор' : 'Модератор'} • {new Date().toLocaleDateString()}\n            </Typography>\n          )}\n        </Box>\n      </Paper>\n      \n      \n      <Paper sx={{ p: 2 }}>\n        <Tabs \n          value={tabValue} \n          onChange={(e, newValue) => setTabValue(newValue)}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}\n        >\n          <Tab icon={<DashboardIcon />} label=\"Профиль\" />\n          <Tab icon={<PostAddIcon />} label=\"Посты\" disabled={!permissions.delete_posts} />\n          <Tab icon={<MusicNoteIcon />} label=\"Треки\" disabled={!permissions.delete_music} />\n          <Tab icon={<CommentIcon />} label=\"Комментарии\" disabled={!permissions.delete_comments} />\n          <Tab icon={<PersonIcon />} label=\"Пользователи\" disabled={!permissions.change_user_name && !permissions.change_username && !permissions.delete_avatar} />\n          <Tab icon={<BugReportIcon />} label=\"Баг-репорты\" disabled={!permissions.manage_bug_reports && !permissions.delete_bug_reports} />\n          <Tab icon={<EmojiEventsIcon />} label=\"Бейджики\" disabled={!permissions.edit_badges && !permissions.delete_badges} />\n          <Tab icon={<PersonAddIcon />} label=\"Артисты\" disabled={!permissions.manage_artists && !permissions.delete_artists} />\n        </Tabs>\n        \n        \n        <Box sx={{ mt: 2 }}>\n          {tabValue === 0 && renderProfile()}\n          {tabValue === 1 && renderPosts()}\n          {tabValue === 2 && renderTracks()}\n          {tabValue === 3 && renderComments()}\n          {tabValue === 4 && renderUsers()}\n          {tabValue === 5 && renderBugReports()}\n          {tabValue === 6 && renderBadges()}\n          {tabValue === 7 && renderArtists()}\n        </Box>\n      </Paper>\n      \n      \n      <StyledDialog open={deletePostDialogOpen} onClose={() => setDeletePostDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            backgroundColor: 'rgba(244, 67, 54, 0.15)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -30,\n              right: -30,\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(244,67,54,0.2) 0%, rgba(244,67,54,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"error.light\">\n              Удаление поста\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(244, 67, 54, 0.05)',\n              border: '1px solid rgba(244, 67, 54, 0.2)',\n              mb: 1\n            }}\n          >\n            <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" gutterBottom>\n              Вы действительно хотите удалить этот пост?\n            </Typography>\n            \n            {selectedPost && (\n              <Box sx={{ mt: 2, borderRadius: 1, bgcolor: 'rgba(0,0,0,0.3)', p: 2 }}>\n                <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">{selectedPost.content}</Typography>\n                {selectedPost.image && (\n                  <Box sx={{ mt: 1, maxWidth: '100%', maxHeight: 200, overflow: 'hidden', borderRadius: 1 }}>\n                    <img \n                      src={selectedPost.image.startsWith('/') ? selectedPost.image : `/static/uploads/post/${selectedPost.id}/${selectedPost.image}`}\n                      alt=\"Post attachment\" \n                      style={{ width: '100%', height: 'auto', borderRadius: '4px' }} \n                    />\n                  </Box>\n                )}\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setDeletePostDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleDeletePost} \n            color=\"error\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <DeleteIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #f44336 30%, #ff7961 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Удалить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={deleteTrackDialogOpen} onClose={() => setDeleteTrackDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            backgroundColor: 'rgba(244, 67, 54, 0.15)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -30,\n              right: -30,\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(244,67,54,0.2) 0%, rgba(244,67,54,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"error.light\">\n              Удаление трека\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(244, 67, 54, 0.05)',\n              border: '1px solid rgba(244, 67, 54, 0.2)',\n              mb: 1\n            }}\n          >\n            <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" gutterBottom>\n              Вы действительно хотите удалить этот трек?\n            </Typography>\n            \n            {selectedTrack && (\n              <Box sx={{ mt: 2, borderRadius: 1, bgcolor: 'rgba(0,0,0,0.3)', p: 2 }}>\n                <Typography variant=\"body1\" fontWeight=\"bold\" color=\"rgba(255,255,255,0.9)\">{selectedTrack.title}</Typography>\n                <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">Артист: {selectedTrack.artist}</Typography>\n                <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">Альбом: {selectedTrack.album || 'Нет данных'}</Typography>\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setDeleteTrackDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleDeleteTrack} \n            color=\"error\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <DeleteIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #f44336 30%, #ff7961 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Удалить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={deleteCommentDialogOpen} onClose={() => setDeleteCommentDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            backgroundColor: 'rgba(244, 67, 54, 0.15)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -30,\n              right: -30,\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(244,67,54,0.2) 0%, rgba(244,67,54,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"error.light\">\n              Удаление комментария\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(244, 67, 54, 0.05)',\n              border: '1px solid rgba(244, 67, 54, 0.2)',\n              mb: 1\n            }}\n          >\n            <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" gutterBottom>\n              Вы действительно хотите удалить этот комментарий?\n            </Typography>\n            \n            {selectedComment && (\n              <Box sx={{ mt: 2, borderRadius: 1, bgcolor: 'rgba(0,0,0,0.3)', p: 2 }}>\n                <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">{selectedComment.content}</Typography>\n                {selectedComment.image && (\n                  <Box sx={{ mt: 1, maxWidth: '100%', maxHeight: 200, overflow: 'hidden', borderRadius: 1 }}>\n                    <img \n                      src={selectedComment.image} \n                      alt=\"Comment attachment\" \n                      style={{ width: '100%', height: 'auto', borderRadius: '4px' }} \n                    />\n                  </Box>\n                )}\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setDeleteCommentDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleDeleteComment} \n            color=\"error\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <DeleteIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #f44336 30%, #ff7961 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Удалить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={deleteAvatarDialogOpen} onClose={() => setDeleteAvatarDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            backgroundColor: 'rgba(244, 67, 54, 0.15)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -30,\n              right: -30,\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(244,67,54,0.2) 0%, rgba(244,67,54,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"error.light\">\n              Удаление аватара пользователя\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(244, 67, 54, 0.05)',\n              border: '1px solid rgba(244, 67, 54, 0.2)',\n              mb: 1\n            }}\n          >\n            <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" gutterBottom>\n              Вы действительно хотите удалить аватар пользователя <Box component=\"span\" fontWeight=\"bold\" color=\"error.light\">{selectedUser?.name}</Box>?\n            </Typography>\n            \n            {selectedUser && selectedUser.photo && (\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                <Avatar \n                  src={`/static/uploads/avatar/${selectedUser.id}/${selectedUser.photo}`}\n                  alt={selectedUser.name}\n                  sx={{ width: 150, height: 150, border: '3px solid rgba(244, 67, 54, 0.3)' }}\n                />\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setDeleteAvatarDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleDeleteAvatar} \n            color=\"error\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <DeleteIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #f44336 30%, #ff7961 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Удалить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={editUserDialogOpen} onClose={() => setEditUserDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            background: 'linear-gradient(90deg, rgba(25,118,210,0.2) 0%, rgba(0,0,0,0) 100%)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -50,\n              right: -50,\n              width: 150,\n              height: 150,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(25,118,210,0.2) 0%, rgba(25,118,210,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <EditIcon color=\"primary\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary.light\">\n              Редактирование пользователя\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(25,118,210,0.05)',\n              border: '1px solid rgba(25,118,210,0.2)',\n              mb: 2\n            }}\n          >\n            {selectedUser && (\n              <Grid container spacing={2}>\n                <Grid item xs={12} display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\n                  <Avatar \n                    src={selectedUser.photo ? `/static/uploads/avatar/${selectedUser.id}/${selectedUser.photo}` : undefined}\n                    alt={selectedUser.name}\n                    sx={{ width: 60, height: 60, border: '2px solid rgba(25,118,210,0.3)' }}\n                  />\n                  <Box>\n                    <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" fontWeight=\"bold\">\n                      {selectedUser.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"rgba(255,255,255,0.6)\">\n                      ID: {selectedUser.id}\n                    </Typography>\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12}>\n                  <TextField\n                    autoFocus\n                    label=\"Имя пользователя\"\n                    type=\"text\"\n                    fullWidth\n                    value={editUserName}\n                    onChange={(e) => setEditUserName(e.target.value)}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                      sx: {\n                        borderRadius: 2,\n                        backgroundColor: 'rgba(255,255,255,0.05)',\n                        color: 'rgba(255,255,255,0.87)',\n                        '&:hover': {\n                          backgroundColor: 'rgba(255,255,255,0.1)',\n                        },\n                        '&.Mui-focused': {\n                          backgroundColor: 'rgba(25,118,210,0.15)',\n                          boxShadow: '0 0 0 2px rgba(25,118,210,0.3)'\n                        }\n                      }\n                    }}\n                    InputLabelProps={{\n                      sx: { color: 'rgba(255,255,255,0.7)' }\n                    }}\n                    sx={{\n                      '& .MuiOutlinedInput-notchedOutline': {\n                        borderColor: 'rgba(255,255,255,0.2)'\n                      },\n                      '&:hover .MuiOutlinedInput-notchedOutline': {\n                        borderColor: 'rgba(255,255,255,0.3)'\n                      },\n                      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n                        borderColor: 'primary.main'\n                      }\n                    }}\n                  />\n                </Grid>\n                \n                <Grid item xs={12}>\n                  <TextField\n                    label=\"Юзернейм\"\n                    type=\"text\"\n                    fullWidth\n                    value={editUsername}\n                    onChange={(e) => setEditUsername(e.target.value)}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    helperText=\"Допускаются только латинские буквы, цифры и символы: . _ -\"\n                    FormHelperTextProps={{\n                      sx: { color: 'rgba(255,255,255,0.5)' }\n                    }}\n                    InputProps={{\n                      sx: {\n                        borderRadius: 2,\n                        backgroundColor: 'rgba(255,255,255,0.05)',\n                        color: 'rgba(255,255,255,0.87)',\n                        '&:hover': {\n                          backgroundColor: 'rgba(255,255,255,0.1)',\n                        },\n                        '&.Mui-focused': {\n                          backgroundColor: 'rgba(25,118,210,0.15)',\n                          boxShadow: '0 0 0 2px rgba(25,118,210,0.3)'\n                        }\n                      }\n                    }}\n                    InputLabelProps={{\n                      sx: { color: 'rgba(255,255,255,0.7)' }\n                    }}\n                    sx={{\n                      '& .MuiOutlinedInput-notchedOutline': {\n                        borderColor: 'rgba(255,255,255,0.2)'\n                      },\n                      '&:hover .MuiOutlinedInput-notchedOutline': {\n                        borderColor: 'rgba(255,255,255,0.3)'\n                      },\n                      '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n                        borderColor: 'primary.main'\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setEditUserDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleUpdateUserInfo} \n            color=\"primary\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <SaveIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #1976d2 30%, #42a5f5 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Сохранить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={bugReportStatusDialogOpen} onClose={() => setBugReportStatusDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            background: 'linear-gradient(90deg, rgba(156,39,176,0.2) 0%, rgba(0,0,0,0) 100%)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -50,\n              right: -50,\n              width: 150,\n              height: 150,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(156,39,176,0.2) 0%, rgba(156,39,176,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <BugReportIcon sx={{ mr: 1.5, fontSize: 24, color: '#9c27b0' }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ color: '#ba68c8' }}>\n              Изменение статуса баг-репорта\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(156,39,176,0.05)',\n              border: '1px solid rgba(156,39,176,0.2)',\n              mb: 2\n            }}\n          >\n            {selectedBugReport && (\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" gutterBottom fontWeight=\"bold\">\n                    {selectedBugReport.subject}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"rgba(255,255,255,0.6)\" sx={{ mb: 2 }}>\n                    ID: {selectedBugReport.id} | Дата: {new Date(selectedBugReport.date).toLocaleString()}\n                  </Typography>\n                  <Divider sx={{ my: 2, bgcolor: 'rgba(156,39,176,0.2)' }} />\n                  <FormControl fullWidth sx={{ mt: 1 }}>\n                    <InputLabel id=\"bug-status-label\" sx={{ color: 'rgba(255,255,255,0.7)' }}>Статус</InputLabel>\n                    <Select\n                      labelId=\"bug-status-label\"\n                      value={bugReportStatus}\n                      onChange={(e) => setBugReportStatus(e.target.value)}\n                      sx={{\n                        borderRadius: 2,\n                        backgroundColor: 'rgba(255,255,255,0.05)',\n                        color: 'rgba(255,255,255,0.87)',\n                        '.MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'rgba(255,255,255,0.2)'\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'rgba(255,255,255,0.3)'\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: '#9c27b0'\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"Открыт\">Открыт</MenuItem>\n                      <MenuItem value=\"В работе\">В работе</MenuItem>\n                      <MenuItem value=\"Исправлен\">Исправлен</MenuItem>\n                      <MenuItem value=\"Закрыт\">Закрыт</MenuItem>\n                      <MenuItem value=\"Отклонён\">Отклонён</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            )}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setBugReportStatusDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleUpdateBugReportStatus} \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <SaveIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #9c27b0 30%, #ba68c8 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Сохранить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={editBadgeDialogOpen} onClose={() => setEditBadgeDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            background: 'linear-gradient(90deg, rgba(63,81,181,0.2) 0%, rgba(0,0,0,0) 100%)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -50,\n              right: -50,\n              width: 150,\n              height: 150,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(63,81,181,0.2) 0%, rgba(63,81,181,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1 }}>\n            <Typography variant=\"h5\" fontWeight=\"bold\" color=\"primary.light\">\n              Редактирование бейджика\n            </Typography>\n            <Typography variant=\"caption\" color=\"rgba(255,255,255,0.6)\">\n              Измените параметры бейджика и сохраните изменения\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 3, bgcolor: 'transparent' }}>\n          <Grid container spacing={2.5}>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                label=\"Название бейджика\"\n                type=\"text\"\n                fullWidth\n                value={editBadgeName}\n                onChange={(e) => setEditBadgeName(e.target.value)}\n                variant=\"outlined\"\n                size=\"small\"\n                InputProps={{\n                  sx: {\n                    borderRadius: 2,\n                    backgroundColor: 'rgba(255,255,255,0.05)',\n                    color: 'rgba(255,255,255,0.87)',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255,255,255,0.1)',\n                    },\n                    '&.Mui-focused': {\n                      backgroundColor: 'rgba(63,81,181,0.15)',\n                      boxShadow: '0 0 0 2px rgba(63, 81, 181, 0.3)'\n                    }\n                  }\n                }}\n                InputLabelProps={{\n                  sx: { color: 'rgba(255,255,255,0.7)' }\n                }}\n                sx={{\n                  '& .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.2)'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.3)'\n                  },\n                  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'primary.main'\n                  }\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <TextField\n                label=\"Описание\"\n                type=\"text\"\n                fullWidth\n                multiline\n                rows={2}\n                value={editBadgeDescription}\n                onChange={(e) => setEditBadgeDescription(e.target.value)}\n                variant=\"outlined\"\n                size=\"small\"\n                helperText=\"Кратко опишите бейджик\"\n                FormHelperTextProps={{\n                  sx: { color: 'rgba(255,255,255,0.5)' }\n                }}\n                InputProps={{\n                  sx: {\n                    borderRadius: 2,\n                    backgroundColor: 'rgba(255,255,255,0.05)',\n                    color: 'rgba(255,255,255,0.87)',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255,255,255,0.1)',\n                    },\n                    '&.Mui-focused': {\n                      backgroundColor: 'rgba(63,81,181,0.15)',\n                      boxShadow: '0 0 0 2px rgba(63, 81, 181, 0.3)'\n                    }\n                  }\n                }}\n                InputLabelProps={{\n                  sx: { color: 'rgba(255,255,255,0.7)' }\n                }}\n                sx={{\n                  '& .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.2)'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.3)'\n                  },\n                  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'primary.main'\n                  }\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <TextField\n                label=\"Цена (баллы)\"\n                type=\"number\"\n                fullWidth\n                value={editBadgePrice}\n                onChange={(e) => setEditBadgePrice(e.target.value)}\n                variant=\"outlined\"\n                size=\"small\"\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><PaidIcon color=\"primary\" /></InputAdornment>,\n                  sx: {\n                    borderRadius: 2,\n                    backgroundColor: 'rgba(255,255,255,0.05)',\n                    color: 'rgba(255,255,255,0.87)',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255,255,255,0.1)',\n                    },\n                    '&.Mui-focused': {\n                      backgroundColor: 'rgba(63,81,181,0.15)',\n                      boxShadow: '0 0 0 2px rgba(63, 81, 181, 0.3)'\n                    }\n                  }\n                }}\n                InputLabelProps={{\n                  sx: { color: 'rgba(255,255,255,0.7)' }\n                }}\n                sx={{\n                  '& .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.2)'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.3)'\n                  },\n                  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'primary.main'\n                  }\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: 1.5, \n                  display: 'flex', \n                  alignItems: 'center', \n                  justifyContent: 'space-between',\n                  borderRadius: 2,\n                  border: '1px solid rgba(255, 255, 255, 0.15)',\n                  backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                  height: '100%'\n                }}\n              >\n                <Typography variant=\"subtitle1\" color=\"rgba(255, 255, 255, 0.87)\">Активен</Typography>\n                <Switch \n                  checked={editBadgeActive}\n                  onChange={(e) => setEditBadgeActive(e.target.checked)}\n                  color=\"primary\"\n                  sx={{ \n                    '& .MuiSwitch-switchBase.Mui-checked': {\n                      color: '#4caf50',\n                      '&:hover': {\n                        backgroundColor: 'rgba(76, 175, 80, 0.08)',\n                      },\n                    },\n                    '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n                      backgroundColor: '#4caf50',\n                    },\n                  }}\n                />\n              </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Box \n                sx={{ \n                  display: 'flex', \n                  flexDirection: 'column', \n                  alignItems: 'center',\n                  p: 3,\n                  borderRadius: 2,\n                  border: '1px dashed rgba(255, 255, 255, 0.2)',\n                  backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                  position: 'relative',\n                  overflow: 'hidden'\n                }}\n              >\n                <Box sx={{ position: 'relative', zIndex: 1, width: '100%', textAlign: 'center' }}>\n                  {editBadgeImagePreview ? (\n                    <>\n                      <Box sx={{ mb: 2, position: 'relative', display: 'inline-block' }}>\n                        <img \n                          src={editBadgeImagePreview} \n                          alt=\"Предпросмотр\"\n                          style={{ \n                            maxWidth: '100%', \n                            maxHeight: 150, \n                            borderRadius: 8,\n                            boxShadow: '0 4px 12px rgba(0,0,0,0.3)'\n                          }}\n                        />\n                        <Fade in timeout={500}>\n                          <Box \n                            sx={{ \n                              position: 'absolute', \n                              top: -8, \n                              right: -8, \n                              background: 'rgba(0,0,0,0.5)',\n                              borderRadius: '50%',\n                              boxShadow: '0 2px 8px rgba(0,0,0,0.3)'\n                            }}\n                          >\n                            <IconButton \n                              size=\"small\" \n                              color=\"error\" \n                              onClick={() => {\n                                setEditBadgeImage(null);\n                                setEditBadgeImagePreview('');\n                              }}\n                            >\n                              <DeleteIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Box>\n                        </Fade>\n                      </Box>\n                    </>\n                  ) : (\n                    <Typography variant=\"body2\" color=\"rgba(255,255,255,0.6)\" align=\"center\" sx={{ mb: 2 }}>\n                      Загрузите новое SVG или GIF изображение бейджика\n                    </Typography>\n                  )}\n                  \n                  <Button \n                    component=\"label\" \n                    variant=\"outlined\" \n                    startIcon={<FileUploadIcon />}\n                    sx={{ \n                      borderRadius: 8,\n                      py: 0.5,\n                      px: 2,\n                      background: 'rgba(63,81,181,0.1)',\n                      borderColor: 'rgba(63, 81, 181, 0.5)',\n                      color: 'rgba(255,255,255,0.87)',\n                      '&:hover': {\n                        background: 'rgba(63,81,181,0.2)',\n                        borderColor: 'primary.main',\n                      }\n                    }}\n                  >\n                    Загрузить SVG/GIF\n                    <input\n                      type=\"file\"\n                      accept=\".svg,.gif\"\n                      hidden\n                      onChange={handleBadgeImageChange}\n                    />\n                  </Button>\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setEditBadgeDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleUpdateBadge} \n            color=\"primary\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <SaveIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #3f51b5 30%, #5c6bc0 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Сохранить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={deleteBadgeDialogOpen} onClose={() => setDeleteBadgeDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            backgroundColor: 'rgba(244, 67, 54, 0.15)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -30,\n              right: -30,\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(244,67,54,0.2) 0%, rgba(244,67,54,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"error.light\">\n              Удаление бейджика\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(244, 67, 54, 0.05)',\n              border: '1px solid rgba(244, 67, 54, 0.2)',\n              mb: 1\n            }}\n          >\n            <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" gutterBottom>\n              Вы действительно хотите удалить бейджик <Box component=\"span\" fontWeight=\"bold\" color=\"error.light\">\"{selectedBadge?.name}\"</Box>?\n            </Typography>\n            \n            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n              Это действие <Box component=\"span\" fontWeight=\"bold\" color=\"error.light\">нельзя отменить</Box>. \n              При удалении бейджика будут также удалены:\n            </Typography>\n            \n            <Box component=\"ul\" sx={{ mt: 1, pl: 2, mb: 0 }}>\n              <Typography component=\"li\" variant=\"body2\" color=\"rgba(255,255,255,0.6)\">\n                Все достижения пользователей, связанные с этим бейджиком\n              </Typography>\n              <Typography component=\"li\" variant=\"body2\" color=\"rgba(255,255,255,0.6)\">\n                Все записи о покупках этого бейджика\n              </Typography>\n              <Typography component=\"li\" variant=\"body2\" color=\"rgba(255,255,255,0.6)\">\n                SVG-файл изображения бейджика\n              </Typography>\n            </Box>\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setDeleteBadgeDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleDeleteBadge} \n            color=\"error\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <DeleteIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #f44336 30%, #ff7961 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Удалить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={deleteArtistDialogOpen} onClose={() => setDeleteArtistDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            backgroundColor: 'rgba(244, 67, 54, 0.15)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -30,\n              right: -30,\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(244,67,54,0.2) 0%, rgba(244,67,54,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"error.light\">\n              Удаление артиста\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(244, 67, 54, 0.05)',\n              border: '1px solid rgba(244, 67, 54, 0.2)',\n              mb: 1\n            }}\n          >\n            <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" gutterBottom>\n              Вы действительно хотите удалить артиста <Box component=\"span\" fontWeight=\"bold\" color=\"error.light\">\"{selectedArtist?.name}\"</Box>?\n            </Typography>\n            \n            <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\" sx={{ mb: 2 }}>\n              Это действие удалит всю информацию об артисте из системы. \n              Треки, связанные с этим артистом, станут недоступны для прослушивания.\n            </Typography>\n            \n            {selectedArtist && (\n              <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n                <Avatar \n                  src={selectedArtist.avatar ? `/static/uploads/artists/${selectedArtist.id}/${selectedArtist.avatar}` : undefined}\n                  sx={{ width: 60, height: 60, mr: 2 }}\n                />\n                <Box>\n                  <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.9)\">\n                    {selectedArtist.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"rgba(255,255,255,0.6)\">\n                    {selectedArtist.tracks_count || 0} треков • {selectedArtist.is_verified ? 'Верифицирован' : 'Не верифицирован'}\n                  </Typography>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setDeleteArtistDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleDeleteArtist} \n            color=\"error\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <DeleteIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #f44336 30%, #ff7961 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Удалить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={editArtistDialogOpen} onClose={() => setEditArtistDialogOpen(false)} fullWidth maxWidth=\"sm\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            background: 'linear-gradient(90deg, rgba(63,81,181,0.2) 0%, rgba(0,0,0,0) 100%)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -50,\n              right: -50,\n              width: 150,\n              height: 150,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(63,81,181,0.2) 0%, rgba(63,81,181,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1 }}>\n            <Typography variant=\"h5\" fontWeight=\"bold\" color=\"primary.light\">\n              Редактирование артиста\n            </Typography>\n            <Typography variant=\"caption\" color=\"rgba(255,255,255,0.6)\">\n              Измените данные артиста и сохраните изменения\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 3, bgcolor: 'transparent' }}>\n          <Grid container spacing={2.5}>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                label=\"Имя артиста\"\n                type=\"text\"\n                fullWidth\n                value={editArtistName}\n                onChange={(e) => setEditArtistName(e.target.value)}\n                variant=\"outlined\"\n                size=\"small\"\n                InputProps={{\n                  sx: {\n                    borderRadius: 2,\n                    backgroundColor: 'rgba(255,255,255,0.05)',\n                    color: 'rgba(255,255,255,0.87)',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255,255,255,0.1)',\n                    },\n                    '&.Mui-focused': {\n                      backgroundColor: 'rgba(63,81,181,0.15)',\n                      boxShadow: '0 0 0 2px rgba(63, 81, 181, 0.3)'\n                    }\n                  }\n                }}\n                InputLabelProps={{\n                  sx: { color: 'rgba(255,255,255,0.7)' }\n                }}\n                sx={{\n                  '& .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.2)'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.3)'\n                  },\n                  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'primary.main'\n                  }\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <TextField\n                label=\"Биография\"\n                type=\"text\"\n                fullWidth\n                multiline\n                rows={4}\n                value={editArtistBio}\n                onChange={(e) => setEditArtistBio(e.target.value)}\n                variant=\"outlined\"\n                size=\"small\"\n                helperText=\"Краткая информация об артисте\"\n                FormHelperTextProps={{\n                  sx: { color: 'rgba(255,255,255,0.5)' }\n                }}\n                InputProps={{\n                  sx: {\n                    borderRadius: 2,\n                    backgroundColor: 'rgba(255,255,255,0.05)',\n                    color: 'rgba(255,255,255,0.87)',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255,255,255,0.1)',\n                    },\n                    '&.Mui-focused': {\n                      backgroundColor: 'rgba(63,81,181,0.15)',\n                      boxShadow: '0 0 0 2px rgba(63, 81, 181, 0.3)'\n                    }\n                  }\n                }}\n                InputLabelProps={{\n                  sx: { color: 'rgba(255,255,255,0.7)' }\n                }}\n                sx={{\n                  '& .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.2)'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(255,255,255,0.3)'\n                  },\n                  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'primary.main'\n                  }\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: 1.5, \n                  display: 'flex', \n                  alignItems: 'center', \n                  justifyContent: 'space-between',\n                  borderRadius: 2,\n                  border: '1px solid rgba(255, 255, 255, 0.15)',\n                  backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <VerifiedUserIcon \n                    color={editArtistVerified ? \"primary\" : \"disabled\"} \n                    sx={{ mr: 1.5 }} \n                  />\n                  <Typography variant=\"subtitle1\" color=\"rgba(255, 255, 255, 0.87)\">\n                    Верифицированный артист\n                  </Typography>\n                </Box>\n                <Switch \n                  checked={editArtistVerified}\n                  onChange={(e) => setEditArtistVerified(e.target.checked)}\n                  color=\"primary\"\n                  sx={{ \n                    '& .MuiSwitch-switchBase.Mui-checked': {\n                      color: '#3f51b5',\n                      '&:hover': {\n                        backgroundColor: 'rgba(63, 81, 181, 0.08)',\n                      },\n                    },\n                    '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n                      backgroundColor: '#3f51b5',\n                    },\n                  }}\n                />\n              </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Box \n                sx={{ \n                  display: 'flex', \n                  flexDirection: 'column', \n                  alignItems: 'center',\n                  p: 3,\n                  borderRadius: 2,\n                  border: '1px dashed rgba(255, 255, 255, 0.2)',\n                  backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                  position: 'relative',\n                  overflow: 'hidden'\n                }}\n              >\n                <Box sx={{ position: 'relative', zIndex: 1, width: '100%', textAlign: 'center' }}>\n                  {editArtistAvatarPreview ? (\n                    <>\n                      <Box sx={{ mb: 2, position: 'relative', display: 'inline-block' }}>\n                        <Avatar \n                          src={editArtistAvatarPreview} \n                          alt=\"Предпросмотр\"\n                          sx={{ \n                            width: 150, \n                            height: 150, \n                            borderRadius: '50%',\n                            boxShadow: '0 4px 12px rgba(0,0,0,0.3)'\n                          }}\n                        />\n                        <Fade in timeout={500}>\n                          <Box \n                            sx={{ \n                              position: 'absolute', \n                              top: -8, \n                              right: -8, \n                              background: 'rgba(0,0,0,0.5)',\n                              borderRadius: '50%',\n                              boxShadow: '0 2px 8px rgba(0,0,0,0.3)'\n                            }}\n                          >\n                            <IconButton \n                              size=\"small\" \n                              color=\"error\" \n                              onClick={() => {\n                                setEditArtistAvatar(null);\n                                setEditArtistAvatarPreview('');\n                              }}\n                            >\n                              <DeleteIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Box>\n                        </Fade>\n                      </Box>\n                    </>\n                  ) : (\n                    <Typography variant=\"body2\" color=\"rgba(255,255,255,0.6)\" align=\"center\" sx={{ mb: 2 }}>\n                      Загрузите новое изображение артиста\n                    </Typography>\n                  )}\n                  \n                  <Button \n                    component=\"label\" \n                    variant=\"outlined\" \n                    startIcon={<FileUploadIcon />}\n                    sx={{ \n                      borderRadius: 8,\n                      py: 0.5,\n                      px: 2,\n                      background: 'rgba(63,81,181,0.1)',\n                      borderColor: 'rgba(63, 81, 181, 0.5)',\n                      color: 'rgba(255,255,255,0.87)',\n                      '&:hover': {\n                        background: 'rgba(63,81,181,0.2)',\n                        borderColor: 'primary.main',\n                      }\n                    }}\n                  >\n                    Загрузить изображение\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      hidden\n                      onChange={handleArtistImageChange}\n                    />\n                  </Button>\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setEditArtistDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleUpdateArtist} \n            color=\"primary\" \n            variant=\"contained\"\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : <SaveIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #3f51b5 30%, #5c6bc0 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Сохранить\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      \n      <StyledDialog open={manageArtistTracksDialogOpen} onClose={() => setManageArtistTracksDialogOpen(false)} fullWidth maxWidth=\"md\">\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            background: 'linear-gradient(90deg, rgba(63,81,181,0.2) 0%, rgba(0,0,0,0) 100%)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -50,\n              right: -50,\n              width: 150,\n              height: 150,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(63,81,181,0.2) 0%, rgba(63,81,181,0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <LibraryMusicIcon sx={{ mr: 1.5, fontSize: 28, color: 'primary.light' }} />\n            <Box>\n              <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary.light\">\n                Управление треками артиста\n              </Typography>\n              {selectedArtist && (\n                <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                  {selectedArtist.name} ({artistTracks.length} треков)\n                </Typography>\n              )}\n            </Box>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 0, display: 'flex', flexDirection: 'column', height: '60vh' }}>\n          <Box sx={{ p: 2, borderBottom: '1px solid rgba(255,255,255,0.1)' }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Треки артиста\n            </Typography>\n            \n            {artistTracks.length > 0 ? (\n              <TableContainer component={Paper} elevation={0} sx={{ bgcolor: 'rgba(0,0,0,0.2)', maxHeight: 250, overflow: 'auto' }}>\n                <Table size=\"small\" stickyHeader>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Название</TableCell>\n                      <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>Альбом</TableCell>\n                      <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Длительность</TableCell>\n                      <TableCell align=\"right\">Действия</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {artistTracks.map(track => (\n                      <TableRow key={track.id}>\n                        <TableCell>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Avatar\n                              variant=\"rounded\"\n                              src={track.cover_path}\n                              sx={{ width: 32, height: 32, mr: 1 }}\n                            >\n                              <AudiotrackIcon />\n                            </Avatar>\n                            <Box>\n                              <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                                {track.title}\n                              </Typography>\n                              <Typography variant=\"caption\" color=\"text.secondary\">\n                                {track.artist}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                        <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>{track.album || '—'}</TableCell>\n                        <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>\n                          {Math.floor(track.duration / 60)}:{(track.duration % 60).toString().padStart(2, '0')}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton \n                            color=\"error\" \n                            size=\"small\" \n                            onClick={() => handleRemoveTrackFromArtist(track.id)}\n                            disabled={loadingTracks}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            ) : (\n              <Box sx={{ \n                display: 'flex', \n                flexDirection: 'column', \n                alignItems: 'center', \n                justifyContent: 'center',\n                py: 3,\n                bgcolor: 'rgba(0,0,0,0.2)',\n                borderRadius: 1\n              }}>\n                <AudiotrackIcon sx={{ fontSize: 40, color: 'text.secondary', mb: 1 }} />\n                <Typography color=\"text.secondary\">\n                  У артиста еще нет привязанных треков\n                </Typography>\n              </Box>\n            )}\n          </Box>\n          \n          <Divider sx={{ my: 2 }} />\n          \n          <Box sx={{ p: 2, flexGrow: 1 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Добавление треков\n            </Typography>\n            \n            <Box sx={{ display: 'flex', mb: 2, flexWrap: 'wrap', gap: 1 }}>\n              <FormControl sx={{ minWidth: 120 }}>\n                <InputLabel id=\"search-mode-label\">Искать по</InputLabel>\n                <Select\n                  labelId=\"search-mode-label\"\n                  value={searchMode}\n                  onChange={(e) => setSearchMode(e.target.value)}\n                  size=\"small\"\n                  sx={{ minWidth: 130 }}\n                >\n                  <MenuItem value=\"artist\">Имени артиста</MenuItem>\n                  <MenuItem value=\"title\">Названию трека</MenuItem>\n                </Select>\n              </FormControl>\n              \n              <TextField \n                size=\"small\"\n                placeholder=\"Поиск треков...\"\n                value={trackSearch}\n                onChange={(e) => setTrackSearch(e.target.value)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  )\n                }}\n                sx={{ flexGrow: 1 }}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    searchUnassignedTracks();\n                  }\n                }}\n              />\n              <Button \n                variant=\"contained\" \n                onClick={searchUnassignedTracks}\n                disabled={loadingTracks || !trackSearch || trackSearch.trim().length < 2}\n                size=\"small\"\n              >\n                {loadingTracks ? <CircularProgress size={24} /> : 'Поиск'}\n              </Button>\n            </Box>\n            \n            {searchableTracksList.length > 0 ? (\n              <>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Найдено треков: {searchableTracksList.length}\n                  </Typography>\n                  \n                  <Box>\n                    <Button \n                      size=\"small\"\n                      variant=\"outlined\"\n                      onClick={handleSelectAllSearchedTracks}\n                      disabled={searchableTracksList.length === 0}\n                    >\n                      {selectedTracks.length === searchableTracksList.length ? 'Снять выделение' : 'Выбрать все'}\n                    </Button>\n                    <Button \n                      size=\"small\"\n                      variant=\"contained\"\n                      startIcon={<AddIcon />}\n                      onClick={handleAssignSelectedTracks}\n                      disabled={selectedTracks.length === 0}\n                      color=\"success\"\n                      sx={{ ml: 1 }}\n                    >\n                      Добавить выбранные ({selectedTracks.length})\n                    </Button>\n                  </Box>\n                </Box>\n                \n                <TableContainer component={Paper} elevation={0} sx={{ bgcolor: 'rgba(0,0,0,0.2)', maxHeight: 300, overflow: 'auto' }}>\n                  <Table size=\"small\" stickyHeader>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox \n                            checked={selectedTracks.length === searchableTracksList.length && searchableTracksList.length > 0}\n                            indeterminate={selectedTracks.length > 0 && selectedTracks.length < searchableTracksList.length}\n                            onChange={handleSelectAllSearchedTracks}\n                          />\n                        </TableCell>\n                        <TableCell>Название</TableCell>\n                        <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>Альбом</TableCell>\n                        <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>Длительность</TableCell>\n                        <TableCell align=\"right\">Добавить</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {searchableTracksList.map(track => (\n                        <TableRow key={track.id}>\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox \n                              checked={selectedTracks.includes(track.id)}\n                              onChange={() => handleToggleTrackSelection(track.id)}\n                            />\n                          </TableCell>\n                          <TableCell>\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                              <Avatar\n                                variant=\"rounded\"\n                                src={track.cover_path}\n                                sx={{ width: 32, height: 32, mr: 1 }}\n                              >\n                                <AudiotrackIcon />\n                              </Avatar>\n                              <Box>\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                                  {track.title}\n                                </Typography>\n                                <Typography variant=\"caption\" color=\"text.secondary\">\n                                  {track.artist}\n                                </Typography>\n                              </Box>\n                            </Box>\n                          </TableCell>\n                          <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>{track.album || '—'}</TableCell>\n                          <TableCell sx={{ display: { xs: 'none', md: 'table-cell' } }}>\n                            {track.duration ? `${Math.floor(track.duration / 60)}:${(track.duration % 60).toString().padStart(2, '0')}` : '—'}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <Button\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={() => handleAssignTrackToArtist(track.id)}\n                              disabled={loadingTracks}\n                              startIcon={<AddIcon />}\n                            >\n                              Добавить\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </>\n            ) : searchableTracksList.length === 0 && trackSearch && !loadingTracks ? (\n              <Box sx={{ \n                display: 'flex', \n                flexDirection: 'column', \n                alignItems: 'center', \n                justifyContent: 'center',\n                py: 3,\n                bgcolor: 'rgba(0,0,0,0.2)',\n                borderRadius: 1\n              }}>\n                <SearchIcon sx={{ fontSize: 40, color: 'text.secondary', mb: 1 }} />\n                <Typography color=\"text.secondary\">\n                  Не найдено треков для привязки\n                </Typography>\n              </Box>\n            ) : null}\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setManageArtistTracksDialogOpen(false)}\n            variant=\"contained\"\n          >\n            Закрыть\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      {/* Medal issuing dialog */}\n      <StyledDialog \n        open={issueMedalDialogOpen} \n        onClose={() => setIssueMedalDialogOpen(false)} \n        maxWidth=\"md\"\n        fullWidth\n      >\n        <Box \n          sx={{\n            position: 'relative',\n            overflow: 'hidden',\n            p: 2,\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n            backgroundColor: 'rgba(25, 118, 210, 0.15)'\n          }}\n        >\n          <Box \n            sx={{ \n              position: 'absolute',\n              top: -30,\n              right: -30,\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(25, 118, 210, 0.2) 0%, rgba(25, 118, 210, 0) 70%)',\n              zIndex: 0\n            }} \n          />\n          <Box sx={{ position: 'relative', zIndex: 1, display: 'flex', alignItems: 'center' }}>\n            <EmojiEventsOutlinedIcon color=\"primary\" sx={{ mr: 1.5, fontSize: 24 }} />\n            <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary.light\">\n              Выдача медали\n            </Typography>\n          </Box>\n        </Box>\n        \n        <DialogContent sx={{ p: 3, pt: 2.5, bgcolor: 'transparent' }}>\n          <Box \n            sx={{ \n              position: 'relative',\n              p: 2.5,\n              borderRadius: 2,\n              backgroundColor: 'rgba(25,118,210,0.05)',\n              border: '1px solid rgba(25,118,210,0.2)',\n              mb: 2\n            }}\n          >\n            {medalUser && (\n              <Grid container spacing={2}>\n                <Grid item xs={12} display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\n                  <Avatar \n                    src={medalUser.photo ? `/static/uploads/avatar/${medalUser.id}/${medalUser.photo}` : undefined}\n                    alt={medalUser.name}\n                    sx={{ width: 60, height: 60, border: '2px solid rgba(25,118,210,0.3)' }}\n                  />\n                  <Box>\n                    <Typography variant=\"subtitle1\" color=\"rgba(255,255,255,0.87)\" fontWeight=\"bold\">\n                      {medalUser.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"rgba(255,255,255,0.6)\">\n                      @{medalUser.username}\n                    </Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            )}\n          </Box>\n          \n          <Box sx={{ mt: 3 }}>\n            <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\n              Выберите медаль\n            </Typography>\n            \n            {loadingMedals ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                <CircularProgress />\n              </Box>\n            ) : availableMedals.length > 0 ? (\n              <Grid container spacing={2}>\n                {availableMedals.map((medal) => (\n                  <Grid item xs={6} sm={4} md={3} key={medal.name}>\n                    <Card \n                      sx={{ \n                        cursor: 'pointer',\n                        transition: 'all 0.2s',\n                        transform: selectedMedal === medal.name ? 'scale(1.05)' : 'scale(1)',\n                        border: selectedMedal === medal.name ? '2px solid #1976d2' : 'none',\n                        '&:hover': {\n                          transform: 'scale(1.05)',\n                          boxShadow: '0 4px 20px rgba(0,0,0,0.2)'\n                        }\n                      }}\n                      onClick={() => {\n                        console.log('Selected medal:', medal);\n                        setSelectedMedal(medal.name);\n                        setMedalDescription(medal.description || '');\n                      }}\n                    >\n                      <CardMedia\n                        component=\"img\"\n                        height=\"120\"\n                        image={medal.image_path}\n                        alt={medal.name}\n                        sx={{ objectFit: 'contain', p: 1 }}\n                      />\n                      <CardContent sx={{ textAlign: 'center', p: 1 }}>\n                        <Typography variant=\"body2\" noWrap>\n                          {medal.name}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 0.5 }}>\n                          {medal.achievement}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            ) : (\n              <Box sx={{ \n                display: 'flex', \n                flexDirection: 'column', \n                alignItems: 'center', \n                justifyContent: 'center',\n                py: 3,\n                bgcolor: 'rgba(0,0,0,0.2)',\n                borderRadius: 1\n              }}>\n                <EmojiEventsOutlinedIcon sx={{ fontSize: 40, color: 'text.secondary', mb: 1 }} />\n                <Typography color=\"text.secondary\">\n                  Нет доступных медалей\n                </Typography>\n              </Box>\n            )}\n            \n            <TextField\n              fullWidth\n              label=\"Описание медали\"\n              value={medalDescription}\n              onChange={(e) => setMedalDescription(e.target.value)}\n              margin=\"normal\"\n              variant=\"outlined\"\n              multiline\n              rows={2}\n              disabled={!selectedMedal}\n            />\n          </Box>\n        </DialogContent>\n        \n        <DialogActions sx={{ p: 2, px: 3, justifyContent: 'space-between', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <Button \n            onClick={() => setIssueMedalDialogOpen(false)} \n            variant=\"outlined\"\n            color=\"inherit\"\n            sx={{ \n              borderRadius: 8,\n              px: 3,\n              borderColor: 'rgba(255,255,255,0.2)',\n              color: 'rgba(255,255,255,0.7)',\n              '&:hover': {\n                borderColor: 'rgba(255,255,255,0.4)',\n                background: 'rgba(255,255,255,0.05)'\n              }\n            }}\n          >\n            Отмена\n          </Button>\n          <Button \n            onClick={handleIssueMedal} \n            color=\"primary\" \n            variant=\"contained\"\n            disabled={loading || !selectedMedal}\n            startIcon={loading ? <CircularProgress size={20} /> : <EmojiEventsOutlinedIcon />}\n            sx={{ \n              borderRadius: 8,\n              px: 4,\n              py: 0.75,\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n              background: 'linear-gradient(45deg, #1976d2 30%, #42a5f5 90%)',\n              '&:hover': {\n                boxShadow: '0 6px 16px rgba(0, 0, 0, 0.5)',\n              }\n            }}\n          >\n            Выдать медаль\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n      \n      <DecorationMenu\n        open={decorationMenuOpen}\n        onClose={handleCloseDecorationMenu}\n        userId={selectedUserForDecorations?.id}\n        username={selectedUserForDecorations?.username}\n      />\n      \n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\n        sx={snackbarStyle}\n      >\n        <Alert \n          onClose={() => setSnackbar(prev => ({ ...prev, open: false }))} \n          severity={snackbar.severity}\n          variant=\"filled\"\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default ModeratorPage;"],"names":["_interopRequireDefault","require$$0","Object","defineProperty","LibraryMusic","value","default","_createSvgIcon","_jsxRuntime","require$$2","jsx","d","AccessTime","OpenInNew","Paid","FileUpload","Dashboard","DoNotDisturb","Audiotrack","EmojiEventsOutlined","Stars","StyledPaper","styled","Paper","theme","padding","spacing","marginBottom","backgroundColor","palette","background","paper","borderRadius","shape","backgroundImage","border","DecorationPreview","Box","decoration","includes","isImage","position","width","height","overflow","backgroundSize","backgroundPosition","display","alignItems","justifyContent","DecorationItem","right","maxHeight","opacity","pointerEvents","DecorationMenu","open","onClose","userId","username","loading","setLoading","useState","availableDecorations","setAvailableDecorations","userDecorations","setUserDecorations","error","setError","fetchDecorations","async","availableRes","userRes","Promise","all","fetch","ok","Error","availableData","json","userData","decorations","map","item","is_active","user_decoration_id","id","err","message","useEffect","handleGrantDecoration","renderDecorationItem","isUserDecoration","userHasDecoration","some","ud","find","children","item_path","path","styles","split","styleObj","reduce","acc","style","key","s","trim","src","alt","jsxs","sx","Typography","variant","name","Tooltip","title","IconButton","onClick","decorationId","method","handleRevokeDecoration","color","size","DeleteIcon","headers","body","JSON","stringify","decoration_id","disabled","CheckCircleIcon","AddIcon","Dialog","maxWidth","fullWidth","PaperProps","DialogTitle","DialogContent","p","CircularProgress","Grid","container","xs","md","gutterBottom","length","DialogActions","Button","StyledDialog","zIndex","backdropFilter","boxShadow","breakpoints","down","margin","fontSize","fontWeight","lineHeight","overflowWrap","wordBreak","snackbarStyle","ModeratorPage","user","useContext","AuthContext","navigate","useNavigate","tabValue","setTabValue","loadingMore","setLoadingMore","moderatorData","setModeratorData","permissions","setPermissions","lastModeratorCheck","setLastModeratorCheck","snackbar","setSnackbar","severity","posts","setPosts","tracks","setTracks","bugReports","setBugReports","users","setUsers","comments","setComments","badges","setBadges","artists","setArtists","deletePostDialogOpen","setDeletePostDialogOpen","deleteTrackDialogOpen","setDeleteTrackDialogOpen","deleteCommentDialogOpen","setDeleteCommentDialogOpen","deleteAvatarDialogOpen","setDeleteAvatarDialogOpen","editUserDialogOpen","setEditUserDialogOpen","bugReportStatusDialogOpen","setBugReportStatusDialogOpen","editBadgeDialogOpen","setEditBadgeDialogOpen","deleteBadgeDialogOpen","setDeleteBadgeDialogOpen","deleteArtistDialogOpen","setDeleteArtistDialogOpen","editArtistDialogOpen","setEditArtistDialogOpen","createArtistDialogOpen","setCreateArtistDialogOpen","manageArtistTracksDialogOpen","setManageArtistTracksDialogOpen","artistTracks","setArtistTracks","searchableTracksList","setSearchableTracksList","trackSearch","setTrackSearch","loadingTracks","setLoadingTracks","searchMode","setSearchMode","selectedTracks","setSelectedTracks","selectedPost","setSelectedPost","selectedTrack","setSelectedTrack","selectedComment","setSelectedComment","selectedUser","setSelectedUser","selectedBugReport","setSelectedBugReport","selectedBadge","setSelectedBadge","selectedArtist","setSelectedArtist","editUserName","setEditUserName","editUsername","setEditUsername","bugReportStatus","setBugReportStatus","editBadgeName","setEditBadgeName","editBadgeDescription","setEditBadgeDescription","editBadgePrice","setEditBadgePrice","editBadgeActive","setEditBadgeActive","editBadgeImage","setEditBadgeImage","editBadgeImagePreview","setEditBadgeImagePreview","editArtistName","setEditArtistName","editArtistBio","setEditArtistBio","editArtistAvatar","setEditArtistAvatar","editArtistAvatarPreview","setEditArtistAvatarPreview","editArtistVerified","setEditArtistVerified","editArtistInfo","setEditArtistInfo","page","setPage","pageStates","setPageStates","hasMore","setHasMore","rowsPerPage","setRowsPerPage","postsObserver","useRef","tracksObserver","commentsObserver","usersObserver","bugReportsObserver","badgesObserver","artistsObserver","search","setSearch","searchTimeout","warningUser","setWarningUser","warningDialogOpen","setWarningDialogOpen","warningData","setWarningData","reason","details","banUser","setBanUser","banDialogOpen","setBanDialogOpen","banData","setBanData","duration_days","userWarningsDialogOpen","setUserWarningsDialogOpen","userBansDialogOpen","setUserBansDialogOpen","selectedUserHistory","setSelectedUserHistory","userWarnings","setUserWarnings","userBans","setUserBans","loadingHistory","setLoadingHistory","moderatorStats","setModeratorStats","deleted_posts","deleted_tracks","deleted_comments","deleted_avatars","updated_users","warnings_issued","bans_issued","total_actions","issueMedalDialogOpen","setIssueMedalDialogOpen","medalUser","setMedalUser","availableMedals","setAvailableMedals","loadingMedals","setLoadingMedals","selectedMedal","setSelectedMedal","medalDescription","setMedalDescription","modKeys","setModKeys","modKeysLoading","setModKeysLoading","modKeysLoadingMore","setModKeysLoadingMore","modKeysError","setModKeysError","modKeysPage","setModKeysPage","modKeysTotal","setModKeysTotal","modKeysHasNext","setModKeysHasNext","modKeysDialogOpen","setModKeysDialogOpen","modKeysCreateLoading","setModKeysCreateLoading","modKeysCreateError","setModKeysCreateError","modKeysCreateSuccess","setModKeysCreateSuccess","modKeysForm","setModKeysForm","type","points","subscription_type","subscription_duration_days","max_uses","count","expires_days","description","modKeysDeleting","setModKeysDeleting","modKeysLoaderRef","generatedKeys","setGeneratedKeys","decorationMenuOpen","setDecorationMenuOpen","selectedUserForDecorations","setSelectedUserForDecorations","fetchModKeys","useCallback","append","res","axios","get","data","success","total","has_next","prev","newKeys","keys","merged","ids","Set","k","filter","has","sort","a","b","Date","created_at","e","observer","window","IntersectionObserver","entries","isIntersecting","threshold","current","observe","unobserve","handleOpenCreateKeyDialog","handleCloseCreateKeyDialog","handleModKeysFormChange","target","handleCreateKey","payload","key_type","points_value","Number","undefined","forEach","post","Array","isArray","response","checkModeratorStatus","fetchModeratorStats","resetTabData","loadTabData","_moderatorCheckInProgress","resolve","checkInterval","setInterval","clearInterval","now","is_moderator","showNotification","stats","tabIndex","delete_posts","fetchPosts","delete_music","fetchTracks","delete_comments","fetchComments","change_user_name","change_username","delete_avatar","fetchUsers","manage_bug_reports","delete_bug_reports","fetchBugReports","edit_badges","delete_badges","fetchBadges","manage_artists","delete_artists","fetchArtists","handleSearchChange","tab","clearTimeout","setTimeout","clearSearch","loadMore","searchQuery","currentPage","encodeURIComponent","newPosts","prevPosts","newTracks","prevTracks","newComments","prevComments","newUsers","prevUsers","bug_reports","newReports","prevReports","newBadges","prevBadges","newArtists","prevArtists","lastPostElementRef","node","disconnect","lastTrackElementRef","lastCommentElementRef","lastUserElementRef","lastBugReportElementRef","lastBadgeElementRef","lastArtistElementRef","Navigate","to","Container","mt","mb","flexDirection","my","textAlign","SecurityIcon","openTrack","track","PermissionItem","enabled","icon","elevation","Avatar","bgcolor","mr","React","cloneElement","DoNotDisturbIcon","openWarningDialog","openBanDialog","searchUnassignedTracks","artist_name","exact_match","limit","artistTrackIds","unassignedTracks","handleSelectAllSearchedTracks","component","moderator_level","toLocaleDateString","Tabs","onChange","newValue","scrollButtons","borderBottom","borderColor","Tab","DashboardIcon","label","PostAddIcon","MusicNoteIcon","CommentIcon","PersonIcon","BugReportIcon","EmojiEventsIcon","PersonAddIcon","renderProfile","Alert","assignedDate","assigned_info","assigned_at","daysSinceAssigned","Math","floor","Card","top","CardContent","photo","charAt","ml","Divider","AdminPanelSettingsIcon","Chip","VerifiedUserIcon","AccessTimeIcon","assigned_by","CardHeader","pb","sm","PhotoIcon","EditIcon","can_generate_keys","VpnKeyIcon","py","WarningAmberIcon","BlockIcon","renderModKeysSection","idx","gap","navigator","clipboard","writeText","then","handleCopyKey","ContentCopyIcon","current_uses","expires_at","keyId","delete","handleDeleteKey","ref","CloseIcon","startIcon","join","index","fontFamily","FormControl","InputLabel","Select","MenuItem","TextField","InputProps","inputProps","min","input","Fragment","helperText","max","multiline","rows","placeholder","startAdornment","InputAdornment","SearchIcon","endAdornment","ClearIcon","flexWrap","author_avatar","startsWith","author_id","author_username","cursor","textDecoration","author_name","openDeletePostDialog","whiteSpace","content","image","toLocaleString","comments_count","likes_count","align","TableContainer","overflowX","Table","TableHead","TableRow","TableCell","TableBody","cover","user_id","noWrap","artist","album","trackLink","location","origin","catch","copyTrackLink","PlayArrowIcon","openDeleteTrackDialog","List","comment","post_id","openDeleteCommentDialog","openEditUserDialog","openDeleteAvatarDialog","warnings","openUserWarningsDialog","HistoryIcon","WarningIcon","bans","openUserBansDialog","medals","fetchAvailableMedals","openIssueMedalDialog","EmojiEventsOutlinedIcon","openDecorationMenu","StarsIcon","required","auto_ban","ban_info","formatted_end_date","parseInt","warning","admin_name","admin_username","warningId","handleRemoveWarning","ban","is_expired","is_auto_ban","start_date","remaining_days","banId","handleRemoveBan","flexGrow","colSpan","total_bug_reports","sample_reports","user_permissions","report","subject","status","alert","adminCheckResponse","tableInfo","table_info","sampleData","sample_data","permissionsInfo","permissions_info","alertMessage","regularResponse","paginationResponse","regularData","paginationData","compareMessage","regularError","adminError","debugResponse","totalReports","total_reports","sampleReports","fallbackMessage","debugError","user_photo","user_name","textOverflow","openBugReportStatusDialog","reportId","confirm","handleDeleteBugReport","renderBadges","badge","isLastElement","Zoom","in","transitionDelay","lg","transition","transform","avatar","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","VisibilityOffIcon","creator_avatar","creator_id","creator_name","slice","subheader","action","price","toString","image_path","openEditBadgeDialog","openDeleteBadgeDialog","CardMedia","objectFit","onError","PaidIcon","CreditCardIcon","copies_sold","openCreateArtistDialog","verified","avatar_url","tracks_count","pt","WebkitLineClamp","WebkitBoxOrient","bio","CardActions","px","OpenInNewIcon","openEditArtistDialog","openManageArtistTracksDialog","QueueMusicIcon","openDeleteArtistDialog","autoFocus","InputLabelProps","FormHelperTextProps","put","SaveIcon","date","labelId","Switch","checked","Fade","timeout","FileUploadIcon","accept","hidden","event","file","files","reader","FileReader","onload","result","readAsDataURL","isNaN","formData","FormData","pl","is_verified","pop","artist_id","toISOString","LibraryMusicIcon","stickyHeader","cover_path","AudiotrackIcon","duration","padStart","trackId","track_id","handleRemoveTrackFromArtist","minWidth","onKeyPress","track_ids","assignedTracks","Checkbox","indeterminate","handleToggleTrackSelection","assignedTrack","handleAssignTrackToArtist","medal","achievement","medal_name","handleCloseDecorationMenu","Snackbar","autoHideDuration"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}