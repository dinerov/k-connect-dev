{"version":3,"file":"MusicPage.C1dJ9gmr.js","sources":["../../src/components/Music/MusicUploadDialog.js","../../node_modules/@mui/icons-material/PlayCircleOutline.js","../../src/UIKIT/PlaylistViewModal/PlaylistViewModal.js","../../src/pages/Main/MusicPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Box,\n  Typography,\n  IconButton,\n  CircularProgress,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Alert,\n  Chip,\n  Stack,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemAvatar,\n  Avatar,\n  ListItemSecondaryAction,\n  Divider,\n  Paper,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport {\n  CloudUpload,\n  Close,\n  AudioFile,\n  Image,\n  MusicNote,\n  InsertDriveFile,\n  AudiotrackOutlined,\n  Delete,\n  Add,\n  Album\n} from '@mui/icons-material';\nimport axios from 'axios';\n\n\nconst GENRES = [\n  'рэп', 'бодрое', 'грустное', 'весёлое', 'спокойное', 'поп', 'электроника'\n];\n\n\nconst formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nconst MusicUploadDialog = ({ open, onClose, onSuccess }) => {\n  \n  const [tracks, setTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [loadingMetadata, setLoadingMetadata] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  useEffect(() => {\n    if (!open) {\n      resetForm();\n    }\n  }, [open]);\n\n  const resetForm = () => {\n    setTracks([]);\n    setCurrentTrackIndex(0);\n    setError('');\n    setSuccess(false);\n    setUploadProgress(0);\n  };\n\n  \n  const createEmptyTrack = () => ({\n    file: null,\n    coverFile: null,\n    coverPreview: '',\n    title: '',\n    artist: '',\n    album: '',\n    genre: '',\n    description: '',\n    duration: 0,\n    metadata: {\n      fileFormat: '',\n      sampleRate: 0,\n      bitDepth: 0,\n      channels: 0,\n      fileSize: 0\n    }\n  });\n\n  \n  const handleFileChange = async (event) => {\n    const selectedFiles = Array.from(event.target.files);\n    if (!selectedFiles.length) return;\n\n    \n    const filesToProcess = selectedFiles.slice(0, 10);\n    \n    if (selectedFiles.length > 10) {\n      setError('Максимальное количество треков для загрузки: 10. Первые 10 файлов были выбраны.');\n    } else {\n      setError('');\n    }\n\n    setLoadingMetadata(true);\n\n    \n    const newTracks = [];\n    \n    for (const file of filesToProcess) {\n      if (!file.type.startsWith('audio/')) {\n        console.warn(`Файл ${file.name} не является аудио и будет пропущен`);\n        continue;\n      }\n\n      const track = createEmptyTrack();\n      track.file = file;\n\n      try {\n        \n        const metadata = await extractMetadata(file);\n        if (metadata) {\n          track.title = metadata.title || '';\n          track.artist = metadata.artist || '';\n          track.album = metadata.album || '';\n          track.genre = metadata.genre || '';\n          track.duration = metadata.duration || 0;\n          track.metadata = {\n            fileFormat: metadata.file_format || '',\n            sampleRate: metadata.sample_rate || 0,\n            bitDepth: metadata.bit_depth || 0,\n            channels: metadata.channels || 0,\n            fileSize: metadata.file_size || 0\n          };\n\n          \n          if (metadata.cover_data) {\n            track.coverPreview = metadata.cover_data;\n            try {\n              const base64Response = await fetch(metadata.cover_data);\n              const blob = await base64Response.blob();\n              const coverFile = new File(\n                [blob],\n                'cover.' + (metadata.cover_mime ? metadata.cover_mime.split('/')[1] : 'jpg'),\n                { type: metadata.cover_mime || 'image/jpeg' }\n              );\n              track.coverFile = coverFile;\n            } catch (e) {\n              console.error('Ошибка при создании файла обложки из base64:', e);\n            }\n          }\n        } else {\n          \n          const fileName = file.name.replace(/\\.[^/.]+$/, \"\");\n          if (fileName.includes(\" - \")) {\n            const parts = fileName.split(\" - \");\n            track.artist = parts[0].trim();\n            track.title = parts[1].trim();\n          } else {\n            track.title = fileName;\n          }\n\n          \n          try {\n            const objectUrl = URL.createObjectURL(file);\n            const audioElement = new Audio();\n            await new Promise((resolve) => {\n              audioElement.onloadedmetadata = () => {\n                track.duration = Math.round(audioElement.duration);\n                URL.revokeObjectURL(objectUrl);\n                resolve();\n              };\n              audioElement.onerror = () => {\n                URL.revokeObjectURL(objectUrl);\n                resolve();\n              };\n              audioElement.src = objectUrl;\n            });\n          } catch (e) {\n            console.error('Ошибка при получении длительности аудио:', e);\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка при извлечении метаданных:', error);\n      }\n\n      newTracks.push(track);\n    }\n\n    if (newTracks.length > 0) {\n      setTracks(newTracks);\n      setCurrentTrackIndex(0);\n    }\n\n    setLoadingMetadata(false);\n  };\n\n  \n  const extractMetadata = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('/api/music/metadata', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (response.data.success) {\n        return response.data.metadata;\n      }\n    } catch (error) {\n      console.error('Ошибка при получении метаданных:', error);\n    }\n    return null;\n  };\n\n  \n  const handleCoverChange = (event) => {\n    const selectedFile = event.target.files[0];\n    if (!selectedFile) return;\n\n    if (!selectedFile.type.startsWith('image/')) {\n      setError('Выберите изображение для обложки');\n      return;\n    }\n\n    const updatedTracks = [...tracks];\n    updatedTracks[currentTrackIndex].coverFile = selectedFile;\n    updatedTracks[currentTrackIndex].coverPreview = URL.createObjectURL(selectedFile);\n    setTracks(updatedTracks);\n    setError('');\n  };\n\n  \n  const handleTrackChange = (field, value) => {\n    const updatedTracks = [...tracks];\n    updatedTracks[currentTrackIndex][field] = value;\n    setTracks(updatedTracks);\n  };\n\n  \n  const handleRemoveTrack = (index) => {\n    const updatedTracks = [...tracks];\n    updatedTracks.splice(index, 1);\n    setTracks(updatedTracks);\n    \n    \n    if (currentTrackIndex >= updatedTracks.length) {\n      setCurrentTrackIndex(Math.max(0, updatedTracks.length - 1));\n    }\n  };\n\n  \n  const handleSubmit = async () => {\n    \n    const invalidTrackIndex = tracks.findIndex(track => {\n      return !track.file || !track.title || !track.artist || !track.coverFile;\n    });\n\n    if (invalidTrackIndex !== -1) {\n      setCurrentTrackIndex(invalidTrackIndex);\n      setError('Заполните все обязательные поля для всех треков (файл, название, исполнитель, обложка)');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setSuccess(false);\n    setUploadProgress(0);\n\n    try {\n      \n      const formData = new FormData();\n      \n      \n      tracks.forEach((track, index) => {\n        formData.append(`file[${index}]`, track.file);\n        formData.append(`cover[${index}]`, track.coverFile);\n        formData.append(`title[${index}]`, track.title);\n        formData.append(`artist[${index}]`, track.artist);\n        formData.append(`album[${index}]`, track.album || '');\n        formData.append(`genre[${index}]`, track.genre || '');\n        formData.append(`description[${index}]`, track.description || '');\n        formData.append(`duration[${index}]`, track.duration || 0);\n      });\n\n      \n      const uploadProgressCallback = (progressEvent) => {\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        setUploadProgress(percentCompleted);\n      };\n\n      \n      const response = await axios.post('/api/music/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: uploadProgressCallback\n      });\n\n      \n      if (response.data.success) {\n        const uploadedTracks = response.data.tracks || [response.data.track];\n        setSuccess(true);\n        \n        \n        if (response.data.errors && response.data.errors.length > 0) {\n          setError('Некоторые треки не были загружены: ' + response.data.errors.join(', '));\n        }\n        \n        setTimeout(() => {\n          onSuccess && onSuccess(uploadedTracks);\n          onClose();\n        }, 1500);\n      } else {\n        setError(response.data.message || 'Ошибка при загрузке треков');\n      }\n    } catch (error) {\n      console.error('Ошибка при загрузке треков:', error);\n      setError(error.response?.data?.message || 'Ошибка при загрузке треков');\n    } finally {\n      setLoading(false);\n      setUploadProgress(100);\n    }\n  };\n\n  \n  const renderSelectFilesButton = () => (\n    <Box sx={{ textAlign: 'center', py: 2 }}>\n      <Button\n        variant=\"outlined\"\n        component=\"label\"\n        htmlFor=\"audio-upload-multi\"\n        startIcon={<Add />}\n        sx={{ mb: 2 }}\n        disabled={loadingMetadata}\n      >\n        Выбрать треки (до 10)\n        <input\n          id=\"audio-upload-multi\"\n          type=\"file\"\n          accept=\"audio/*\"\n          multiple\n          hidden\n          onChange={handleFileChange}\n          disabled={loadingMetadata}\n        />\n      </Button>\n      \n      {loadingMetadata && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 2 }}>\n          <CircularProgress size={24} />\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            Извлечение метаданных...\n          </Typography>\n        </Box>\n      )}\n    </Box>\n  );\n\n  \n  const renderTrackList = () => (\n    <Paper variant=\"outlined\" sx={{ height: '100%', overflow: 'auto' }}>\n      <List dense sx={{ p: 0 }}>\n        {tracks.map((track, index) => (\n          <ListItem \n            key={index}\n            selected={index === currentTrackIndex}\n            button\n            onClick={() => setCurrentTrackIndex(index)}\n            sx={{ \n              borderLeft: index === currentTrackIndex ? '3px solid' : '3px solid transparent',\n              borderLeftColor: 'primary.main',\n              '&:hover': { bgcolor: 'action.hover' }\n            }}\n          >\n            <ListItemAvatar>\n              {track.coverPreview ? (\n                <Avatar variant=\"rounded\" src={track.coverPreview} />\n              ) : (\n                <Avatar variant=\"rounded\">\n                  <AudioFile />\n                </Avatar>\n              )}\n            </ListItemAvatar>\n            <ListItemText \n              primary={track.title || 'Без названия'} \n              secondary={track.artist || 'Неизвестный исполнитель'}\n              primaryTypographyProps={{ noWrap: true }}\n              secondaryTypographyProps={{ noWrap: true }}\n            />\n            <ListItemSecondaryAction>\n              <IconButton \n                edge=\"end\" \n                size=\"small\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleRemoveTrack(index);\n                }}\n              >\n                <Delete fontSize=\"small\" />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n\n  \n  const renderTrackForm = () => {\n    if (!tracks.length || currentTrackIndex < 0 || currentTrackIndex >= tracks.length) {\n      return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100%', p: 3 }}>\n          <Album sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n          <Typography variant=\"body1\" color=\"text.secondary\" textAlign=\"center\">\n            Выберите музыкальные файлы для загрузки\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"center\" sx={{ mt: 1 }}>\n            Поддерживаются форматы MP3, FLAC, WAV, OGG и другие аудио форматы\n          </Typography>\n        </Box>\n      );\n    }\n\n    const track = tracks[currentTrackIndex];\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            label=\"Название трека\"\n            fullWidth\n            required\n            value={track.title}\n            onChange={(e) => handleTrackChange('title', e.target.value)}\n            disabled={loading}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            label=\"Исполнитель\"\n            fullWidth\n            required\n            value={track.artist}\n            onChange={(e) => handleTrackChange('artist', e.target.value)}\n            disabled={loading}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            label=\"Альбом\"\n            fullWidth\n            value={track.album}\n            onChange={(e) => handleTrackChange('album', e.target.value)}\n            disabled={loading}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel id=\"genre-label\">Жанр</InputLabel>\n            <Select\n              labelId=\"genre-label\"\n              value={track.genre}\n              label=\"Жанр\"\n              onChange={(e) => handleTrackChange('genre', e.target.value)}\n              disabled={loading}\n            >\n              <MenuItem value=\"\">\n                <em>Не выбрано</em>\n              </MenuItem>\n              {GENRES.map((g) => (\n                <MenuItem key={g} value={g}>\n                  {g}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <TextField\n            label=\"Описание\"\n            fullWidth\n            multiline\n            rows={3}\n            value={track.description}\n            onChange={(e) => handleTrackChange('description', e.target.value)}\n            disabled={loading}\n          />\n        </Grid>\n        \n        <Grid item xs={12} md={6}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Обложка\n          </Typography>\n          <Box \n            sx={{ \n              border: '1px dashed',\n              borderColor: 'divider',\n              borderRadius: 1,\n              p: 2,\n              textAlign: 'center',\n              mb: 1,\n              height: 150,\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              cursor: 'pointer',\n              position: 'relative',\n              backgroundImage: track.coverPreview ? `url(${track.coverPreview})` : 'none',\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              '&:hover': {\n                borderColor: 'primary.main',\n                bgcolor: track.coverPreview ? 'unset' : 'rgba(208, 188, 255, 0.04)'\n              }\n            }}\n            component=\"label\"\n            htmlFor={`cover-upload-${currentTrackIndex}`}\n          >\n            {!track.coverPreview && (\n              <>\n                <Image sx={{ fontSize: 40, color: 'text.secondary', mb: 1 }} />\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Выберите изображение для обложки\n                </Typography>\n              </>\n            )}\n            <input\n              id={`cover-upload-${currentTrackIndex}`}\n              type=\"file\"\n              accept=\"image/*\"\n              hidden\n              onChange={handleCoverChange}\n              disabled={loading}\n            />\n          </Box>\n        </Grid>\n        \n        <Grid item xs={12} md={6}>\n          <Box sx={{ \n            p: 1.5, \n            border: '1px solid',\n            borderColor: 'divider',\n            borderRadius: 1,\n            height: '100%'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n              <MusicNote sx={{ color: 'primary.main', mr: 1 }} />\n              <Typography variant=\"body2\" fontWeight=\"medium\">\n                Информация о треке\n              </Typography>\n            </Box>\n            \n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Typography variant=\"body2\">\n                  Длительность: {Math.floor(track.duration / 60)}:{String(track.duration % 60).padStart(2, '0')}\n                </Typography>\n              </Grid>\n              \n              {track.file && (\n                <>\n                  <Grid item xs={12}>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      Файл: {track.file.name}\n                    </Typography>\n                  </Grid>\n                  \n                  {track.metadata.fileFormat && (\n                    <Grid item xs={12} sm={6}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Формат: {track.metadata.fileFormat}\n                      </Typography>\n                    </Grid>\n                  )}\n                  \n                  {track.metadata.fileSize > 0 && (\n                    <Grid item xs={12} sm={6}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Размер: {formatFileSize(track.metadata.fileSize)}\n                      </Typography>\n                    </Grid>\n                  )}\n                  \n                  {track.metadata.sampleRate > 0 && (\n                    <Grid item xs={12} sm={6}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Частота: {track.metadata.sampleRate} Гц\n                      </Typography>\n                    </Grid>\n                  )}\n                  \n                  {track.metadata.bitDepth > 0 && (\n                    <Grid item xs={12} sm={6}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Бит: {track.metadata.bitDepth} бит\n                      </Typography>\n                    </Grid>\n                  )}\n                  \n                  {track.metadata.channels > 0 && (\n                    <Grid item xs={12} sm={6}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Каналы: {track.metadata.channels}\n                      </Typography>\n                    </Grid>\n                  )}\n                </>\n              )}\n            </Grid>\n            \n            {track.metadata.fileFormat && (\n              <Box sx={{ mt: 1 }}>\n                <Chip \n                  size=\"small\" \n                  label={track.metadata.fileFormat} \n                  color=\"primary\" \n                  variant=\"outlined\"\n                  icon={<AudiotrackOutlined fontSize=\"small\" />} \n                />\n              </Box>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={loading ? null : onClose}\n      maxWidth=\"lg\" \n      fullWidth\n      PaperProps={{\n        sx: {\n          minHeight: '70vh',\n          '@media (max-width: 600px)': {\n            width: '100%',\n            maxWidth: '100%',\n            margin: 0,\n            borderRadius: 0,\n          }\n        }\n      }}\n    >\n      <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h6\">\n          {tracks.length > 0 \n            ? `Загрузка треков (${tracks.length})`\n            : 'Загрузка треков'\n          }\n        </Typography>\n        {!loading && (\n          <IconButton onClick={onClose} size=\"small\">\n            <Close />\n          </IconButton>\n        )}\n      </DialogTitle>\n      \n      <DialogContent sx={{ pb: 1 }}>\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n        \n        {success && (\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\n            {tracks.length > 1\n              ? `${tracks.length} треков успешно загружено!`\n              : 'Трек успешно загружен!'\n            }\n          </Alert>\n        )}\n        \n        {tracks.length === 0 ? (\n          renderSelectFilesButton()\n        ) : (\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={3}>\n              {renderTrackList()}\n              <Box sx={{ mt: 2, textAlign: 'center' }}>\n                <Button\n                  variant=\"outlined\"\n                  component=\"label\"\n                  htmlFor=\"audio-upload-multi-add\"\n                  startIcon={<Add />}\n                  fullWidth\n                  size=\"small\"\n                  disabled={loading || loadingMetadata || tracks.length >= 10}\n                >\n                  Добавить еще\n                  <input\n                    id=\"audio-upload-multi-add\"\n                    type=\"file\"\n                    accept=\"audio/*\"\n                    multiple\n                    hidden\n                    onChange={handleFileChange}\n                    disabled={loading || loadingMetadata || tracks.length >= 10}\n                  />\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={9}>\n              {renderTrackForm()}\n            </Grid>\n          </Grid>\n        )}\n      </DialogContent>\n      \n      <DialogActions sx={{ p: 2, pt: 0 }}>\n        <Button \n          onClick={onClose} \n          disabled={loading}\n          color=\"inherit\"\n        >\n          Отмена\n        </Button>\n        <Button \n          onClick={handleSubmit} \n          variant=\"contained\" \n          disabled={loading || tracks.length === 0}\n          startIcon={loading ? <CircularProgress size={20} /> : <CloudUpload />}\n        >\n          {loading ? (\n            <>\n              Загрузка... {uploadProgress}%\n            </>\n          ) : tracks.length > 1 ? (\n            `Загрузить ${tracks.length} треков`\n          ) : (\n            'Загрузить трек'\n          )}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default MusicUploadDialog; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10 16.5 6-4.5-6-4.5zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'PlayCircleOutline');","import React, { useState, useContext } from 'react';\nimport { \n  Box, \n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Typography,\n  IconButton,\n  styled,\n  useTheme,\n  useMediaQuery,\n  Avatar,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Button,\n  Paper,\n  Divider,\n  CircularProgress,\n  alpha\n} from '@mui/material';\nimport { ThemeSettingsContext } from '../../App';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MusicNoteOutlinedIcon from '@mui/icons-material/MusicNoteOutlined';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport PersonIcon from '@mui/icons-material/Person';\n\n\nconst ViewDialog = styled(Dialog)(({ theme }) => ({\n  '&&': {\n    '& .MuiDialog-paper': {\n      [theme.breakpoints.down('sm')]: {\n        borderRadius: '0 !important',\n        maxWidth: '100% !important',\n        maxHeight: '100% !important',\n        width: '100% !important', \n        height: '100% !important',\n        margin: '0 !important',\n      },\n      [theme.breakpoints.up('sm')]: {\n        borderRadius: `${theme.spacing(2)}px !important`,\n        maxWidth: '800px !important',\n        maxHeight: '80vh !important',\n        width: '800px !important',\n        height: '80vh !important',\n        margin: '40px auto !important',\n      },\n      backgroundColor: theme.palette.mode === 'light'\n        ? theme.palette.background.paper\n        : theme.palette.mode === 'contrast'\n          ? '#101010'\n          : '#121212',\n      backgroundImage: 'none !important',\n      overflow: 'hidden !important',\n    }\n  }\n}));\n\nconst DialogHeader = styled(DialogTitle)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: theme.spacing(2, 3),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.mode === 'light'\n    ? theme.palette.background.paper\n    : theme.palette.mode === 'contrast'\n      ? '#101010'\n      : '#1A1A1A',\n  color: theme.palette.mode === 'light' ? theme.palette.text.primary : '#fff',\n}));\n\nconst CoverImage = styled(Box)(({ theme }) => ({\n  width: '100%',\n  aspectRatio: '1/1',\n  borderRadius: theme.spacing(2),\n  overflow: 'hidden',\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n}));\n\nconst TrackItem = styled(ListItem)(({ theme, isPlaying }) => ({\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(0.5),\n  padding: theme.spacing(1, 1.5),\n  backgroundColor: isPlaying\n    ? alpha(theme.palette.primary.main, theme.palette.mode === 'light' ? 0.15 : 0.25)\n    : 'transparent',\n  '&:hover': {\n    backgroundColor: isPlaying\n      ? alpha(theme.palette.primary.main, theme.palette.mode === 'light' ? 0.2 : 0.3)\n      : theme.palette.mode === 'light' \n        ? alpha(theme.palette.grey[300], 0.3) \n        : alpha(theme.palette.common.white, 0.05),\n  },\n}));\n\nconst TrackAvatar = styled(Avatar)(({ theme }) => ({\n  width: 36,\n  height: 36,\n  borderRadius: theme.spacing(1),\n}));\n\nconst ScrollableContent = styled(Box)(({ theme }) => ({\n  overflow: 'auto',\n  height: '100%',\n  padding: theme.spacing(0, 0, 0, 0),\n  '&::-webkit-scrollbar': {\n    width: '6px',\n  },\n  '&::-webkit-scrollbar-track': {\n    backgroundColor: theme.palette.mode === 'light' \n      ? alpha(theme.palette.grey[300], 0.3)\n      : alpha(theme.palette.common.white, 0.05),\n    borderRadius: '3px',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    backgroundColor: theme.palette.mode === 'light' \n      ? alpha(theme.palette.grey[500], 0.4)\n      : alpha(theme.palette.common.white, 0.2),\n    borderRadius: '3px',\n  },\n}));\n\nconst ActionButton = styled(Button)(({ theme }) => ({\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1, 3),\n  textTransform: 'none',\n  boxShadow: 'none',\n}));\n\nconst UserAvatar = styled(Avatar)(({ theme }) => ({\n  width: 36,\n  height: 36,\n  marginRight: theme.spacing(1),\n}));\n\nconst PlayingIndicator = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.primary.main,\n  marginRight: theme.spacing(1),\n  animation: 'pulse 1.5s infinite ease-in-out',\n  '@keyframes pulse': {\n    '0%': { opacity: 0.6 },\n    '50%': { opacity: 1 },\n    '100%': { opacity: 0.6 }\n  }\n}));\n\nconst PlaylistViewModal = ({ \n  open, \n  onClose, \n  playlist = null,\n  onEdit,\n  onPlayTrack,\n  isLoading = false,\n  nowPlaying = null\n}) => {\n  const theme = useTheme();\n  const { themeSettings } = useContext(ThemeSettingsContext);\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isVeryNarrow = useMediaQuery('(max-width:360px)');\n  \n  \n  const handlePlayTrack = (track) => {\n    if (onPlayTrack) {\n      onPlayTrack(track);\n      \n    }\n  };\n\n  \n  const isTrackPlaying = (track) => {\n    return nowPlaying && nowPlaying.id === track.id;\n  };\n\n  \n  const handleEditPlaylist = () => {\n    if (onEdit && playlist) {\n      onEdit(playlist);\n      onClose(); \n    }\n  };\n\n  if (!playlist && !isLoading) {\n    return null;\n  }\n\n  return (\n    <ViewDialog\n      open={open}\n      onClose={onClose}\n      fullScreen={false}\n      maxWidth={false}\n      fullWidth={false}\n    >\n      <DialogHeader>\n        <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n          {isLoading ? 'Загрузка плейлиста...' : playlist?.name || 'Плейлист'}\n        </Typography>\n        <IconButton edge=\"end\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n          <CloseIcon />\n        </IconButton>\n      </DialogHeader>\n\n      {isLoading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '400px' }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <ScrollableContent>\n          <Box sx={{ p: 3 }}>\n            <Box sx={{ \n              display: 'flex', \n              flexDirection: isMobile ? 'column' : 'row', \n              gap: 3,\n              mb: 4\n            }}>\n              {/* Cover Image */}\n              <Box sx={{ width: isMobile ? '100%' : '220px', flexShrink: 0 }}>\n                <CoverImage>\n                  <img \n                    src={playlist?.cover_url || playlist?.cover_image || '/static/uploads/system/playlist_placeholder.jpg'} \n                    alt={playlist?.name} \n                    style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                  />\n                </CoverImage>\n\n                {/* Playlist Info - Mobile View */}\n                {isMobile && (\n                  <Box sx={{ mt: 2 }}>\n                    <Typography variant=\"h6\" sx={{ fontWeight: 700, mb: 0.5 }}>\n                      {playlist?.name}\n                    </Typography>\n                    \n                    {/* Description */}\n                    {playlist?.description && (\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1.5 }}>\n                        {playlist?.description}\n                      </Typography>\n                    )}\n                    \n                    {/* Owner Info */}\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                      <UserAvatar src={playlist?.owner?.avatar_url}>\n                        <PersonIcon />\n                      </UserAvatar>\n                      <Typography variant=\"body2\" fontWeight={500}>\n                        {playlist?.owner?.name || 'Неизвестный пользователь'}\n                      </Typography>\n                    </Box>\n                    \n                    {/* Stats */}\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {playlist?.tracks_count || 0} {getTracksText(playlist?.tracks_count || 0)}\n                        </Typography>\n                      </Box>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        {playlist?.is_public ? (\n                          <VisibilityIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n                        ) : (\n                          <VisibilityOffIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n                        )}\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {playlist?.is_public ? 'Публичный' : 'Приватный'}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    \n                    {/* Actions - Mobile View */}\n                    <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\n                      {playlist?.is_owner && (\n                        <ActionButton\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={handleEditPlaylist}\n                          startIcon={<EditIcon />}\n                          size=\"small\"\n                          fullWidth\n                        >\n                          {isVeryNarrow ? '' : 'Ред.'}\n                        </ActionButton>\n                      )}\n                      \n                      {playlist?.tracks && playlist.tracks.length > 0 && (\n                        <ActionButton\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => handlePlayTrack(playlist.tracks[0])}\n                          startIcon={<PlayCircleOutlineIcon />}\n                          size=\"small\"\n                          fullWidth\n                        >\n                          {isVeryNarrow ? '' : 'Слуш.'}\n                        </ActionButton>\n                      )}\n                    </Box>\n                  </Box>\n                )}\n              </Box>\n\n              {/* Playlist Info - Desktop View */}\n              {!isMobile && (\n                <Box sx={{ flex: 1 }}>\n                  <Typography variant=\"h5\" sx={{ fontWeight: 700, mb: 1 }}>\n                    {playlist?.name}\n                  </Typography>\n                  \n                  {/* Description */}\n                  {playlist?.description && (\n                    <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                      {playlist?.description}\n                    </Typography>\n                  )}\n                  \n                  {/* Owner Info */}\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <UserAvatar src={playlist?.owner?.avatar_url}>\n                      <PersonIcon />\n                    </UserAvatar>\n                    <Typography variant=\"body1\" fontWeight={500}>\n                      {playlist?.owner?.name || 'Неизвестный пользователь'}\n                    </Typography>\n                  </Box>\n                  \n                  {/* Stats */}\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 3, mb: 3 }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {playlist?.tracks_count || 0} {getTracksText(playlist?.tracks_count || 0)}\n                      </Typography>\n                    </Box>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      {playlist?.is_public ? (\n                        <VisibilityIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n                      ) : (\n                        <VisibilityOffIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\n                      )}\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {playlist?.is_public ? 'Публичный' : 'Приватный'}\n                      </Typography>\n                    </Box>\n                  </Box>\n                  \n                  {/* Actions - Desktop View */}\n                  <Box sx={{ display: 'flex', gap: 2 }}>\n                    {playlist?.is_owner && (\n                      <ActionButton\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={handleEditPlaylist}\n                        startIcon={<EditIcon />}\n                      >\n                        Редактировать\n                      </ActionButton>\n                    )}\n                    \n                    {playlist?.tracks && playlist.tracks.length > 0 && (\n                      <ActionButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handlePlayTrack(playlist.tracks[0])}\n                        startIcon={<PlayCircleOutlineIcon />}\n                      >\n                        Слушать\n                      </ActionButton>\n                    )}\n                  </Box>\n                </Box>\n              )}\n            </Box>\n\n            {/* Track List */}\n            {playlist?.tracks && playlist.tracks.length > 0 ? (\n              <Box>\n                <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\n                  Треки\n                </Typography>\n                <Paper variant=\"outlined\" sx={{ \n                  borderRadius: theme => theme.breakpoints.down('sm') ? theme.spacing(1) : theme.spacing(2), \n                  overflow: 'hidden',\n                  mx: 1\n                }}>\n                  <List disablePadding>\n                    {playlist.tracks.map((track, index) => {\n                      const playing = isTrackPlaying(track);\n                      return (\n                        <TrackItem\n                          key={track.id}\n                          divider={index !== playlist.tracks.length - 1}\n                          onClick={() => handlePlayTrack(track)}\n                          isPlaying={playing}\n                          sx={{ cursor: 'pointer' }}\n                        >\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '24px', mr: 1, flexShrink: 0 }}>\n                            {playing ? (\n                              <PlayingIndicator>\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                  <rect x=\"4\" y=\"4\" width=\"3\" height=\"16\" rx=\"1.5\">\n                                    <animate attributeName=\"height\" from=\"16\" to=\"6\" dur=\"0.6s\" begin=\"0s\" repeatCount=\"indefinite\" values=\"16;6;16\" keyTimes=\"0;0.5;1\" />\n                                  </rect>\n                                  <rect x=\"10.5\" y=\"4\" width=\"3\" height=\"16\" rx=\"1.5\">\n                                    <animate attributeName=\"height\" from=\"6\" to=\"16\" dur=\"0.6s\" begin=\"0.1s\" repeatCount=\"indefinite\" values=\"6;16;6\" keyTimes=\"0;0.5;1\" />\n                                  </rect>\n                                  <rect x=\"17\" y=\"4\" width=\"3\" height=\"16\" rx=\"1.5\">\n                                    <animate attributeName=\"height\" from=\"16\" to=\"6\" dur=\"0.6s\" begin=\"0.2s\" repeatCount=\"indefinite\" values=\"16;6;16\" keyTimes=\"0;0.5;1\" />\n                                  </rect>\n                                </svg>\n                              </PlayingIndicator>\n                            ) : (\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                {index + 1}\n                              </Typography>\n                            )}\n                          </Box>\n                          <ListItemAvatar sx={{ minWidth: 50 }}>\n                            <TrackAvatar src={track.cover_path} alt={track.title}>\n                              <MusicNoteOutlinedIcon />\n                            </TrackAvatar>\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={track.title}\n                            secondary={track.artist}\n                            primaryTypographyProps={{ \n                              fontWeight: 500, \n                              noWrap: true,\n                              title: track.title,\n                              color: playing ? 'primary' : 'inherit'\n                            }}\n                            secondaryTypographyProps={{ \n                              noWrap: true,\n                              title: track.artist\n                            }}\n                            sx={{ mr: 1 }}\n                          />\n                          <IconButton edge=\"end\" size=\"small\" onClick={(e) => {\n                            e.stopPropagation();\n                            handlePlayTrack(track);\n                          }}>\n                            <PlayCircleOutlineIcon />\n                          </IconButton>\n                        </TrackItem>\n                      );\n                    })}\n                  </List>\n                </Paper>\n              </Box>\n            ) : (\n              <Box sx={{ \n                textAlign: 'center', \n                p: 4, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.05)',\n                borderRadius: 2,\n                mt: 2\n              }}>\n                <Typography color=\"text.secondary\">\n                  Этот плейлист пока пуст\n                </Typography>\n                {playlist?.is_owner && (\n                  <Button \n                    variant=\"outlined\" \n                    startIcon={<AddIcon />} \n                    sx={{ mt: 2 }}\n                    onClick={handleEditPlaylist}\n                  >\n                    Добавить треки\n                  </Button>\n                )}\n              </Box>\n            )}\n          </Box>\n        </ScrollableContent>\n      )}\n    </ViewDialog>\n  );\n};\n\n\nfunction getTracksText(count) {\n  const lastDigit = count % 10;\n  const lastTwoDigits = count % 100;\n  \n  if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\n    return 'треков';\n  }\n  \n  if (lastDigit === 1) {\n    return 'трек';\n  }\n  \n  if (lastDigit >= 2 && lastDigit <= 4) {\n    return 'трека';\n  }\n  \n  return 'треков';\n}\n\nexport default PlaylistViewModal; ","import React, { useState, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { \n  Box, \n  Typography, \n  Container, \n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n  IconButton, \n  Tabs, \n  Tab,\n  useTheme,\n  CircularProgress,\n  Fab,\n  Divider,\n  useMediaQuery,\n  Paper,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  styled,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Snackbar,\n  Alert,\n  Fade,\n  Grow,\n  SwipeableDrawer,\n  BottomNavigation,\n  BottomNavigationAction,\n  Slide,\n  Zoom\n} from '@mui/material';\nimport { \n  PlayArrow, \n  Pause, \n  FavoriteBorder,\n  Favorite,\n  Add,\n  MusicNote,\n  AccessTime,\n  MoreHoriz,\n  NavigateNext,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n  Search,\n  ContentCopy,\n  Share,\n  Home,\n  LibraryMusic,\n  Shuffle,\n  QueueMusic,\n  Refresh,\n  ArrowBack,\n  Upload,\n  Download,\n  KeyboardArrowUp,\n  VerifiedUser,\n  Edit,\n  Delete\n} from '@mui/icons-material';\nimport { useMusic } from '../../context/MusicContext';\nimport { formatDuration } from '../../utils/formatters';\nimport { useContext } from 'react';\nimport { ThemeSettingsContext } from '../../App';\nimport FullScreenPlayer from '../../components/Music/FullScreenPlayer/index.js';\nimport MobilePlayer from '../../components/Music/MobilePlayer';\nimport MusicUploadDialog from '../../components/Music/MusicUploadDialog';\nimport { getCoverWithFallback } from '../../utils/imageUtils';\nimport { useLocation, useSearchParams, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SEO from '../../components/SEO';\nimport { PlaylistModal, PlaylistGrid } from '../../UIKIT';\nimport PlaylistViewModal from '../../UIKIT/PlaylistViewModal';\n\n\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n\nconst MusicPageContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(14),\n  padding: theme.spacing(0, 1),\n  [theme.breakpoints.up('md')]: {\n    marginBottom: theme.spacing(16),\n    padding: theme.spacing(0, 3),\n  }\n}));\n\nconst CategoryCard = styled(Card, {\n  shouldForwardProp: (prop) => prop !== 'active'\n})(({ theme, active }) => ({\n  cursor: 'pointer',\n  height: '100%',\n  background: active ? \n    `linear-gradient(135deg, ${theme.palette.primary.main}33 0%, ${theme.palette.primary.main}1A 100%)` : \n    `linear-gradient(135deg, ${theme.palette.mode === 'dark' ? 'rgba(25,25,25,0.7)' : 'rgba(240,240,240,0.7)'} 0%, ${theme.palette.mode === 'dark' ? 'rgba(15,15,15,0.7)' : 'rgba(250,250,250,0.7)'} 100%)`,\n  backdropFilter: 'blur(8px)',\n  borderRadius: 16,\n  overflow: 'hidden',\n  transition: 'all 0.3s ease',\n  transform: active ? 'scale(1.02)' : 'scale(1)',\n  boxShadow: active ? \n    '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)' : \n    '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\n  border: active ? `1px solid ${theme.palette.primary.main}` : `1px solid ${theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)'}`,\n  '&:hover': {\n    transform: 'scale(1.03)',\n    boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n    border: `1px solid ${theme.palette.primary.main}33`,\n  }\n}));\n\nconst CategoryIcon = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: 60,\n  height: 60,\n  borderRadius: '50%',\n  background: `linear-gradient(45deg, ${theme.palette.primary.main}33 0%, ${theme.palette.mode === 'dark' ? 'rgba(25,25,25,0.2)' : 'rgba(240,240,240,0.2)'} 100%)`,\n  border: `1px solid ${theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'}`,\n  marginBottom: theme.spacing(1.5),\n  boxShadow: '0 4px 8px rgba(0,0,0,0.15)',\n  '& svg': {\n    fontSize: 28,\n  }\n}));\n\nconst FloatingActionButton = styled(Fab)(({ theme }) => ({\n  position: 'fixed',\n  bottom: theme.spacing(9),\n  right: theme.spacing(2),\n  zIndex: 5,\n  [theme.breakpoints.up('md')]: {\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  }\n}));\n\nconst SearchContainer = styled(Box)(({ theme, open }) => ({\n  position: 'sticky',\n  top: 0,\n  zIndex: 5,\n  width: '100%',\n  padding: open ? theme.spacing(2, 1) : theme.spacing(2, 2, 1),\n  backdropFilter: 'blur(10px)',\n  backgroundColor: open \n    ? theme.palette.mode === 'dark' ? 'rgba(18,18,18,0.9)' : 'rgba(250,250,250,0.9)'  \n    : theme.palette.mode === 'dark' ? 'rgba(18,18,18,0.6)' : 'rgba(250,250,250,0.6)',\n  transition: 'all 0.3s ease',\n  borderRadius: open ? 0 : '0 0 16px 16px',\n  boxShadow: open ? 'none' : '0 4px 20px rgba(0,0,0,0.1)',\n}));\n\nconst StyledSearchInput = styled(Box)(({ theme, focused }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  borderRadius: 24,\n  backgroundColor: focused \n    ? theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.15)' : 'rgba(0,0,0,0.15)' \n    : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n  padding: theme.spacing(1, 2),\n  transition: 'all 0.3s ease',\n  boxShadow: focused ? `0 0 0 2px ${theme.palette.primary.main}66` : 'none',\n  '& input': {\n    width: '100%',\n    border: 'none',\n    outline: 'none',\n    background: 'transparent',\n    color: theme.palette.text.primary,\n    fontSize: '16px',\n    '&::placeholder': {\n      color: theme.palette.text.secondary,\n    }\n  }\n}));\n\nconst TrackItem = styled(ListItem, {\n  shouldForwardProp: (prop) => prop !== 'active'\n})(({ theme, active }) => ({\n  padding: theme.spacing(0.5, 1),\n  borderRadius: 8,\n  cursor: 'pointer',\n  marginBottom: 8,\n  backgroundColor: active ? `${theme.palette.primary.main}1A` : 'transparent',\n  transition: 'transform 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease',\n  border: active ? `1px solid ${theme.palette.primary.main}33` : '1px solid transparent',\n  '&:hover': {\n    backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : 'rgba(0,0,0,0.03)',\n    transform: 'translateY(-2px)',\n    boxShadow: '0 4px 10px rgba(0,0,0,0.1)'\n  }\n}));\n\nconst PlaylistTile = styled(Card)(({ theme }) => ({\n  borderRadius: 12,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(25,25,25,0.6)' : 'rgba(250,250,250,0.6)',\n  backdropFilter: 'blur(10px)',\n  transition: 'all 0.3s ease',\n  height: '100%',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 10px 20px rgba(0,0,0,0.2)'\n  }\n}));\n\nconst MobileNavigation = styled(BottomNavigation)(({ theme }) => ({\n  position: 'fixed',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  zIndex: 10,\n  height: 65,\n  backgroundColor: 'rgba(18,18,18,0.95)',\n  backdropFilter: 'blur(10px)',\n  borderTop: '1px solid rgba(255,255,255,0.05)',\n}));\n\n\nconst HeaderPaper = styled(Paper)(({ theme }) => ({\n  borderRadius: '16px',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  background: theme.palette.mode === 'dark' \n    ? 'linear-gradient(135deg, rgba(30,30,30,0.7) 0%, rgba(10,10,10,0.7) 100%)'\n    : 'linear-gradient(135deg, rgba(250,250,250,0.7) 0%, rgba(240,240,240,0.7) 100%)',\n  backdropFilter: 'blur(10px)',\n  boxShadow: '0 4px 30px rgba(0,0,0,0.1)',\n  border: `1px solid ${theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)'}`,\n}));\n\n\nconst CoverArtContainer = styled(Box)(({ theme }) => ({\n  width: '100%',\n  position: 'relative',\n  borderRadius: 16,\n  overflow: 'hidden',\n  boxShadow: '0 10px 30px rgba(0,0,0,0.3)',\n  aspectRatio: '1/1',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    background: 'linear-gradient(0deg, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 50%)',\n    pointerEvents: 'none'\n  },\n  '& img': {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    transition: 'transform 0.5s ease',\n  },\n  '&:hover img': {\n    transform: 'scale(1.05)',\n  }\n}));\n\n\nconst ActionButton = styled(Button)(({ theme, color = 'primary' }) => ({\n  borderRadius: 30,\n  padding: theme.spacing(1, 3),\n  textTransform: 'none',\n  fontWeight: 500,\n  letterSpacing: 0.5,\n  backgroundColor: color === 'primary' ? \n    theme.palette.primary.main : 'rgba(255,255,255,0.1)',\n  color: color === 'primary' ? '#fff' : 'rgba(255,255,255,0.9)',\n  transition: 'all 0.2s ease',\n  '&:hover': {\n    backgroundColor: color === 'primary' ? \n      theme.palette.primary.dark : 'rgba(255,255,255,0.2)',\n    transform: 'translateY(-2px)',\n    boxShadow: color === 'primary' ? \n      '0 4px 12px rgba(55,120,255,0.4)' : '0 4px 10px rgba(0,0,0,0.2)',\n  }\n}));\n\n\nconst RecentTracksCard = styled(Card)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  borderRadius: 16,\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(18,18,18,0.6)' : 'rgba(250,250,250,0.6)',\n  backdropFilter: 'blur(10px)',\n  transition: 'all 0.3s ease',\n  cursor: 'pointer',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 10px 20px rgba(0,0,0,0.2)'\n  }\n}));\n\nconst CompactTrackItem = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(1),\n  borderRadius: 8,\n  transition: 'background-color 0.2s ease',\n  '&:hover': {\n    backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',\n  },\n}));\n\nconst MobileSearchContainer = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  zIndex: 100,\n  width: '100%',\n  height: 64, \n  padding: theme.spacing(0, 1.5),\n  background: theme.palette.mode === 'dark' ? 'rgba(18,18,18,0.95)' : 'rgba(250,250,250,0.95)',\n  backdropFilter: 'blur(10px)',\n  boxShadow: '0 1px 3px rgba(0,0,0,0.12)',\n  borderBottom: `1px solid ${theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)'}`,\n  display: 'flex',\n  alignItems: 'center'\n}));\n\n\nconst SectionTitle = styled(Typography)(({ theme }) => ({\n  fontSize: '1.5rem',\n  fontWeight: 600,\n  marginBottom: theme.spacing(1),\n  marginTop: theme.spacing(4),\n  color: theme.palette.mode === 'dark' ? '#ffffff' : '#121212',\n  display: 'flex',\n  alignItems: 'center',\n  '& svg': {\n    marginRight: theme.spacing(1),\n    color: theme.palette.primary.main,\n  }\n}));\n\nconst SectionSubtitle = styled(Typography)(({ theme }) => ({\n  fontSize: '0.875rem',\n  fontWeight: 400,\n  marginBottom: theme.spacing(2),\n  color: theme.palette.text.secondary,\n}));\n\nconst ChartTrackItem = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(1, 0),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  borderRadius: 0,\n  cursor: 'pointer',\n  transition: 'background-color 0.2s ease',\n  '&:hover': {\n    backgroundColor: 'rgba(255,255,255,0.03)',\n  }\n}));\n\nconst ChartPosition = styled(Box)(({ theme }) => ({\n  width: 36,\n  textAlign: 'center',\n  fontWeight: 700,\n  fontSize: '0.95rem',\n  color: theme.palette.text.secondary,\n  marginRight: theme.spacing(1),\n}));\n\nconst ChartCover = styled(Box)(({ theme }) => ({\n  width: 42,\n  height: 42,\n  borderRadius: 4,\n  overflow: 'hidden',\n  marginRight: theme.spacing(2),\n  flexShrink: 0,\n  boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n}));\n\nconst ChartInfoContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  overflow: 'hidden',\n}));\n\nconst ChartTrackTitle = styled(Typography)(({ theme }) => ({\n  fontWeight: 500,\n  fontSize: '0.9rem',\n  marginBottom: 2,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n}));\n\nconst ChartTrackArtist = styled(Typography)(({ theme }) => ({\n  fontWeight: 400,\n  fontSize: '0.8rem',\n  color: theme.palette.text.secondary,\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n}));\n\nconst ChartStats = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  fontSize: '0.75rem',\n  color: theme.palette.text.secondary,\n  marginLeft: theme.spacing(1),\n  '& svg': {\n    fontSize: '0.9rem',\n    marginRight: 4,\n  }\n}));\n\nconst SectionContainer = styled(Box)(({ theme }) => ({\n  marginBottom: theme.spacing(4),\n}));\n\nconst MusicCategoryGrid = styled(Grid)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(4),\n}));\n\n\nconst MusicPage = React.memo(() => {\n  const [tabValue, setTabValue] = useState(0);\n  const [fullScreenPlayerOpen, setFullScreenPlayerOpen] = useState(false);\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchFocused, setIsSearchFocused] = useState(false);\n  const [mainTab, setMainTab] = useState(1); \n  const [playlists, setPlaylists] = useState([]);\n  const [isPlaylistsLoading, setIsPlaylistsLoading] = useState(false);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [playlistDialogOpen, setPlaylistDialogOpen] = useState(false);\n  const [playlistTracksDialogOpen, setPlaylistTracksDialogOpen] = useState(false);\n  const [localLoading, setLocalLoading] = useState(false);\n  const [loading, setLoading] = useState(false); \n  const [viewMode, setViewMode] = useState('categories'); \n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [showBackToTop, setShowBackToTop] = useState(false);\n  const [isMobileNavVisible, setIsMobileNavVisible] = useState(true);\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [searchLoading, setSearchLoading] = useState(false);\n  \n  const { section } = useParams();\n\n  const [charts, setCharts] = useState({\n    trending: [],\n    most_played: [],\n    most_liked: [],\n    new_releases: []\n  });\n  const [chartsLoading, setChartsLoading] = useState(true);\n  \n  const [contextMenu, setContextMenu] = useState(null);\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  \n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  \n  const [popularArtists, setPopularArtists] = useState([]);\n  const [artistsLoading, setArtistsLoading] = useState(true);\n  const [artistSearchQuery, setArtistSearchQuery] = useState('');\n  const [artistSearchResults, setArtistSearchResults] = useState([]);\n  const [isArtistSearching, setIsArtistSearching] = useState(false);\n  \n  \n  const [playlistModalOpen, setPlaylistModalOpen] = useState(false);\n  const [editingPlaylist, setEditingPlaylist] = useState(null);\n  const [playlistContextMenu, setPlaylistContextMenu] = useState({\n    open: false,\n    mouseX: null,\n    mouseY: null\n  });\n  const [selectedPlaylistForMenu, setSelectedPlaylistForMenu] = useState(null);\n  const [playlistBannerOpen, setPlaylistBannerOpen] = useState(true);\n\n  \n  const [playlistViewModalOpen, setPlaylistViewModalOpen] = useState(false);\n  const [viewingPlaylist, setViewingPlaylist] = useState(null);\n  const [playlistDetailsLoading, setPlaylistDetailsLoading] = useState(false);\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));\n  const { themeSettings } = useContext(ThemeSettingsContext);\n  const searchInputRef = useRef(null);\n  const headerRef = useRef(null);\n  const pageRef = useRef(null);\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  \n  const musicContext = useMusic();\n  const { \n    tracks, \n    likedTracks, \n    newTracks, \n    randomTracks,\n    popularTracks, \n    currentTrack, \n    isPlaying, \n    togglePlay, \n    isLoading,\n    searchResults,\n    isSearching,\n    searchTracks,\n    setCurrentSection,\n    playTrack,\n    likeTrack,\n    setRandomTracks,\n    setTracks\n  } = musicContext;\n\n  \n  const loadMoreTracks = musicContext.loadMoreTracks || (async () => console.warn('loadMoreTracks not implemented'));\n  const [hasMoreTracks, setHasMoreTracks] = useState(musicContext.hasMoreTracks || false);\n\n  \n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const loaderRef = useRef(null);\n  const prevTabValue = useRef(tabValue);\n  \n  \n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      \n      \n      if (scrollTop > 500) {\n        setShowBackToTop(true);\n      } else {\n        setShowBackToTop(false);\n      }\n      \n      \n      if (scrollTop > lastScrollTop && scrollTop > 100) {\n        setIsMobileNavVisible(false);\n      } else {\n        setIsMobileNavVisible(true);\n      }\n      \n      setLastScrollTop(scrollTop);\n      \n      \n      if (scrollTop > 20) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n    };\n    \n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [lastScrollTop]);\n  \n  \n  useEffect(() => {\n    const loadInitialData = async () => {\n      if (typeof setCurrentSection === 'function') {\n        console.log('Инициализация страницы музыки');\n        \n        try {\n          // Загружаем все треки\n          console.log('Загрузка всех треков при открытии страницы музыки');\n          setCurrentSection('all');\n          if (musicContext.resetPagination) {\n            await musicContext.resetPagination('all', true);\n          }\n\n          // Загружаем понравившиеся треки\n          console.log('Загрузка понравившихся треков');\n          setCurrentSection('liked');\n          if (musicContext.resetPagination) {\n            await musicContext.resetPagination('liked');\n          }\n\n          // Возвращаемся к начальной секции\n          const initialSection = section || 'categories';\n          setCurrentSection(initialSection === 'categories' ? 'all' : initialSection);\n        } catch (error) {\n          console.error('Ошибка при загрузке треков:', error);\n        }\n      }\n    };\n    \n    loadInitialData();\n    // Загружаем чарты и артистов только при монтировании\n    fetchCharts();\n    fetchPopularArtists();\n  }, []); // Пустой массив зависимостей для выполнения только при монтировании\n  \n  \n  const fetchCharts = useCallback(async () => {\n    try {\n      setChartsLoading(true);\n      const response = await axios.get('/api/music/charts');\n      if (response.data.success) {\n        \n        const receivedCharts = response.data.charts;\n        \n        \n        if (receivedCharts) {\n          \n          const likedTrackIds = new Set(likedTracks.map(track => track.id));\n          \n          \n          const syncLikes = (tracks) => {\n            if (!tracks || !Array.isArray(tracks)) return tracks;\n            \n            return tracks.map(track => {\n              if (!track || !track.id) return track;\n              \n              \n              const isLiked = likedTrackIds.has(track.id);\n              \n              \n              const existingTrack = \n                currentTrack?.id === track.id ? currentTrack :\n                tracks.find(t => t.id === track.id) ||\n                popularTracks.find(t => t.id === track.id) ||\n                newTracks.find(t => t.id === track.id) ||\n                randomTracks.find(t => t.id === track.id);\n                \n              if (existingTrack) {\n                return { ...track, is_liked: existingTrack.is_liked };\n              }\n              \n              \n              return { ...track, is_liked: isLiked };\n            });\n          };\n          \n          \n          const updatedCharts = {\n            most_played: syncLikes(receivedCharts.most_played),\n            trending: syncLikes(receivedCharts.trending),\n            most_liked: syncLikes(receivedCharts.most_liked),\n            new_releases: syncLikes(receivedCharts.new_releases)\n          };\n          \n          \n          setCharts(updatedCharts);\n        } else {\n          setCharts(response.data.charts);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching charts:', error);\n    } finally {\n      setChartsLoading(false);\n    }\n  }, [likedTracks]); // Нам нужны только likedTracks для проверки лайков\n  \n  \n  useEffect(() => {\n    const handleUrlSync = () => {\n      const currentSection = section || 'categories';\n      const targetSection = viewMode === 'categories' ? 'categories' : \n                          tabValue === 0 ? 'liked' : 'all';\n\n      // Если текущий раздел совпадает с целевым, ничего не делаем\n      if (currentSection === targetSection) return;\n\n      // Если URL не соответствует состоянию, обновляем URL\n      if (viewMode === 'categories' && currentSection !== 'categories') {\n        navigate('/music/categories', { replace: true });\n      } else if (viewMode === 'tracks') {\n        const section = tabValue === 0 ? 'liked' : 'all';\n        if (currentSection !== section) {\n          navigate(`/music/${section}`, { replace: true });\n        }\n      }\n    };\n\n    handleUrlSync();\n  }, [viewMode, tabValue, section, navigate]);\n\n  \n  \n  const fetchPublicPlaylists = useCallback(async () => {\n    try {\n      console.log(\"Fetching public playlists\");\n      \n      const response = await fetch('/api/music/playlists/public');\n      \n      if (!response.ok) {\n        console.error(\"Error fetching public playlists:\", response.statusText);\n        return [];\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        console.log(\"Public playlists fetched:\", data.playlists.length);\n        return data.playlists;\n      } else {\n        console.error(\"Error fetching public playlists:\", data);\n        return [];\n      }\n    } catch (error) {\n      console.error(\"Exception fetching public playlists:\", error);\n      return [];\n    }\n  }, []);\n\n  \n  const fetchUserPlaylists = useCallback(async () => {\n    try {\n      setIsPlaylistsLoading(true);\n      console.log(\"Fetching user playlists\");\n      \n      const response = await fetch('/api/music/playlists');\n      \n      if (!response.ok) {\n        console.error(\"Error fetching playlists:\", response.statusText);\n        setIsPlaylistsLoading(false);\n        return;\n      }\n      \n      const text = await response.text();\n      console.log(\"Raw playlist response:\", text);\n      \n      \n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (e) {\n        console.error(\"Failed to parse playlists response as JSON\", e);\n        setIsPlaylistsLoading(false);\n        return;\n      }\n      \n      let userPlaylists = [];\n      \n      if (data.success) {\n        console.log(\"User playlists fetched:\", data.playlists.length);\n        \n        \n        userPlaylists = await Promise.all(data.playlists.map(async playlist => {\n          \n          let previewTracks = [];\n          try {\n            const detailResponse = await fetch(`/api/music/playlists/${playlist.id}`);\n            if (detailResponse.ok) {\n              const detailData = await detailResponse.json();\n              if (detailData.success && detailData.playlist && detailData.playlist.tracks) {\n                previewTracks = detailData.playlist.tracks.slice(0, 3).map(track => ({\n                  id: track.id,\n                  title: track.title,\n                  artist: track.artist,\n                  cover_path: track.cover_path\n                }));\n              }\n            }\n          } catch (error) {\n            console.error(`Error fetching preview tracks for playlist ${playlist.id}:`, error);\n          }\n          \n          return {\n            id: playlist.id,\n            name: playlist.name,\n            description: playlist.description || '',\n            is_public: playlist.is_public,\n            cover_image: playlist.cover_url || \"/static/uploads/system/playlist_placeholder.jpg\",\n            tracks_count: playlist.track_count || 0,\n            created_at: playlist.created_at,\n            updated_at: playlist.updated_at,\n            is_owner: true, \n            preview_tracks: previewTracks\n          };\n        }));\n      } else {\n        console.error(\"Error fetching user playlists:\", data);\n      }\n      \n      \n      const publicPlaylists = await fetchPublicPlaylists();\n      \n      \n      const mappedPublicPlaylists = publicPlaylists.map(playlist => ({\n        id: playlist.id,\n        name: playlist.name,\n        description: playlist.description || '',\n        is_public: true,\n        cover_image: playlist.cover_url || playlist.cover_image || \"/static/uploads/system/playlist_placeholder.jpg\",\n        tracks_count: playlist.tracks_count || 0,\n        created_at: playlist.created_at,\n        updated_at: playlist.updated_at,\n        owner: playlist.owner,\n        is_owner: false, \n        preview_tracks: playlist.preview_tracks || []\n      }));\n      \n      \n      const publicPlaylistIds = new Set(mappedPublicPlaylists.map(p => p.id));\n      const uniqueUserPlaylists = userPlaylists.filter(p => !publicPlaylistIds.has(p.id) || p.is_owner);\n      \n      \n      setPlaylists([...uniqueUserPlaylists, ...mappedPublicPlaylists]);\n      \n    } catch (error) {\n      console.error(\"Exception fetching playlists:\", error);\n      setPlaylists([]);\n    } finally {\n      setIsPlaylistsLoading(false);\n    }\n  }, [fetchPublicPlaylists]);\n\n  \n  useEffect(() => {\n    if (mainTab === 1) {\n      fetchUserPlaylists();\n    }\n  }, [mainTab, fetchUserPlaylists]);\n\n  \n  \n  const createPlaylist = async (playlistData) => {\n    setLoading(true);\n    try {\n      console.log(\"Creating playlist with data:\", playlistData);\n      \n      if (playlistData instanceof FormData) {\n        console.log(\"FormData entries:\");\n        for (let [key, value] of playlistData.entries()) {\n          console.log(key, value);\n        }\n      }\n      \n      const response = await fetch('/api/music/playlists', {\n        method: 'POST',\n        \n        body: playlistData\n      });\n      \n      const text = await response.text();\n      console.log(\"Raw response:\", text);\n      \n      \n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (e) {\n        console.error(\"Failed to parse response as JSON\", e);\n        setSnackbar({\n          open: true,\n          message: \"Error creating playlist: Server returned invalid response\",\n          severity: 'error'\n        });\n        setLoading(false);\n        return { success: false };\n      }\n      \n      if (response.ok) {\n        console.log(\"Playlist created:\", data);\n        setSnackbar({\n          open: true,\n          message: 'Playlist created successfully',\n          severity: 'success'\n        });\n        fetchUserPlaylists();\n        return { success: true, data };\n      } else {\n        console.error(\"Error creating playlist:\", data);\n        setSnackbar({\n          open: true,\n          message: `Error creating playlist: ${data.error || response.statusText}`,\n          severity: 'error'\n        });\n        return { success: false };\n      }\n    } catch (error) {\n      console.error(\"Exception creating playlist:\", error);\n      setSnackbar({\n        open: true,\n        message: `Error creating playlist: ${error.message}`,\n        severity: 'error'\n      });\n      return { success: false };\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  \n  const updatePlaylist = async (playlistData, playlistId) => {\n    setLoading(true);\n    try {\n      console.log(`Updating playlist ${playlistId} with data:`, playlistData);\n      \n      if (playlistData instanceof FormData) {\n        console.log(\"FormData entries:\");\n        for (let [key, value] of playlistData.entries()) {\n          console.log(key, value);\n        }\n      }\n      \n      const response = await fetch(`/api/music/playlists/${playlistId}`, {\n        method: 'PUT',\n        body: playlistData\n      });\n      \n      const text = await response.text();\n      console.log(\"Raw response:\", text);\n      \n      \n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (e) {\n        console.error(\"Failed to parse response as JSON\", e);\n        setSnackbar({\n          open: true,\n          message: \"Error updating playlist: Server returned invalid response\",\n          severity: 'error'\n        });\n        setLoading(false);\n        return { success: false };\n      }\n      \n      if (response.ok) {\n        console.log(\"Playlist updated:\", data);\n        setSnackbar({\n          open: true,\n          message: 'Playlist updated successfully',\n          severity: 'success'\n        });\n        fetchUserPlaylists();\n        return { success: true, data };\n      } else {\n        console.error(\"Error updating playlist:\", data);\n        setSnackbar({\n          open: true,\n          message: `Error updating playlist: ${data.error || response.statusText}`,\n          severity: 'error'\n        });\n        return { success: false };\n      }\n    } catch (error) {\n      console.error(\"Exception updating playlist:\", error);\n      setSnackbar({\n        open: true,\n        message: `Error updating playlist: ${error.message}`,\n        severity: 'error'\n      });\n      return { success: false };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const deletePlaylist = async (playlistId) => {\n    setLoading(true);\n    try {\n      console.log(`Deleting playlist ${playlistId}`);\n      \n      const response = await fetch(`/api/music/playlists/${playlistId}`, {\n        method: 'DELETE'\n      });\n      \n      const text = await response.text();\n      console.log(\"Raw response:\", text);\n      \n      \n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (e) {\n        console.error(\"Failed to parse response as JSON\", e);\n        setSnackbar({\n          open: true,\n          message: \"Error deleting playlist: Server returned invalid response\",\n          severity: 'error'\n        });\n        setLoading(false);\n        return { success: false };\n      }\n      \n      if (response.ok) {\n        console.log(\"Playlist deleted:\", data);\n        setSnackbar({\n          open: true,\n          message: 'Playlist deleted successfully',\n          severity: 'success'\n        });\n        fetchUserPlaylists();\n        return { success: true };\n      } else {\n        console.error(\"Error deleting playlist:\", data);\n        setSnackbar({\n          open: true,\n          message: `Error deleting playlist: ${data.error || response.statusText}`,\n          severity: 'error'\n        });\n        return { success: false };\n      }\n    } catch (error) {\n      console.error(\"Exception deleting playlist:\", error);\n      setSnackbar({\n        open: true,\n        message: `Error deleting playlist: ${error.message}`,\n        severity: 'error'\n      });\n      return { success: false };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const addTrackToPlaylist = async (playlistId, trackId) => {\n    setLoading(true);\n    try {\n      console.log(`Adding track ${trackId} to playlist ${playlistId}`);\n      \n      const response = await fetch(`/api/music/playlists/${playlistId}/tracks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ track_ids: [trackId] })\n      });\n      \n      const text = await response.text();\n      console.log(\"Raw response:\", text);\n      \n      \n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (e) {\n        console.error(\"Failed to parse response as JSON\", e);\n        setSnackbar({\n          open: true,\n          message: \"Error adding track: Server returned invalid response\",\n          severity: 'error'\n        });\n        setLoading(false);\n        return { success: false };\n      }\n      \n      if (response.ok) {\n        console.log(\"Track added:\", data);\n        setSnackbar({\n          open: true,\n          message: 'Track added to playlist successfully',\n          severity: 'success'\n        });\n        fetchUserPlaylists();\n        return { success: true };\n      } else {\n        console.error(\"Error adding track:\", data);\n        setSnackbar({\n          open: true,\n          message: `Error adding track: ${data.error || response.statusText}`,\n          severity: 'error'\n        });\n        return { success: false };\n      }\n    } catch (error) {\n      console.error(\"Exception adding track to playlist:\", error);\n      setSnackbar({\n        open: true,\n        message: `Error adding track: ${error.message}`,\n        severity: 'error'\n      });\n      return { success: false };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const removeTrackFromPlaylist = async (playlistId, trackId) => {\n    setLoading(true);\n    try {\n      console.log(`Removing track ${trackId} from playlist ${playlistId}`);\n      \n      const response = await fetch(`/api/music/playlists/${playlistId}/tracks/${trackId}`, {\n        method: 'DELETE'\n      });\n      \n      const text = await response.text();\n      console.log(\"Raw response:\", text);\n      \n      \n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (e) {\n        console.error(\"Failed to parse response as JSON\", e);\n        setSnackbar({\n          open: true,\n          message: \"Error removing track: Server returned invalid response\",\n          severity: 'error'\n        });\n        setLoading(false);\n        return { success: false };\n      }\n      \n      if (response.ok) {\n        console.log(\"Track removed:\", data);\n        setSnackbar({\n          open: true,\n          message: 'Track removed from playlist successfully',\n          severity: 'success'\n        });\n        fetchUserPlaylists();\n        return { success: true };\n      } else {\n        console.error(\"Error removing track:\", data);\n        setSnackbar({\n          open: true,\n          message: `Error removing track: ${data.error || response.statusText}`,\n          severity: 'error'\n        });\n        return { success: false };\n      }\n    } catch (error) {\n      console.error(\"Exception removing track from playlist:\", error);\n      setSnackbar({\n        open: true,\n        message: `Error removing track: ${error.message}`,\n        severity: 'error'\n      });\n      return { success: false };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  \n  const playPlaylist = useCallback(async (playlistId) => {\n    setLoading(true);\n    try {\n      console.log(`Getting playlist ${playlistId} for playback`);\n      \n      const response = await fetch(`/api/music/playlists/${playlistId}`);\n      \n      const text = await response.text();\n      console.log(\"Raw response:\", text);\n      \n      \n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (e) {\n        console.error(\"Failed to parse response as JSON\", e);\n        setSnackbar({\n          open: true,\n          message: \"Error playing playlist: Server returned invalid response\",\n          severity: 'error'\n        });\n        setLoading(false);\n        return { success: false };\n      }\n      \n      if (response.ok && data.success && data.playlist.tracks.length > 0) {\n        console.log(\"Playing playlist:\", data.playlist);\n        \n        const playlistSection = `playlist_${playlistId}`;\n        setCurrentSection(playlistSection);\n        \n        \n        const firstTrack = data.playlist.tracks[0];\n        playTrack(firstTrack, playlistSection);\n        \n        \n        if (typeof musicContext.setPlaylistTracks === 'function') {\n          musicContext.setPlaylistTracks(data.playlist.tracks, playlistSection);\n        }\n        \n        return { success: true };\n      } else if (data.success && data.playlist.tracks.length === 0) {\n        setSnackbar({\n          open: true,\n          message: 'This playlist has no tracks',\n          severity: 'info'\n        });\n        return { success: false };\n      } else {\n        console.error(\"Error playing playlist:\", data);\n        setSnackbar({\n          open: true,\n          message: `Error playing playlist: ${data.error || response.statusText}`,\n          severity: 'error'\n        });\n        return { success: false };\n      }\n    } catch (error) {\n      console.error(\"Exception playing playlist:\", error);\n      setSnackbar({\n        open: true,\n        message: `Error playing playlist: ${error.message}`,\n        severity: 'error'\n      });\n      return { success: false };\n    } finally {\n      setLoading(false);\n    }\n  }, [playTrack, setCurrentSection, musicContext]);\n\n  \n  const handleTabChange = useCallback((event, newValue) => {\n    \n    const oldValue = tabValue;\n    \n    \n    setTabValue(newValue);\n    \n    \n    if (oldValue !== newValue) {\n      console.log(`Переключение вкладки с ${oldValue} на ${newValue}`);\n      \n      \n      window.scrollTo(0, 0);\n      \n      \n      if (searchQuery) {\n        setSearchQuery('');\n        if (searchInputRef.current) {\n          searchInputRef.current.value = '';\n        }\n      }\n      \n      \n      const tabToType = {\n        0: 'liked',\n        1: 'all'\n      };\n      \n      const newType = tabToType[newValue] || 'all';\n      \n      \n      setLocalLoading(true);\n      \n      \n      console.log(\"Текущее состояние треков:\");\n      console.log(`- liked: ${likedTracks ? likedTracks.length : 0} треков`);\n      console.log(`- all: ${tracks ? tracks.length : 0} треков`);\n      \n      \n      if (musicContext.resetPagination) {\n        console.log(`Сбрасываем пагинацию для типа ${newType}`);\n        \n        const randomize = newType === 'all';\n        musicContext.resetPagination(newType, randomize).then(() => {\n          \n          setLocalLoading(false);\n        }).catch(err => {\n          console.error(`Ошибка при загрузке типа ${newType}:`, err);\n          setLocalLoading(false);\n        });\n      } else {\n        \n        setTimeout(() => {\n          setLocalLoading(false);\n        }, 800);\n      }\n      \n      \n      if (musicContext.setCurrentSection) {\n        console.log(`Устанавливаем секцию ${newType} в контексте`);\n        musicContext.setCurrentSection(newType);\n      }\n    }\n  }, [tabValue, searchQuery, musicContext.resetPagination, musicContext.setCurrentSection, \n      likedTracks, tracks, setLocalLoading]);\n\n  const handleTrackClick = useCallback((track) => {\n    playTrack(track);\n  }, [playTrack]);\n\n  const handleOpenFullScreenPlayer = useCallback(() => {\n    setFullScreenPlayerOpen(true);\n  }, []);\n\n  const handleCloseFullScreenPlayer = useCallback(() => {\n    setFullScreenPlayerOpen(false);\n    \n    document.body.style.overflow = '';\n    document.body.style.touchAction = '';\n  }, []);\n\n  const handleOpenUploadDialog = useCallback(() => {\n    setUploadDialogOpen(true);\n  }, []);\n\n  const handleCloseUploadDialog = useCallback(() => {\n    setUploadDialogOpen(false);\n  }, []);\n\n  \n  const handleMainTabChange = useCallback((event, newValue) => {\n    setMainTab(newValue);\n  }, []);\n\n  \n  const handleOpenPlaylistDialog = useCallback((playlist = null) => {\n    setSelectedPlaylist(playlist);\n    setPlaylistDialogOpen(true);\n  }, []);\n\n  \n  const handleClosePlaylistDialog = useCallback(() => {\n    setSelectedPlaylist(null);\n    setPlaylistDialogOpen(false);\n  }, []);\n\n  \n  const handleOpenPlaylistTracksDialog = useCallback((playlist) => {\n    setSelectedPlaylist(playlist);\n    setPlaylistTracksDialogOpen(true);\n  }, []);\n\n  \n  const handleClosePlaylistTracksDialog = useCallback(() => {\n    setSelectedPlaylist(null);\n    setPlaylistTracksDialogOpen(false);\n  }, []);\n\n  \n  \n  const currentTracks = useMemo(() => {\n    if (searchQuery.trim()) return searchResults;\n    if (tabValue === 0) return likedTracks || [];\n    return tracks || [];\n  }, [tabValue, tracks, likedTracks, searchQuery, searchResults]);\n\n  \n  const debouncedSearch = useCallback(\n    debounce((query) => {\n      if (query.trim()) {\n        setSearchLoading(true);\n        \n        \n        musicContext.searchTracks(query)\n          .then((results) => {\n            setSearchResults(results || []);\n            setSearchLoading(false);\n            \n            if (results.length === 0) {\n              setSnackbar({\n                open: true,\n                message: 'По вашему запросу ничего не найдено',\n                severity: 'info'\n              });\n            }\n          })\n          .catch((error) => {\n            console.error('Error searching tracks:', error);\n            setSearchLoading(false);\n            \n            setSnackbar({\n              open: true,\n              message: 'Ошибка при поиске. Попробуйте позже.',\n              severity: 'error'\n            });\n          });\n      } else {\n        setSearchResults([]);\n      }\n    }, 500),\n    [setSnackbar, musicContext.searchTracks]\n  );\n\n  \n  const handleSearchChange = (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    \n    \n    if (!query.trim()) {\n      \n      clearSearch();\n      return;\n    }\n    \n    \n    debouncedSearch(query);\n  };\n  \n  const handleSearchFocus = () => {\n    setIsSearchFocused(true);\n  };\n  \n  const handleSearchBlur = () => {\n    setTimeout(() => {\n      setIsSearchFocused(false);\n    }, 200);\n  };\n\n  \n  const clearSearch = () => {\n    setSearchQuery('');\n    if (searchInputRef.current) {\n      searchInputRef.current.value = '';\n    }\n    \n    \n    const tabToType = {\n      0: 'liked',\n      1: 'all'\n    };\n    \n    \n    const currentType = tabToType[tabValue] || 'all';\n    \n    \n    if (musicContext.resetPagination) {\n      musicContext.resetPagination(currentType);\n    }\n    \n    console.log('Поисковый запрос очищен');\n  };\n\n  \n  const displayedTracks = useMemo(() => {\n    return searchQuery.trim() ? searchResults : currentTracks;\n  }, [searchQuery, searchResults, currentTracks]);\n\n  \n  const effectiveLoading = useMemo(() => {\n    return isLoading || localLoading;\n  }, [isLoading, localLoading]);\n\n  \n  useEffect(() => {\n    console.log('[ScrollEffect] Инициализация эффекта бесконечной прокрутки', { \n      tabValue, \n      hasMoreTracks, \n      isLoadingMore,\n      effectiveLoading,\n      searchQuery\n    });\n    \n    if (typeof loadMoreTracks !== 'function') {\n      console.warn('[ScrollEffect] Infinite scroll functionality requires loadMoreTracks function');\n      return;\n    }\n\n    \n    const tabToType = {\n      0: 'liked',\n      1: 'all'\n    };\n    \n    \n    const currentType = tabToType[tabValue] || 'all';\n    \n    \n    const currentHasMore = typeof musicContext.hasMoreByType === 'object' \n      ? musicContext.hasMoreByType[currentType] !== false \n      : hasMoreTracks;\n\n    console.log(`[ScrollEffect] Настройка бесконечного скролла для вкладки ${tabValue}, тип: ${currentType}, есть еще треки: ${currentHasMore}`);\n    console.log(`[ScrollEffect] Текущий статус для типа ${currentType}:`, {\n      hasMoreTracks,\n      hasMoreByType: musicContext.hasMoreByType,\n      isLoadingMore,\n      effectiveLoading,\n      tracksCount: currentType === 'liked' ? likedTracks.length : tracks.length\n    });\n\n    \n    let isLoadingData = false;\n\n    const observer = new IntersectionObserver(\n      async (entries) => {\n        const [entry] = entries;\n        console.log(`[ScrollEffect] IntersectionObserver вызван, пересечение: ${entry.isIntersecting}`);\n        \n        \n        if (entry.isIntersecting && !isLoadingMore && !isLoadingData && !effectiveLoading && currentHasMore) {\n          console.log(`[ScrollEffect] Условие загрузки для типа ${currentType} выполнено, начинаем загрузку треков`);\n          setIsLoadingMore(true);\n          isLoadingData = true;\n          \n          try {\n            console.log(`[ScrollEffect] Вызываем loadMoreTracks для типа ${currentType}`);\n            const result = await loadMoreTracks(currentType);\n            \n            \n            if (result === false) {\n              console.log(`[ScrollEffect] loadMoreTracks вернул false, больше нет треков для типа: ${currentType}`);\n              setHasMoreTracks(false);\n            } else {\n              console.log(`[ScrollEffect] loadMoreTracks вернул true, загружено больше треков для типа: ${currentType}`);\n            }\n          } catch (error) {\n            console.error('[ScrollEffect] Ошибка при загрузке треков:', error);\n            setHasMoreTracks(false);\n          } finally {\n            console.log(`[ScrollEffect] Завершаем загрузку для типа ${currentType}`);\n            setIsLoadingMore(false);\n            isLoadingData = false;\n          }\n        } else if (entry.isIntersecting) {\n          console.log(`[ScrollEffect] Пересечение обнаружено, но условия не выполнены:`, {\n            isLoadingMore,\n            isLoadingData,\n            effectiveLoading,\n            currentHasMore\n          });\n        }\n      },\n      { threshold: 0.2 } \n    );\n\n    \n    if (loaderRef.current && currentHasMore && !effectiveLoading && !searchQuery) {\n      console.log('[ScrollEffect] Подключаем IntersectionObserver к элементу загрузки:', currentType);\n      observer.observe(loaderRef.current);\n    } else {\n      console.log('[ScrollEffect] Не удалось подключить IntersectionObserver:', {\n        loaderExists: !!loaderRef.current,\n        hasMore: currentHasMore,\n        isLoading: effectiveLoading,\n        hasSearchQuery: !!searchQuery\n      });\n    }\n\n    return () => {\n      console.log(`[ScrollEffect] Очистка эффекта бесконечной прокрутки для типа ${currentType}`);\n      if (loaderRef.current) {\n        observer.unobserve(loaderRef.current);\n      }\n    };\n  }, [hasMoreTracks, isLoadingMore, loadMoreTracks, tabValue, musicContext.hasMoreByType, effectiveLoading, searchQuery, tracks.length, likedTracks.length]);\n\n  \n  useEffect(() => {\n    if (prevTabValue.current !== tabValue) {\n      prevTabValue.current = tabValue;\n      \n      \n      window.scrollTo(0, 0);\n      \n      \n      const tabToType = {\n        0: 'liked',\n        1: 'all'\n      };\n      \n      \n      const currentType = tabToType[tabValue] || 'all';\n      \n      \n      if (searchQuery) {\n        setSearchQuery('');\n      }\n      \n      \n      if (musicContext.resetPagination) {\n        musicContext.resetPagination(currentType);\n      }\n      \n      \n      if (musicContext.setCurrentSection) {\n        musicContext.setCurrentSection(currentType);\n      }\n      \n      console.log(`Переключение на вкладку ${tabValue}, тип: ${currentType}`);\n      \n      \n      if (typeof musicContext.hasMoreByType === 'object') {\n        const hasMore = musicContext.hasMoreByType[currentType];\n        setHasMoreTracks(hasMore !== false);\n      }\n    }\n  }, [tabValue, musicContext.hasMoreByType, musicContext.resetPagination, musicContext.setCurrentSection, searchQuery]);\n\n  \n  const getSectionData = () => {\n    const coverTypes = ['liked', 'all'];\n    const type = coverTypes[tabValue] || 'all';\n    \n    switch(tabValue) {\n      case 0:\n        return {\n          title: \"Мне нравится\",\n          subtitle: \"Ваши любимые треки\",\n          type: \"playlist\",\n          cover: getCoverWithFallback(\"/uploads/system/like_playlist.jpg\", \"liked\"),\n          tracks: likedTracks || []\n        };\n      case 1: \n        return {\n          title: \"Все треки\",\n          subtitle: \"Треки в случайном порядке\",\n          type: \"collection\",\n          cover: getCoverWithFallback(\"/uploads/system/new_tracks.jpg\", \"all\"),\n          tracks: tracks || []\n        };\n      default:\n        return {\n          title: \"Музыка\",\n          subtitle: \"\",\n          type: \"collection\",\n          cover: getCoverWithFallback(\"/uploads/system/album_placeholder.jpg\", \"album\"),\n          tracks: []\n        };\n    }\n  };\n  \n  const sectionData = getSectionData();\n\n  \n  useEffect(() => {\n    return () => {\n      \n      document.body.style.overflow = '';\n      document.body.style.touchAction = '';\n    };\n  }, []);\n\n  \n  const copyTrackLink = (track, event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    \n    const trackLink = `${window.location.origin}/music/track/${track.id}`;\n    navigator.clipboard.writeText(trackLink)\n      .then(() => {\n        setSnackbar({\n          open: true,\n          message: 'Ссылка на трек скопирована в буфер обмена',\n          severity: 'success'\n        });\n      })\n      .catch(err => {\n        console.error('Не удалось скопировать ссылку:', err);\n        setSnackbar({\n          open: true,\n          message: 'Не удалось скопировать ссылку',\n          severity: 'error'\n        });\n      });\n    \n    \n    handleCloseContextMenu();\n  };\n  \n  \n  const shareTrack = (track, event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    \n    \n    copyTrackLink(track);\n    \n    \n    handleCloseContextMenu();\n  };\n  \n  \n  const handleContextMenu = (event, track) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setSelectedTrack(track);\n    setContextMenu({\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n    });\n  };\n  \n  \n  const handleCloseContextMenu = () => {\n    setContextMenu(null);\n  };\n  \n  \n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbar({...snackbar, open: false});\n  };\n  \n  \n  useEffect(() => {\n    const pathParts = location.pathname.split('/');\n    const trackId = pathParts[pathParts.length - 2] === 'track' ? pathParts[pathParts.length - 1] : null;\n    if (trackId) {\n      \n      const playTrackFromUrl = async () => {\n        try {\n          \n          const response = await fetch(`/api/music/${trackId}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch track');\n          }\n          \n          const data = await response.json();\n          if (data.success && data.track) {\n            console.log('Playing track from URL parameter:', data.track);\n            \n            playTrack(data.track);\n            \n            setFullScreenPlayerOpen(true);\n          }\n        } catch (error) {\n          console.error('Error playing track from URL:', error);\n        }\n      };\n      \n      playTrackFromUrl();\n    }\n  }, [searchParams]);\n\n  \n  const handleSwitchToTracks = useCallback((index) => {\n    setTabValue(index);\n    setViewMode('tracks');\n    const section = index === 0 ? 'liked' : 'all';\n    navigate(`/music/${section}`);\n  }, [navigate]);\n  \n  const handleBackToCategories = useCallback(() => {\n    setViewMode('categories');\n    navigate('/music/categories');\n  }, [navigate]);\n  \n  const scrollToTop = useCallback(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, []);\n  \n  const handleRefresh = useCallback(async () => {\n    setRefreshing(true);\n    const currentType = tabValue === 0 ? 'liked' : 'all';\n    \n    if (musicContext.resetPagination) {\n      await musicContext.resetPagination(currentType);\n    }\n    \n    setTimeout(() => {\n      setRefreshing(false);\n    }, 1000);\n  }, [tabValue, musicContext]);\n  \n  const handleToggleSearch = useCallback(() => {\n    setShowSearchBar(prev => !prev);\n    \n    if (!showSearchBar) {\n      setTimeout(() => {\n        if (searchInputRef.current) {\n          searchInputRef.current.focus();\n        }\n      }, 300);\n    } else {\n      setSearchQuery('');\n      if (searchInputRef.current) {\n        searchInputRef.current.value = '';\n      }\n    }\n  }, [showSearchBar]);\n\n  \n  const handleLikeTrack = (trackId) => {\n    likeTrack(trackId);\n  };\n\n  \n  useEffect(() => {\n    if (charts && likedTracks) {\n      \n      const likedTrackIds = new Set(likedTracks.map(track => track.id));\n      \n      \n      const updateChartsWithLikes = () => {\n        \n        const updateLikedStatus = (chartTracks) => {\n          if (!chartTracks || !Array.isArray(chartTracks)) return chartTracks;\n          \n          return chartTracks.map(track => {\n            if (!track || !track.id) return track;\n            \n            return {\n              ...track,\n              is_liked: likedTrackIds.has(track.id)\n            };\n          });\n        };\n        \n        \n        setCharts(prevCharts => ({\n          ...prevCharts,\n          most_played: updateLikedStatus(prevCharts.most_played),\n          new_releases: updateLikedStatus(prevCharts.new_releases),\n          trending: updateLikedStatus(prevCharts.trending),\n          most_liked: updateLikedStatus(prevCharts.most_liked)\n        }));\n      };\n      \n      \n      updateChartsWithLikes();\n    }\n  }, [likedTracks]);\n\n  const renderTrackItem = (track, index) => {\n    const isActive = currentTrack && currentTrack.id === track.id;\n    const isCurrentlyPlaying = isActive && isPlaying;\n    \n    const goToArtist = (e) => {\n      e.stopPropagation();\n      if (track.artist_info && track.artist_info.id) {\n        navigate(`/artist/${track.artist_info.id}`);\n      } else {\n        console.warn('Artist ID not available');\n\n      }\n    };\n\n    return (\n      <TrackItem \n        key={track.id}\n        active={isActive}\n        onClick={() => handleTrackClick(track)}\n        onContextMenu={(e) => handleContextMenu(e, track)}\n      >\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', borderRadius: 1, overflow: 'hidden' }}>\n            <Avatar \n              variant=\"rounded\" \n              src={track.cover_path || '/static/uploads/system/album_placeholder.jpg'} \n              alt={track.title}\n              sx={{ \n                width: 50, \n                height: 50, \n                boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n                bgcolor: 'rgba(0,0,0,0.2)'\n              }}\n            />\n            <Box \n              sx={{ \n                position: 'absolute', \n                top: 0, \n                left: 0, \n                right: 0, \n                bottom: 0,\n                bgcolor: 'rgba(0,0,0,0.4)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                opacity: isCurrentlyPlaying ? 1 : 0,\n                transition: 'opacity 0.2s ease',\n              }}\n            >\n              {isCurrentlyPlaying ? <Pause fontSize=\"small\" /> : <PlayArrow fontSize=\"small\" />}\n            </Box>\n            {track.is_verified && (\n              <Box \n                sx={{\n                  position: 'absolute',\n                  top: 4,\n                  right: 4,\n                  bgcolor: 'rgba(0, 0, 0, 0.6)',\n                  borderRadius: '50%',\n                  width: 16,\n                  height: 16,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <Box \n                  component=\"span\"\n                  sx={{\n                    width: 12,\n                    height: 12,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    color: theme.palette.primary.main,\n                    fontSize: 10\n                  }}\n                >\n                  ✓\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </ListItemAvatar>\n        \n        <ListItemText \n          primary={\n            <Typography \n              variant=\"body1\" \n              noWrap \n              sx={{ \n                color: isActive ? theme.palette.primary.main : 'inherit',\n                fontWeight: isActive ? 500 : 400\n              }}\n            >\n              {track.title}\n            </Typography>\n          }\n          secondary={\n            <Box component=\"span\" sx={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\n              {track.artist && track.artist.split(',').map((artist, idx, arr) => (\n                <React.Fragment key={idx}>\n                  <Typography \n                    component=\"span\" \n                    variant=\"body2\" \n                    onClick={(e) => {\n                      e.stopPropagation();\n                      goToArtist(e);\n                    }}\n                    sx={{ \n                      cursor: track.artist_info && track.artist_info.id ? 'pointer' : 'default',\n                      '&:hover': {\n                        color: track.artist_info && track.artist_info.id ? theme.palette.primary.main : 'inherit',\n                        textDecoration: track.artist_info && track.artist_info.id ? 'underline' : 'none'\n                      }\n                    }}\n                  >\n                    {artist.trim()}\n                  </Typography>\n                  {idx < arr.length - 1 && (\n                    <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\">\n                      , \n                    </Typography>\n                  )}\n                </React.Fragment>\n              ))}\n              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" noWrap>\n                {track.album ? ` • ${track.album} • ` : ' • '}\n                {formatDuration(track.duration)}\n              </Typography>\n            </Box>\n          }\n          sx={{ overflowX: 'hidden' }}\n        />\n        \n        <ListItemSecondaryAction>\n          <IconButton \n            edge=\"end\" \n            aria-label=\"like\"\n            onClick={(e) => {\n              e.stopPropagation();\n              handleLikeTrack(track.id);\n            }}\n            size=\"small\"\n          >\n            {track.is_liked ? \n              <Favorite fontSize=\"small\" color=\"error\" /> : \n              <FavoriteBorder fontSize=\"small\" />\n            }\n          </IconButton>\n        </ListItemSecondaryAction>\n      </TrackItem>\n    );\n  };\n\n\n  const fetchPopularArtists = useCallback(async () => {\n    try {\n      setArtistsLoading(true);\n      \n\n      const response = await axios.get('/api/moderator/artists?page=1&per_page=6');\n      \n      if (response.data.success) {\n        setPopularArtists(response.data.artists || []);\n      } else {\n        console.error('Ошибка при получении артистов:', response.data.error);\n      }\n    } catch (error) {\n      console.error('Ошибка при получении артистов:', error);\n    } finally {\n      setArtistsLoading(false);\n    }\n  }, []);\n  \n\n  const searchArtists = async (query) => {\n    if (!query || query.trim().length < 2) {\n      setArtistSearchResults([]);\n      return;\n    }\n    \n    try {\n      setIsArtistSearching(true);\n\n      const searchEndpoint = `/api/search/artists?query=${encodeURIComponent(query.trim())}`;\n      console.log('Searching artists with endpoint:', searchEndpoint);\n      \n      const response = await axios.get(searchEndpoint);\n      console.log('Artist search response:', response.data);\n      \n      if (response.data.success) {\n        setArtistSearchResults(response.data.artists || []);\n        console.log('Found artists:', response.data.artists.length);\n      } else {\n        console.error('Ошибка при поиске артистов:', response.data.error);\n        setArtistSearchResults([]);\n        setSnackbar({\n          open: true,\n          message: `Ошибка при поиске артистов: ${response.data.error || 'Неизвестная ошибка'}`,\n          severity: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Ошибка при поиске артистов:', error);\n      setArtistSearchResults([]);\n      \n\n      try {\n        console.log('Trying fallback search with moderator API');\n        const fallbackResponse = await axios.get(`/api/moderator/artists?search=${encodeURIComponent(query.trim())}&page=1&per_page=10`);\n        \n        if (fallbackResponse.data.success) {\n          console.log('Fallback search successful:', fallbackResponse.data);\n          setArtistSearchResults(fallbackResponse.data.artists || []);\n        } else {\n          setSnackbar({\n            open: true,\n            message: 'Ошибка при поиске артистов. Проверьте соединение.',\n            severity: 'error'\n          });\n        }\n      } catch (fallbackError) {\n        console.error('Fallback search also failed:', fallbackError);\n        setSnackbar({\n          open: true,\n          message: 'Ошибка при поиске артистов. Проверьте соединение.',\n          severity: 'error'\n        });\n      }\n    } finally {\n      setIsArtistSearching(false);\n    }\n  };\n  \n\n  const debouncedArtistSearch = useCallback(\n    debounce((query) => {\n      if (query.trim().length >= 2) {\n        searchArtists(query);\n      } else {\n        setArtistSearchResults([]);\n      }\n    }, 500),\n    []\n  );\n  \n\n  const handleArtistSearchChange = (e) => {\n    const query = e.target.value;\n    setArtistSearchQuery(query);\n    debouncedArtistSearch(query);\n  };\n  \n\n  const handleArtistClick = (artistId) => {\n    navigate(`/artist/${artistId}`);\n  };\n\n  \n  const handleOpenCreatePlaylist = useCallback(() => {\n    setEditingPlaylist(null);\n    setPlaylistModalOpen(true);\n  }, []);\n  \n  \n  const handleOpenEditPlaylist = useCallback((playlist) => {\n    setEditingPlaylist(playlist);\n    setPlaylistModalOpen(true);\n  }, []);\n  \n  \n  const handleClosePlaylistModal = useCallback(() => {\n    setPlaylistModalOpen(false);\n    setEditingPlaylist(null);\n  }, []);\n  \n  \n  const handleSavePlaylist = async (playlistData, playlistId) => {\n    if (playlistId) {\n      \n      const result = await updatePlaylist(playlistData, playlistId);\n      if (result.success) {\n        setPlaylistModalOpen(false);\n      }\n    } else {\n      \n      const result = await createPlaylist(playlistData);\n      if (result.success) {\n        setPlaylistModalOpen(false);\n      }\n    }\n  };\n  \n  \n  const handleAddTracksToPlaylist = useCallback(async (playlistId, trackIds) => {\n    setLocalLoading(true);\n    \n    try {\n      \n      const results = await Promise.all(\n        trackIds.map(trackId => addTrackToPlaylist(playlistId, trackId))\n      );\n      \n      const allSuccess = results.every(result => result === true);\n      \n      if (allSuccess) {\n        setSnackbar({\n          open: true,\n          message: `${trackIds.length} ${trackIds.length === 1 ? 'трек добавлен' : 'треков добавлено'} в плейлист`,\n          severity: 'success'\n        });\n        \n        \n        await fetchUserPlaylists();\n        \n        \n        if (editingPlaylist && editingPlaylist.id === playlistId) {\n          const response = await axios.get(`/api/music/playlists/${playlistId}`);\n          if (response.data.success) {\n            setEditingPlaylist(response.data.playlist);\n          }\n        }\n      }\n    } finally {\n      setLocalLoading(false);\n    }\n  }, [addTrackToPlaylist, fetchUserPlaylists, editingPlaylist]);\n  \n  \n  const handleRemoveTrackFromPlaylist = useCallback(async (playlistId, trackId) => {\n    setLocalLoading(true);\n    \n    try {\n      const success = await removeTrackFromPlaylist(playlistId, trackId);\n      \n      if (success) {\n        \n        await fetchUserPlaylists();\n        \n        \n        if (editingPlaylist && editingPlaylist.id === playlistId) {\n          const response = await axios.get(`/api/music/playlists/${playlistId}`);\n          if (response.data.success) {\n            setEditingPlaylist(response.data.playlist);\n          }\n        }\n      }\n    } finally {\n      setLocalLoading(false);\n    }\n  }, [removeTrackFromPlaylist, fetchUserPlaylists, editingPlaylist]);\n  \n  \n  const handleDeletePlaylist = useCallback(async (playlistId) => {\n    setLocalLoading(true);\n    \n    try {\n      const success = await deletePlaylist(playlistId);\n      \n      if (success) {\n        setPlaylistModalOpen(false);\n        setEditingPlaylist(null);\n        await fetchUserPlaylists();\n      }\n    } finally {\n      setLocalLoading(false);\n    }\n  }, [deletePlaylist, fetchUserPlaylists]);\n  \n  \n  const handlePlaylistMoreClick = useCallback((event, playlist) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setSelectedPlaylistForMenu(playlist);\n    setPlaylistContextMenu({\n      open: true,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n    });\n  }, []);\n  \n  \n  const handleClosePlaylistContextMenu = useCallback(() => {\n    setPlaylistContextMenu({\n      open: false,\n      mouseX: null,\n      mouseY: null\n    });\n  }, []);\n  \n  \n  const fetchPlaylistDetails = useCallback(async (playlistId) => {\n    setPlaylistDetailsLoading(true);\n    try {\n      const response = await fetch(`/api/music/playlists/${playlistId}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch playlist: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        console.log(\"Fetched playlist details:\", data.playlist);\n        return data.playlist;\n      } else {\n        console.error(\"Error fetching playlist:\", data.error);\n        setSnackbar({\n          open: true,\n          message: `Error fetching playlist: ${data.error}`,\n          severity: 'error'\n        });\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Exception fetching playlist:\", error);\n      setSnackbar({\n        open: true,\n        message: `Error: ${error.message}`,\n        severity: 'error'\n      });\n      return null;\n    } finally {\n      setPlaylistDetailsLoading(false);\n    }\n  }, []);\n  \n  \n  const handlePlaylistClick = useCallback(async (playlistId) => {\n    const playlistDetailsFromCache = playlists.find(p => p.id === playlistId);\n    \n    \n    setViewingPlaylist(playlistDetailsFromCache);\n    setPlaylistViewModalOpen(true);\n    \n    \n    try {\n      const fullDetails = await fetchPlaylistDetails(playlistId);\n      if (fullDetails) {\n        setViewingPlaylist(fullDetails);\n      }\n    } catch (error) {\n      console.error(\"Error loading playlist details:\", error);\n    }\n  }, [playlists, fetchPlaylistDetails]);\n\n  \n  const handleEditFromView = useCallback((playlist) => {\n    setEditingPlaylist(playlist);\n    setPlaylistModalOpen(true);\n  }, []);\n\n  \n  const handleAddTrackToPlaylistMenu = useCallback((trackId) => {\n    if (!trackId) return;\n    \n    \n    handleCloseContextMenu();\n    \n    \n    if (playlists && playlists.length > 0) {\n      \n      \n      const playlistId = playlists[0].id;\n      addTrackToPlaylist(playlistId, trackId);\n    } else {\n      \n      setSnackbar({\n        open: true,\n        message: 'У вас ещё нет плейлистов. Создайте плейлист сначала.',\n        severity: 'info'\n      });\n      \n      \n      handleOpenCreatePlaylist();\n    }\n  }, [playlists, handleCloseContextMenu, addTrackToPlaylist, handleOpenCreatePlaylist]);\n\n  \n  const handlePlayTrackFromPlaylist = useCallback((track) => {\n    if (viewingPlaylist) {\n      \n      const playlistSection = `playlist_${viewingPlaylist.id}`;\n      setCurrentSection(playlistSection);\n      \n      \n      playTrack(track, playlistSection);\n      \n      \n      if (typeof musicContext.setPlaylistTracks === 'function' && viewingPlaylist.tracks) {\n        musicContext.setPlaylistTracks(viewingPlaylist.tracks, playlistSection);\n      }\n    }\n  }, [viewingPlaylist, setCurrentSection, playTrack, musicContext]);\n\n  \n  useEffect(() => {\n    const playlistId = searchParams.get('playlist');\n    if (playlistId) {\n      \n      const fetchPlaylist = async () => {\n        try {\n          const response = await fetch(`/api/music/playlists/${playlistId}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch playlist');\n          }\n          \n          const data = await response.json();\n          if (data.success && data.playlist) {\n            console.log('Opening playlist from URL parameter:', data.playlist);\n            handleOpenPlaylistTracksDialog(data.playlist);\n          }\n        } catch (error) {\n          console.error('Error opening playlist from URL:', error);\n          setSnackbar({\n            open: true,\n            message: 'Не удалось открыть плейлист',\n            severity: 'error'\n          });\n        }\n      };\n      \n      fetchPlaylist();\n    }\n  }, [searchParams, handleOpenPlaylistTracksDialog]);\n\n  \n\n  \n  const fetchPlaylists = useCallback(async () => {\n    try {\n      setPlaylistsLoading(true);\n      const response = await axios.get('/api/music/playlists');\n      if (response.data.success) {\n        \n        let playlists = response.data.playlists;\n        if (mainTab === 1) { \n          playlists = playlists.filter(playlist => playlist.tracks_count > 0);\n        }\n        setPlaylists(playlists);\n      }\n      setPlaylistsLoading(false);\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n      setPlaylistsLoading(false);\n    }\n  }, [mainTab]);\n\n  // Начальная инициализация состояния из URL\n  useEffect(() => {\n    if (!section) return;\n\n    // Устанавливаем начальное состояние только один раз при монтировании\n    const initialSection = section;\n    switch(initialSection) {\n      case 'liked':\n        setTabValue(0);\n        setViewMode('tracks');\n        break;\n      case 'all':\n        setTabValue(1);\n        setViewMode('tracks');\n        break;\n      case 'categories':\n        setViewMode('categories');\n        break;\n      default:\n        navigate('/music/categories', { replace: true });\n    }\n  }, [section, navigate]); // Зависимости для правильной инициализации\n\n  return (\n    <MusicPageContainer \n      maxWidth=\"xl\" \n      disableGutters \n      sx={{ \n        pb: 10 \n      }}\n    >\n      \n      {currentTrack ? (\n        <SEO\n          title={`${currentTrack.title} - ${currentTrack.artist || 'Неизвестный исполнитель'}`}\n          description={`Слушайте ${currentTrack.title} от ${currentTrack.artist || 'Неизвестный исполнитель'} на K-Connect`}\n          image={currentTrack.cover || '/static/images/music_placeholder.jpg'}\n          type=\"music\"\n          meta={{\n            song: currentTrack.title,\n            artist: currentTrack.artist,\n            album: currentTrack.album\n          }}\n        />\n      ) : selectedPlaylist ? (\n        <SEO\n          title={`Плейлист: ${selectedPlaylist.title}`}\n          description={selectedPlaylist.description || `Плейлист ${selectedPlaylist.title} на K-Connect`}\n          image={selectedPlaylist.cover || '/static/images/playlist_placeholder.jpg'}\n          type=\"music.playlist\"\n        />\n      ) : (\n        <SEO\n          title=\"Музыка | K-Connect\"\n          description=\"Слушайте музыку, создавайте плейлисты и делитесь любимыми треками на K-Connect\"\n          type=\"website\"\n        />\n      )}\n      \n      \n      {isMobile ? (\n        <MobileSearchContainer>\n          <Box sx={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center',\n            width: '100%'\n          }}>\n            {viewMode !== 'categories' ? (\n              <IconButton \n                color=\"inherit\" \n                onClick={handleBackToCategories}\n                size=\"small\"\n                sx={{ mr: 1 }}\n              >\n                <ArrowBack fontSize=\"small\" />\n              </IconButton>\n            ) : (\n              <Typography \n                variant=\"h6\" \n                fontWeight=\"600\"\n                sx={{ \n                  display: showSearchBar ? 'none' : 'block',\n                  fontSize: '1.1rem'\n                }}\n              >\n                Музыка\n              </Typography>\n            )}\n            \n            {showSearchBar ? (\n              <StyledSearchInput focused={isSearchFocused} sx={{ height: 40, flexGrow: 1 }}>\n                <Search sx={{ fontSize: 18, mr: 0.5, color: 'text.secondary' }} />\n                <input\n                  ref={searchInputRef}\n                  placeholder=\"Поиск трека или исполнителя\"\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  onFocus={() => setIsSearchFocused(true)}\n                  onBlur={() => setTimeout(() => setIsSearchFocused(false), 200)}\n                  style={{ fontSize: '16px' }}\n                />\n                {searchQuery && (\n                  <IconButton \n                    size=\"small\" \n                    onClick={clearSearch}\n                    sx={{ color: 'rgba(255, 255, 255, 0.7)', p: 0.5 }}\n                  >\n                    <Box sx={{ fontSize: 18, fontWeight: 'bold' }}>×</Box>\n                  </IconButton>\n                )}\n              </StyledSearchInput>\n            ) : (\n              <Box sx={{ display: 'flex', alignItems: 'center', ml: 'auto' }}>\n                <IconButton \n                  color=\"inherit\" \n                  onClick={handleToggleSearch}\n                  sx={{ mr: 0.5 }}\n                  size=\"small\"\n                >\n                  <Search fontSize=\"small\" />\n                </IconButton>\n                <IconButton \n                  color=\"inherit\" \n                  onClick={handleOpenUploadDialog}\n                  sx={{ mr: 0.5 }}\n                  size=\"small\"\n                >\n                  <Upload fontSize=\"small\" />\n                </IconButton>\n              </Box>\n            )}\n            \n            {showSearchBar && (\n              <Button \n                onClick={handleToggleSearch}\n                size=\"small\"\n                sx={{ \n                  ml: 1,\n                  textTransform: 'none',\n                  minWidth: 'auto',\n                  py: 0.5,\n                  px: 1\n                }}\n              >\n                Отмена\n              </Button>\n            )}\n          </Box>\n        </MobileSearchContainer>\n      ) : (\n        <SearchContainer open={showSearchBar} ref={headerRef}>\n          <Box sx={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center',\n            mb: showSearchBar ? 0 : 1\n          }}>\n            {viewMode !== 'categories' ? (\n              <IconButton \n                color=\"inherit\" \n                onClick={handleBackToCategories}\n                sx={{ mr: 1 }}\n              >\n                <ArrowBack />\n              </IconButton>\n            ) : (\n              <Typography \n                variant=\"h6\" \n                fontWeight=\"600\"\n                sx={{ \n                  display: { xs: showSearchBar ? 'none' : 'block', sm: 'block' },\n                  fontSize: { xs: '1.1rem', sm: '1.25rem' }\n                }}\n              >\n                Музыка\n              </Typography>\n            )}\n            \n            {showSearchBar ? (\n              <StyledSearchInput focused={isSearchFocused}>\n                <Search sx={{ fontSize: 20, mr: 1, color: 'text.secondary' }} />\n                <input\n                  ref={searchInputRef}\n                  placeholder=\"Поиск трека или исполнителя\"\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  onFocus={() => setIsSearchFocused(true)}\n                  onBlur={() => setTimeout(() => setIsSearchFocused(false), 200)}\n                />\n                {searchQuery && (\n                  <IconButton \n                    size=\"small\" \n                    onClick={clearSearch}\n                    sx={{ color: 'rgba(255, 255, 255, 0.7)', p: 0.5 }}\n                  >\n                    <Box sx={{ fontSize: 18, fontWeight: 'bold' }}>×</Box>\n                  </IconButton>\n                )}\n              </StyledSearchInput>\n            ) : (\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <IconButton \n                  color=\"inherit\" \n                  onClick={handleToggleSearch}\n                  sx={{ mr: 0.5 }}\n                >\n                  <Search />\n                </IconButton>\n                <IconButton \n                  color=\"inherit\" \n                  onClick={handleOpenUploadDialog}\n                  sx={{ mr: 0.5 }}\n                >\n                  <Upload />\n                </IconButton>\n              </Box>\n            )}\n            \n            {showSearchBar && (\n              <Button \n                onClick={handleToggleSearch}\n                sx={{ \n                  ml: 1,\n                  textTransform: 'none',\n                  minWidth: 'auto'\n                }}\n              >\n                Отмена\n              </Button>\n            )}\n          </Box>\n        </SearchContainer>\n      )}\n      \n      \n      {!searchQuery ? (\n        <>\n          \n          {viewMode === 'categories' && (\n            <Fade in={true} timeout={500}>\n              <Box sx={{ pt: 2 }}>\n                <HeaderPaper elevation={0}>\n                  <Typography \n                    variant=\"h5\" \n                    fontWeight=\"bold\" \n                    sx={{ mb: 2 }}\n                  >\n                    Ваша музыка\n                  </Typography>\n                  \n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <Zoom in={true} style={{ transitionDelay: '100ms' }}>\n                        <CategoryCard \n                          elevation={3}\n                          onClick={() => handleSwitchToTracks(0)}\n                          active={tabValue === 0 && viewMode === 'tracks'}\n                        >\n                          <CardContent sx={{ \n                            display: 'flex', \n                            flexDirection: 'column',\n                            height: '100%', \n                            p: { xs: 2, sm: 3 }\n                          }}>\n                            <Box sx={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              mb: 2\n                            }}>\n                              <CategoryIcon sx={{ mr: 2 }}>\n                                <Favorite color=\"error\" />\n                              </CategoryIcon>\n                              <Box>\n                                <Typography variant=\"h6\" fontWeight=\"600\">\n                                  Мне нравится\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                  {likedTracks?.length || 0} {likedTracks?.length === 1 ? 'трек' : \n                                  likedTracks?.length > 1 && likedTracks?.length < 5 ? 'трека' : 'треков'}\n                                </Typography>\n                              </Box>\n                            </Box>\n                            \n                            \n                            {likedTracks && likedTracks.length > 0 && (\n                              <Box sx={{ mt: 1 }}>\n                                {likedTracks.slice(0, 3).map((track, index) => (\n                                  <CompactTrackItem key={track.id || index}>\n                                    <Avatar\n                                      variant=\"rounded\"\n                                      src={getCoverWithFallback(track.cover_path || '', \"album\")}\n                                      alt={track.title || ''}\n                                      sx={{ \n                                        width: 32, \n                                        height: 32, \n                                        borderRadius: 1, \n                                        mr: 1.5 \n                                      }}\n                                    />\n                                    <Box sx={{ minWidth: 0, flexGrow: 1 }}>\n                                      <Typography variant=\"body2\" noWrap>\n                                        {track.title || 'Без названия'}\n                                      </Typography>\n                                      <Typography variant=\"caption\" color=\"text.secondary\" noWrap>\n                                        {track.artist || 'Неизвестный исполнитель'}\n                                      </Typography>\n                                    </Box>\n                                  </CompactTrackItem>\n                                ))}\n                              </Box>\n                            )}\n                          </CardContent>\n                        </CategoryCard>\n                      </Zoom>\n                    </Grid>\n                    \n                    <Grid item xs={12} sm={6}>\n                      <Zoom in={true} style={{ transitionDelay: '200ms' }}>\n                        <CategoryCard \n                          elevation={3}\n                          onClick={() => handleSwitchToTracks(1)}\n                          active={tabValue === 1 && viewMode === 'tracks'}\n                        >\n                          <CardContent sx={{ \n                            display: 'flex', \n                            flexDirection: 'column',\n                            height: '100%',\n                            p: { xs: 2, sm: 3 }\n                          }}>\n                            <Box sx={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              mb: 2\n                            }}>\n                              <CategoryIcon sx={{ mr: 2 }}>\n                                <Shuffle color=\"secondary\" />\n                              </CategoryIcon>\n                              <Box>\n                                <Typography variant=\"h6\" fontWeight=\"600\">\n                                  Все треки\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                  {tracks?.length || 0} {tracks?.length === 1 ? 'трек' : \n                                  tracks?.length > 1 && tracks?.length < 5 ? 'трека' : 'треков'}\n                                </Typography>\n                              </Box>\n                            </Box>\n                            \n                            \n                            {tracks && tracks.length > 0 && (\n                              <Box sx={{ mt: 1 }}>\n                                {tracks.slice(0, 3).map((track, index) => (\n                                  <CompactTrackItem key={track.id || index}>\n                                    <Avatar\n                                      variant=\"rounded\"\n                                      src={getCoverWithFallback(track.cover_path || '', \"album\")}\n                                      alt={track.title || ''}\n                                      sx={{ \n                                        width: 32, \n                                        height: 32, \n                                        borderRadius: 1, \n                                        mr: 1.5 \n                                      }}\n                                    />\n                                    <Box sx={{ minWidth: 0, flexGrow: 1 }}>\n                                      <Typography variant=\"body2\" noWrap>\n                                        {track.title || 'Без названия'}\n                                      </Typography>\n                                      <Typography variant=\"caption\" color=\"text.secondary\" noWrap>\n                                        {track.artist || 'Неизвестный исполнитель'}\n                                      </Typography>\n                                    </Box>\n                                  </CompactTrackItem>\n                                ))}\n                              </Box>\n                            )}\n                          </CardContent>\n                        </CategoryCard>\n                      </Zoom>\n                    </Grid>\n                  </Grid>\n                </HeaderPaper>\n                \n                \n                <HeaderPaper elevation={0}>\n                  <Box sx={{ \n                    display: 'flex', \n                    justifyContent: 'space-between', \n                    alignItems: 'center', \n                    mb: 2 \n                  }}>\n                    <Typography variant=\"h5\" fontWeight=\"bold\">\n                      Чарты\n                    </Typography>\n                  </Box>\n                  \n                  {chartsLoading ? (\n                    <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n                      <CircularProgress size={30} />\n                    </Box>\n                  ) : (\n                    <Grid container spacing={2}>\n                      \n                      <Grid item xs={12} md={6}>\n                        <Zoom in={true} style={{ transitionDelay: '150ms' }}>\n                          <Paper\n                            elevation={0}\n                            sx={{\n                              p: 2,\n                              height: '100%',\n                              borderRadius: 2,\n                              backgroundColor: 'rgba(25,25,25,0.6)',\n                              backdropFilter: 'blur(10px)',\n                              border: '1px solid rgba(255,255,255,0.05)',\n                            }}\n                          >\n                            <Typography variant=\"h6\" gutterBottom fontWeight=\"600\">\n                              Популярные\n                            </Typography>\n                            \n                            {charts.most_played && charts.most_played.length > 0 ? (\n                              <Box>\n                                {charts.most_played.slice(0, 5).map((track, index) => (\n                                  <ChartTrackItem \n                                    key={track.id || index} \n                                    onClick={() => handleTrackClick(track)}\n                                  >\n                                    <ChartPosition>\n                                      {index + 1}\n                                    </ChartPosition>\n                                    \n                                    <ChartCover>\n                                      <img \n                                        src={getCoverWithFallback(track.cover_path || '', \"album\")} \n                                        alt={track.title}\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                        style={{ objectFit: 'cover' }}\n                                      />\n                                    </ChartCover>\n                                    \n                                    <ChartInfoContainer>\n                                      <ChartTrackTitle>\n                                        {track.title || 'Без названия'}\n                                      </ChartTrackTitle>\n                                      <ChartTrackArtist>\n                                        {track.artist || 'Неизвестный исполнитель'}\n                                      </ChartTrackArtist>\n                                    </ChartInfoContainer>\n                                    \n                                    <Box sx={{ \n                                      display: 'flex', \n                                      alignItems: 'center',\n                                      ml: 'auto' \n                                    }}>\n                                      <IconButton \n                                        size=\"small\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          handleLikeTrack(track.id);\n                                        }}\n                                        sx={{ \n                                          color: track.is_liked ? 'error.main' : 'text.secondary',\n                                          transition: 'all 0.2s ease',\n                                          '&:hover': {\n                                            color: track.is_liked ? 'error.light' : '#ff6b6b',\n                                            transform: 'scale(1.1)',\n                                          }\n                                        }}\n                                      >\n                                        {track.is_liked ? (\n                                          <Favorite \n                                            fontSize=\"small\" \n                                            sx={{ \n                                              animation: 'heartBeat 0.5s',\n                                              '@keyframes heartBeat': {\n                                                '0%': { transform: 'scale(1)' },\n                                                '14%': { transform: 'scale(1.3)' },\n                                                '28%': { transform: 'scale(1)' },\n                                                '42%': { transform: 'scale(1.3)' },\n                                                '70%': { transform: 'scale(1)' },\n                                              }\n                                            }}\n                                          />\n                                        ) : (\n                                          <FavoriteBorder \n                                            fontSize=\"small\"\n                                            sx={{\n                                              '&:hover': {\n                                                animation: 'pulse 1.5s infinite',\n                                                '@keyframes pulse': {\n                                                  '0%': { opacity: 1 },\n                                                  '50%': { opacity: 0.6 },\n                                                  '100%': { opacity: 1 }\n                                                }\n                                              }\n                                            }}\n                                          />\n                                        )}\n                                      </IconButton>\n                                    </Box>\n                                  </ChartTrackItem>\n                                ))}\n                              </Box>\n                            ) : (\n                              <Typography color=\"text.secondary\" sx={{ py: 4, textAlign: 'center' }}>\n                                Нет данных о популярных треках\n                              </Typography>\n                            )}\n                          </Paper>\n                        </Zoom>\n                      </Grid>\n                      \n                      \n                      <Grid item xs={12} md={6}>\n                        <Zoom in={true} style={{ transitionDelay: '300ms' }}>\n                          <Paper\n                            elevation={0}\n                            sx={{\n                              p: 2,\n                              height: '100%',\n                              borderRadius: 2,\n                              backgroundColor: 'rgba(25,25,25,0.6)',\n                              backdropFilter: 'blur(10px)',\n                              border: '1px solid rgba(255,255,255,0.05)',\n                            }}\n                          >\n                            <Typography variant=\"h6\" gutterBottom fontWeight=\"600\">\n                              Новинки\n                            </Typography>\n                            \n                            {charts.new_releases && charts.new_releases.length > 0 ? (\n                              <Box>\n                                {charts.new_releases.slice(0, 5).map((track, index) => (\n                                  <ChartTrackItem \n                                    key={track.id || index} \n                                    onClick={() => handleTrackClick(track)}\n                                  >\n                                    <ChartPosition>\n                                      {index + 1}\n                                    </ChartPosition>\n                                    \n                                    <ChartCover>\n                                      <img \n                                        src={getCoverWithFallback(track.cover_path || '', \"album\")} \n                                        alt={track.title}\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                        style={{ objectFit: 'cover' }}\n                                      />\n                                    </ChartCover>\n                                    \n                                    <ChartInfoContainer>\n                                      <ChartTrackTitle>\n                                        {track.title || 'Без названия'}\n                                      </ChartTrackTitle>\n                                      <ChartTrackArtist>\n                                        {track.artist || 'Неизвестный исполнитель'}\n                                      </ChartTrackArtist>\n                                    </ChartInfoContainer>\n                                    \n                                    <Box sx={{ \n                                      display: 'flex', \n                                      alignItems: 'center',\n                                      ml: 'auto' \n                                    }}>\n                                      <IconButton \n                                        size=\"small\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          handleLikeTrack(track.id);\n                                        }}\n                                        sx={{ \n                                          color: track.is_liked ? 'error.main' : 'text.secondary',\n                                          transition: 'all 0.2s ease',\n                                          '&:hover': {\n                                            color: track.is_liked ? 'error.light' : '#ff6b6b',\n                                            transform: 'scale(1.1)',\n                                          }\n                                        }}\n                                      >\n                                        {track.is_liked ? (\n                                          <Favorite \n                                            fontSize=\"small\" \n                                            sx={{ \n                                              animation: 'heartBeat 0.5s',\n                                              '@keyframes heartBeat': {\n                                                '0%': { transform: 'scale(1)' },\n                                                '14%': { transform: 'scale(1.3)' },\n                                                '28%': { transform: 'scale(1)' },\n                                                '42%': { transform: 'scale(1.3)' },\n                                                '70%': { transform: 'scale(1)' },\n                                              }\n                                            }}\n                                          />\n                                        ) : (\n                                          <FavoriteBorder \n                                            fontSize=\"small\"\n                                            sx={{\n                                              '&:hover': {\n                                                animation: 'pulse 1.5s infinite',\n                                                '@keyframes pulse': {\n                                                  '0%': { opacity: 1 },\n                                                  '50%': { opacity: 0.6 },\n                                                  '100%': { opacity: 1 }\n                                                }\n                                              }\n                                            }}\n                                          />\n                                        )}\n                                      </IconButton>\n                                    </Box>\n                                  </ChartTrackItem>\n                                ))}\n                              </Box>\n                            ) : (\n                              <Typography color=\"text.secondary\" sx={{ py: 4, textAlign: 'center' }}>\n                                Нет данных о новых релизах\n                              </Typography>\n                            )}\n                          </Paper>\n                        </Zoom>\n                      </Grid>\n                    </Grid>\n                  )}\n                </HeaderPaper>\n                \n                \n                <HeaderPaper elevation={0}>\n                  <Box sx={{ \n                    display: 'flex', \n                    justifyContent: 'space-between', \n                    alignItems: 'center', \n                    mb: 2 \n                  }}>\n                    <Typography variant=\"h5\" fontWeight=\"bold\">\n                      Мои плейлисты\n                    </Typography>\n                    <IconButton \n                      color=\"primary\" \n                      onClick={handleOpenCreatePlaylist}\n                      aria-label=\"Создать плейлист\"\n                    >\n                      <Add />\n                    </IconButton>\n                  </Box>\n                  \n                  <PlaylistGrid\n                    playlists={playlists.filter(p => p.is_owner)}\n                    loading={isPlaylistsLoading}\n                    skeletonCount={4}\n                    onPlaylistClick={handlePlaylistClick}\n                    onPlaylistPlay={playPlaylist}\n                    onPlaylistMoreClick={handlePlaylistMoreClick}\n                  />\n                  \n                  {!isPlaylistsLoading && playlists.filter(p => p.is_owner).length === 0 && (\n                    <Box sx={{ \n                      display: 'flex', \n                      flexDirection: 'column', \n                      alignItems: 'center', \n                      justifyContent: 'center',\n                      py: 4,\n                      background: 'linear-gradient(135deg, rgba(208, 188, 255, 0.05) 0%, rgba(0,0,0,0.1) 100%)',\n                      borderRadius: 3,\n                      border: '1px dashed rgba(208, 188, 255, 0.2)',\n                    }}>\n                      <QueueMusic sx={{ fontSize: 48, color: 'rgb(208, 188, 255)', opacity: 0.6, mb: 2 }} />\n                      <Typography sx={{ color: 'rgb(208, 188, 255)', mb: 1, fontWeight: 500 }}>\n                        У вас пока нет плейлистов\n                      </Typography>\n                      <Typography color=\"text.secondary\" align=\"center\" sx={{ maxWidth: 400, px: 2, mb: 2 }}>\n                        Создавайте коллекции любимых треков и делитесь ими с друзьями\n                      </Typography>\n                      <ActionButton \n                        color=\"primary\" \n                        startIcon={<Add />}\n                        onClick={handleOpenCreatePlaylist}\n                        sx={{ \n                          background: 'linear-gradient(45deg, rgba(191, 164, 255, 1) 30%, rgba(208, 188, 255, 1) 90%)',\n                          boxShadow: '0 3px 12px rgba(208, 188, 255, 0.3)',\n                        }}\n                      >\n                        Создать плейлист\n                      </ActionButton>\n                    </Box>\n                  )}\n                </HeaderPaper>\n                \n                {/* Public Playlists */}\n                {playlists.filter(p => !p.is_owner).length > 0 && (\n                  <HeaderPaper elevation={0}>\n                    <Box sx={{ \n                      display: 'flex', \n                      justifyContent: 'space-between', \n                      alignItems: 'center', \n                      mb: 2 \n                    }}>\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\n                        Публичные плейлисты\n                      </Typography>\n                    </Box>\n                    \n                    <PlaylistGrid\n                      playlists={playlists.filter(p => !p.is_owner)}\n                      loading={isPlaylistsLoading}\n                      skeletonCount={4}\n                      onPlaylistClick={handlePlaylistClick}\n                      onPlaylistPlay={playPlaylist}\n                      onPlaylistMoreClick={handlePlaylistMoreClick}\n                    />\n                  </HeaderPaper>\n                )}\n              </Box>\n            </Fade>\n          )}\n        \n          \n          {viewMode === 'tracks' && (\n            <Fade in={true} timeout={500}>\n              <Box sx={{ pt: 2 }}>\n                <HeaderPaper elevation={0} sx={{ mb: 2 }}>\n                  <Box sx={{ \n                    display: 'flex', \n                    flexDirection: { xs: 'column', md: 'row' }, \n                    alignItems: { xs: 'flex-start', md: 'center' },\n                    justifyContent: 'space-between'\n                  }}>\n                    <Box sx={{ \n                      display: 'flex', \n                      flexDirection: { xs: 'column', sm: 'row' }, \n                      alignItems: { xs: 'flex-start', sm: 'center' },\n                      mb: { xs: 2, md: 0 }\n                    }}>\n                      <CoverArtContainer \n                        sx={{ \n                          width: { xs: 120, sm: 150, md: 180 }, \n                          flexShrink: 0,\n                          mr: { xs: 0, sm: 3 },\n                          mb: { xs: 2, sm: 0 }\n                        }}\n                      >\n                        <img \n                          src={getSectionData().cover}\n                          alt={getSectionData().title}\n                        />\n                      </CoverArtContainer>\n                      \n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                          {getSectionData().type === \"playlist\" ? \"Плейлист\" : \n                          getSectionData().type === \"radio\" ? \"Радио\" : \"Коллекция\"}\n                        </Typography>\n                        \n                        <Typography \n                          variant=\"h4\" \n                          component=\"h1\" \n                          fontWeight=\"bold\" \n                          sx={{ \n                            mb: 1,\n                            fontSize: { xs: '1.5rem', sm: '2rem', md: '2.25rem' }\n                          }}\n                        >\n                          {getSectionData().title}\n                        </Typography>\n                        \n                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                          {getSectionData().subtitle}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    \n                    <Box sx={{ \n                      display: 'flex', \n                      alignItems: 'center',\n                      flexWrap: 'wrap'\n                    }}>\n                      <ActionButton \n                        color=\"primary\" \n                        startIcon={<PlayArrow />}\n                        onClick={() => {\n                          if (getSectionData().tracks.length > 0) {\n                            playTrack(getSectionData().tracks[0]);\n                          }\n                        }}\n                        sx={{ mr: 1, mb: { xs: 1, sm: 0 } }}\n                        disabled={getSectionData().tracks.length === 0}\n                      >\n                        Слушать\n                      </ActionButton>\n                      \n                      <ActionButton \n                        startIcon={<Refresh />}\n                        onClick={handleRefresh}\n                        disabled={refreshing}\n                        sx={{ minWidth: { xs: '100%', sm: 'auto' } }}\n                      >\n                        {refreshing ? 'Обновление...' : 'Обновить'}\n                      </ActionButton>\n                    </Box>\n                  </Box>\n                </HeaderPaper>\n                \n                \n                <Box sx={{ mb: 4 }}>\n                  {effectiveLoading ? (\n                    <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n                      <CircularProgress size={30} />\n                    </Box>\n                  ) : (\n                    <>\n                      <List sx={{ py: 0 }}>\n                        {displayedTracks && displayedTracks.length > 0 ? (\n                          displayedTracks.map((track, index) => (\n                            <Grow\n                              key={track.id}\n                              in={true}\n                              style={{ transformOrigin: '0 0 0' }}\n                              timeout={300 + index % 15 * 30}\n                            >\n                              {renderTrackItem(track, index)}\n                            </Grow>\n                          ))\n                        ) : (\n                          <Fade in={true} timeout={500}>\n                            <Box sx={{ \n                              display: 'flex', \n                              flexDirection: 'column', \n                              alignItems: 'center', \n                              justifyContent: 'center',\n                              py: 8\n                            }}>\n                              {tabValue === 0 ? (\n                                <>\n                                  <Favorite sx={{ fontSize: 48, color: 'text.secondary', opacity: 0.5, mb: 2 }} />\n                                  <Typography color=\"text.secondary\" sx={{ mb: 2 }}>\n                                    У вас пока нет понравившихся треков\n                                  </Typography>\n                                  <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ maxWidth: 400 }}>\n                                    Нажмите на иконку сердечка у любого трека, чтобы добавить его в избранное\n                                  </Typography>\n                                </>\n                              ) : tabValue === 1 ? (\n                                <>\n                                  <LibraryMusic sx={{ fontSize: 48, color: 'text.secondary', opacity: 0.5, mb: 2 }} />\n                                  <Typography color=\"text.secondary\" sx={{ mb: 2 }}>\n                                    Ваша музыкальная коллекция пуста\n                                  </Typography>\n                                  <ActionButton \n                                    color=\"primary\" \n                                    startIcon={<Upload />}\n                                    onClick={handleOpenUploadDialog}\n                                  >\n                                    Загрузить музыку\n                                  </ActionButton>\n                                </>\n                              ) : (\n                                <>\n                                  <Shuffle sx={{ fontSize: 48, color: 'text.secondary', opacity: 0.5, mb: 2 }} />\n                                  <Typography color=\"text.secondary\" sx={{ mb: 2 }}>\n                                    Нет треков для случайного воспроизведения\n                                  </Typography>\n                                  <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ maxWidth: 400 }}>\n                                    Добавьте больше музыки, чтобы включить режим случайного воспроизведения\n                                  </Typography>\n                                </>\n                              )}\n                            </Box>\n                          </Fade>\n                        )}\n                      </List>\n                      \n                      \n                      {!searchQuery && hasMoreTracks && (\n                        <Box \n                          ref={loaderRef} \n                          sx={{ \n                            display: 'flex', \n                            justifyContent: 'center', \n                            alignItems: 'center', \n                            py: 3,\n                            minHeight: '80px',\n                            width: '100%'\n                          }}\n                          data-testid=\"infinite-scroll-loader\"\n                        >\n                          {isLoadingMore ? (\n                            <Fade in={true} timeout={300}>\n                              <CircularProgress size={24} sx={{ color: 'primary.main', opacity: 0.7 }} />\n                            </Fade>\n                          ) : (\n                            <Fade in={true} timeout={300}>\n                              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ opacity: 0.7 }}>\n                                {tabValue === 0 ? 'Прокрутите вниз для загрузки понравившихся треков' : 'Прокрутите вниз для загрузки'}\n                              </Typography>\n                            </Fade>\n                          )}\n                        </Box>\n                      )}\n                    </>\n                  )}\n                </Box>\n              </Box>\n            </Fade>\n          )}\n        \n          {/* Add new Artists section */}\n          <HeaderPaper elevation={0}>\n            <Box sx={{ \n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center', \n              mb: 2 \n            }}>\n              <Typography variant=\"h5\" fontWeight=\"bold\">\n                Исполнители\n              </Typography>\n              \n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <StyledSearchInput \n                  focused={artistSearchQuery.length > 0} \n                  sx={{ \n                    mr: 1, \n                    width: { xs: '150px', sm: '200px', md: '250px' },\n                    height: '40px'\n                  }}\n                >\n                  <Search sx={{ fontSize: 18, mr: 0.5, color: 'text.secondary' }} />\n                  <input\n                    placeholder=\"Найти исполнителя\"\n                    value={artistSearchQuery}\n                    onChange={handleArtistSearchChange}\n                    style={{ fontSize: '16px' }}\n                  />\n                  {artistSearchQuery && (\n                    <IconButton \n                      size=\"small\" \n                      onClick={() => setArtistSearchQuery('')}\n                      sx={{ color: 'rgba(255, 255, 255, 0.7)', p: 0.5 }}\n                    >\n                      <Box sx={{ fontSize: 18, fontWeight: 'bold' }}>×</Box>\n                    </IconButton>\n                  )}\n                </StyledSearchInput>\n              </Box>\n            </Box>\n            \n            {artistsLoading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n                <CircularProgress size={30} />\n              </Box>\n            ) : (\n              <>\n                {artistSearchQuery.length > 0 ? (\n                  <Box>\n                    {isArtistSearching ? (\n                      <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n                        <CircularProgress size={30} />\n                      </Box>\n                    ) : artistSearchResults.length > 0 ? (\n                      <Grid container spacing={2}>\n                        {artistSearchResults.map((artist, index) => (\n                          <Grid item xs={6} sm={4} md={3} lg={2} key={artist.id || index}>\n                            <Zoom in={true} style={{ transitionDelay: `${150 * (index % 8)}ms` }}>\n                              <Card \n                                sx={{ \n                                  borderRadius: '16px',\n                                  cursor: 'pointer',\n                                  backgroundColor: 'rgba(18,18,18,0.6)',\n                                  backdropFilter: 'blur(10px)',\n                                  transition: 'all 0.3s ease',\n                                  '&:hover': {\n                                    transform: 'translateY(-5px)',\n                                    boxShadow: '0 10px 20px rgba(0,0,0,0.2)'\n                                  },\n                                  height: '100%',\n                                  display: 'flex',\n                                  flexDirection: 'column'\n                                }}\n                                onClick={() => handleArtistClick(artist.id)}\n                              >\n                                <Box \n                                  sx={{ \n                                    width: '100%', \n                                    paddingTop: '100%', \n                                    position: 'relative',\n                                    borderRadius: '16px 16px 0 0',\n                                    overflow: 'hidden'\n                                  }}\n                                >\n                                  <Box\n                                    component=\"img\"\n                                    src={artist.avatar_url || '/static/uploads/system/artist_placeholder.jpg'}\n                                    alt={artist.name}\n                                    sx={{\n                                      position: 'absolute',\n                                      top: 0,\n                                      left: 0,\n                                      width: '100%',\n                                      height: '100%',\n                                      objectFit: 'cover',\n                                      transition: 'transform 0.3s ease',\n                                      '&:hover': {\n                                        transform: 'scale(1.05)',\n                                      },\n                                    }}\n                                  />\n                                </Box>\n                                <CardContent sx={{ p: 1.5, pb: 2, flexGrow: 1 }}>\n                                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <Typography \n                                      variant=\"body1\" \n                                      fontWeight=\"500\" \n                                      noWrap \n                                      sx={{ flexGrow: 1 }}\n                                    >\n                                      {artist.name}\n                                    </Typography>\n                                    {artist.verified && (\n                                      <Tooltip title=\"Верифицированный артист\">\n                                        <VerifiedUser \n                                          sx={{ \n                                            fontSize: 16, \n                                            ml: 0.5, \n                                            color: theme.palette.primary.main \n                                          }} \n                                        />\n                                      </Tooltip>\n                                    )}\n                                  </Box>\n                                </CardContent>\n                              </Card>\n                            </Zoom>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    ) : (\n                      <Box sx={{ \n                        display: 'flex', \n                        flexDirection: 'column', \n                        alignItems: 'center', \n                        justifyContent: 'center',\n                        py: 4\n                      }}>\n                        <Typography color=\"text.secondary\">\n                          Артистов по запросу \"{artistSearchQuery}\" не найдено\n                        </Typography>\n                      </Box>\n                    )}\n                  </Box>\n                ) : (\n                  <Grid container spacing={2}>\n                    {popularArtists.length > 0 ? (\n                      popularArtists.map((artist, index) => (\n                        <Grid item xs={6} sm={4} md={3} lg={2} key={artist.id || index}>\n                          <Zoom in={true} style={{ transitionDelay: `${150 * (index % 8)}ms` }}>\n                            <Card \n                              sx={{ \n                                borderRadius: '16px',\n                                cursor: 'pointer',\n                                backgroundColor: 'rgba(18,18,18,0.6)',\n                                backdropFilter: 'blur(10px)',\n                                transition: 'all 0.3s ease',\n                                '&:hover': {\n                                  transform: 'translateY(-5px)',\n                                  boxShadow: '0 10px 20px rgba(0,0,0,0.2)'\n                                },\n                                height: '100%',\n                                display: 'flex',\n                                flexDirection: 'column'\n                              }}\n                              onClick={() => handleArtistClick(artist.id)}\n                            >\n                              <Box \n                                sx={{ \n                                  width: '100%', \n                                  paddingTop: '100%', \n                                  position: 'relative',\n                                  borderRadius: '16px 16px 0 0',\n                                  overflow: 'hidden'\n                                }}\n                              >\n                                <Box\n                                  component=\"img\"\n                                  src={artist.avatar_url || '/static/uploads/system/artist_placeholder.jpg'}\n                                  alt={artist.name}\n                                  sx={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                    width: '100%',\n                                    height: '100%',\n                                    objectFit: 'cover',\n                                    transition: 'transform 0.3s ease',\n                                    '&:hover': {\n                                      transform: 'scale(1.05)',\n                                    },\n                                  }}\n                                />\n                              </Box>\n                              <CardContent sx={{ p: 1.5, pb: 2, flexGrow: 1 }}>\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                  <Typography \n                                    variant=\"body1\" \n                                    fontWeight=\"500\" \n                                    noWrap \n                                    sx={{ flexGrow: 1 }}\n                                  >\n                                    {artist.name}\n                                  </Typography>\n                                  {artist.verified && (\n                                    <Tooltip title=\"Верифицированный артист\">\n                                      <VerifiedUser \n                                        sx={{ \n                                          fontSize: 16, \n                                          ml: 0.5, \n                                          color: theme.palette.primary.main \n                                        }} \n                                      />\n                                    </Tooltip>\n                                  )}\n                                </Box>\n                              </CardContent>\n                            </Card>\n                          </Zoom>\n                        </Grid>\n                      ))\n                    ) : (\n                      <Grid item xs={12}>\n                        <Box sx={{ \n                          display: 'flex', \n                          flexDirection: 'column', \n                          alignItems: 'center', \n                          justifyContent: 'center',\n                          py: 4,\n                          background: 'linear-gradient(135deg, rgba(208, 188, 255, 0.05) 0%, rgba(255,255,255,0.03) 100%)',\n                          borderRadius: 3,\n                          border: '1px dashed rgba(208, 188, 255, 0.2)',\n                          mx: 2\n                        }}>\n                          <Typography color=\"text.secondary\" sx={{ mb: 1 }}>\n                            Список исполнителей пуст\n                          </Typography>\n                        </Box>\n                      </Grid>\n                    )}\n                  </Grid>\n                )}\n              </>\n            )}\n          </HeaderPaper>\n        </>\n      ) : (\n        \n        <Fade in={true} timeout={500}>\n          <Box sx={{ pt: 2, pb: 2 }}>\n            <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n              Результаты поиска\n            </Typography>\n            \n            {isSearching ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', my: 6 }}>\n                <CircularProgress size={30} />\n              </Box>\n            ) : searchResults.length > 0 ? (\n              <>\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                  Найдено {searchResults.length} {\n                    searchResults.length === 1 ? 'трек' : \n                    searchResults.length > 1 && searchResults.length < 5 ? 'трека' : 'треков'\n                  } по запросу \"{searchQuery}\"\n                </Typography>\n                \n                <List sx={{ width: '100%', p: 0 }}>\n                  {searchResults.map((track, index) => (\n                    <Grow \n                      key={track.id || index} \n                      in={true} \n                      style={{ transformOrigin: '0 0 0', transitionDelay: `${index * 30}ms` }}\n                    >\n                      {renderTrackItem(track, index)}\n                    </Grow>\n                  ))}\n                </List>\n              </>\n            ) : (\n              <Box sx={{ \n                display: 'flex', \n                flexDirection: 'column', \n                alignItems: 'center', \n                justifyContent: 'center',\n                py: 8\n              }}>\n                <Search sx={{ fontSize: 48, color: 'text.secondary', opacity: 0.5, mb: 2 }} />\n                <Typography color=\"text.secondary\" sx={{ mb: 1 }}>\n                  Ничего не найдено по запросу \"{searchQuery}\"\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Попробуйте изменить запрос или выбрать другую категорию\n                </Typography>\n              </Box>\n            )}\n          </Box>\n        </Fade>\n      )}\n      \n      \n      {isMobile && (\n        <Slide direction=\"up\" in={isMobileNavVisible} mountOnEnter unmountOnExit>\n          <MobileNavigation \n            value={viewMode === 'categories' ? 0 : tabValue + 1}\n            onChange={(e, newValue) => {\n              if (newValue === 0) {\n                setViewMode('categories');\n              } else {\n                setTabValue(newValue - 1);\n                setViewMode('tracks');\n              }\n            }}\n            showLabels\n            sx={{ \n              height: 56,\n              borderTop: '1px solid rgba(255,255,255,0.05)',\n              boxShadow: '0 -2px 10px rgba(0,0,0,0.2)',\n              px: 1\n            }}\n          >\n            <BottomNavigationAction \n              label=\"Главная\" \n              icon={<Home sx={{ fontSize: '1.3rem' }} />} \n              sx={{ \n                minWidth: 0, \n                padding: 1,\n                '& .MuiBottomNavigationAction-label': {\n                  fontSize: '0.625rem',\n                  marginTop: 0.5\n                }\n              }}\n            />\n            <BottomNavigationAction \n              label=\"Любимые\" \n              icon={<Favorite sx={{ fontSize: '1.3rem' }} />} \n              sx={{ \n                minWidth: 0, \n                padding: 1,\n                '& .MuiBottomNavigationAction-label': {\n                  fontSize: '0.625rem',\n                  marginTop: 0.5\n                }\n              }}\n            />\n            <BottomNavigationAction \n              label=\"Все\" \n              icon={<LibraryMusic sx={{ fontSize: '1.3rem' }} />} \n              sx={{ \n                minWidth: 0, \n                padding: 1,\n                '& .MuiBottomNavigationAction-label': {\n                  fontSize: '0.625rem',\n                  marginTop: 0.5\n                }\n              }}\n            />\n          </MobileNavigation>\n        </Slide>\n      )}\n      \n      \n      \n      <FullScreenPlayer \n        open={fullScreenPlayerOpen} \n        onClose={handleCloseFullScreenPlayer} \n      />\n\n      \n      <MusicUploadDialog \n        open={uploadDialogOpen} \n        onClose={handleCloseUploadDialog} \n        onSuccess={() => {}} \n      />\n      \n      \n      <Menu\n        open={contextMenu !== null}\n        onClose={handleCloseContextMenu}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          contextMenu !== null\n            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n            : undefined\n        }\n        elevation={3}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: 'rgba(30, 30, 30, 0.95)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255,255,255,0.05)',\n            borderRadius: 2,\n            boxShadow: '0 8px 16px rgba(0,0,0,0.3)',\n          }\n        }}\n      >\n        {selectedTrack && (\n          <>\n            <Box sx={{ px: 2, py: 1.5, borderBottom: '1px solid rgba(255,255,255,0.05)' }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Avatar\n                  variant=\"rounded\"\n                  src={getCoverWithFallback(selectedTrack?.cover_path || '', \"album\")}\n                  alt={selectedTrack?.title || ''}\n                  sx={{ width: 36, height: 36, borderRadius: 1, mr: 1.5 }}\n                />\n                <Box sx={{ minWidth: 0 }}>\n                  <Typography variant=\"body2\" noWrap fontWeight=\"500\">\n                    {selectedTrack?.title || 'Без названия'}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\" noWrap>\n                    {selectedTrack?.artist || 'Неизвестный исполнитель'}\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n            \n            <MenuItem \n              onClick={() => handleTrackClick(selectedTrack)}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <PlayArrow fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Воспроизвести\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            <MenuItem \n              onClick={(e) => copyTrackLink(selectedTrack, e)}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <ContentCopy fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Копировать ссылку\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            <MenuItem \n              onClick={(e) => shareTrack(selectedTrack, e)}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <Share fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Поделиться\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            <MenuItem \n              onClick={(e) => {\n                e.stopPropagation();\n                handleLikeTrack(selectedTrack?.id);\n                handleCloseContextMenu();\n              }}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                {selectedTrack?.is_liked ? (\n                  <Favorite \n                    fontSize=\"small\" \n                    color=\"error\" \n                    sx={{ \n                      animation: 'heartBeat 0.5s',\n                      '@keyframes heartBeat': {\n                        '0%': { transform: 'scale(1)' },\n                        '14%': { transform: 'scale(1.3)' },\n                        '28%': { transform: 'scale(1)' },\n                        '42%': { transform: 'scale(1.3)' },\n                        '70%': { transform: 'scale(1)' },\n                      }\n                    }}\n                  />\n                ) : (\n                  <FavoriteBorder fontSize=\"small\" />\n                )}\n              </ListItemAvatar>\n              <ListItemText \n                primary={selectedTrack?.is_liked ? \"Убрать из понравившихся\" : \"Добавить в понравившиеся\"} \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            <MenuItem \n              onClick={(e) => {\n                e.stopPropagation();\n                handleCloseContextMenu();\n                \n              }}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <QueueMusic fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Добавить в плейлист\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            <MenuItem \n              onClick={(e) => {\n                e.stopPropagation();\n                handleCloseContextMenu();\n                \n              }}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <Download fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Скачать\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n          </>\n        )}\n      </Menu>\n      \n      \n      <Snackbar \n        open={snackbar.open} \n        autoHideDuration={4000} \n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ \n          vertical: 'bottom', \n          horizontal: 'center' \n        }}\n        sx={{\n          mb: isMobile ? 7 : 1\n        }}\n      >\n        <Alert \n          onClose={handleCloseSnackbar} \n          severity={snackbar.severity} \n          variant=\"filled\"\n          elevation={6}\n          sx={{ \n            width: '100%',\n            borderRadius: 3,\n            '& .MuiAlert-icon': {\n              fontSize: 20\n            }\n          }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n      \n      \n      <Zoom in={showBackToTop}>\n        <Fab\n          size=\"small\"\n          color=\"primary\"\n          aria-label=\"back to top\"\n          onClick={scrollToTop}\n          sx={{\n            position: 'fixed',\n            bottom: isMobile ? 70 : 16,\n            right: 16,\n            opacity: 0.8,\n            '&:hover': {\n              opacity: 1\n            }\n          }}\n        >\n          <KeyboardArrowUp />\n        </Fab>\n      </Zoom>\n\n      \n      {searchQuery.trim() && !searchLoading && displayedTracks.length === 0 && (\n        <Box sx={{ \n          display: 'flex', \n          flexDirection: 'column', \n          alignItems: 'center', \n          justifyContent: 'center',\n          py: 8\n        }}>\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            По запросу \"{searchQuery}\" ничего не найдено\n          </Typography>\n          <Button \n            variant=\"outlined\" \n            onClick={clearSearch}\n            startIcon={<Refresh />}\n          >\n            Очистить поиск\n          </Button>\n        </Box>\n      )}\n      \n      {/* Playlist Modal for creating and editing playlists */}\n      <PlaylistModal\n        open={playlistModalOpen}\n        onClose={handleClosePlaylistModal}\n        playlist={editingPlaylist}\n        onSave={handleSavePlaylist}\n        onAddTracks={handleAddTracksToPlaylist}\n        onRemoveTrack={handleRemoveTrackFromPlaylist}\n        onDelete={handleDeletePlaylist}\n        isLoading={localLoading}\n        nowPlaying={currentTrack} \n      />\n      \n      {/* Playlist Context Menu */}\n      <Menu\n        open={playlistContextMenu.open}\n        onClose={handleClosePlaylistContextMenu}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          playlistContextMenu.mouseX !== null && playlistContextMenu.mouseY !== null\n            ? { top: playlistContextMenu.mouseY, left: playlistContextMenu.mouseX }\n            : undefined\n        }\n        elevation={3}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: 'rgba(30, 30, 30, 0.95)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255,255,255,0.05)',\n            borderRadius: 2,\n            boxShadow: '0 8px 16px rgba(0,0,0,0.3)',\n          }\n        }}\n      >\n        {selectedPlaylistForMenu && (\n          <>\n            <Box sx={{ px: 2, py: 1.5, borderBottom: '1px solid rgba(255,255,255,0.05)' }}>\n              <Typography variant=\"body2\" noWrap fontWeight=\"500\">\n                {selectedPlaylistForMenu.name || 'Плейлист'}\n              </Typography>\n            </Box>\n            \n            <MenuItem \n              onClick={() => {\n                playPlaylist(selectedPlaylistForMenu.id);\n                handleClosePlaylistContextMenu();\n              }}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <PlayArrow fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Воспроизвести\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            {selectedPlaylistForMenu.isOwner && (\n              <MenuItem \n                onClick={() => {\n                  handleOpenEditPlaylist(selectedPlaylistForMenu);\n                  handleClosePlaylistContextMenu();\n                }}\n                sx={{ py: 1.5 }}\n              >\n                <ListItemAvatar sx={{ minWidth: 36 }}>\n                  <Edit fontSize=\"small\" />\n                </ListItemAvatar>\n                <ListItemText \n                  primary=\"Редактировать\" \n                  primaryTypographyProps={{ variant: 'body2' }}\n                />\n              </MenuItem>\n            )}\n            \n            <MenuItem \n              onClick={() => {\n                \n                const playlistLink = `${window.location.origin}/music?playlist=${selectedPlaylistForMenu.id}`;\n                navigator.clipboard.writeText(playlistLink)\n                  .then(() => {\n                    setSnackbar({\n                      open: true,\n                      message: 'Ссылка на плейлист скопирована в буфер обмена',\n                      severity: 'success'\n                    });\n                  })\n                  .catch(err => {\n                    console.error('Не удалось скопировать ссылку:', err);\n                  });\n                handleClosePlaylistContextMenu();\n              }}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <ContentCopy fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Копировать ссылку\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            <MenuItem \n              onClick={() => {\n                \n                const playlistLink = `${window.location.origin}/music?playlist=${selectedPlaylistForMenu.id}`;\n                navigator.clipboard.writeText(playlistLink)\n                  .then(() => {\n                    setSnackbar({\n                      open: true,\n                      message: 'Ссылка на плейлист скопирована для публикации',\n                      severity: 'success'\n                    });\n                  });\n                handleClosePlaylistContextMenu();\n              }}\n              sx={{ py: 1.5 }}\n            >\n              <ListItemAvatar sx={{ minWidth: 36 }}>\n                <Share fontSize=\"small\" />\n              </ListItemAvatar>\n              <ListItemText \n                primary=\"Поделиться\" \n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </MenuItem>\n            \n            {selectedPlaylistForMenu.isOwner && (\n              <MenuItem \n                onClick={() => {\n                  handleDeletePlaylist(selectedPlaylistForMenu.id);\n                  handleClosePlaylistContextMenu();\n                }}\n                sx={{ py: 1.5, color: 'error.main' }}\n              >\n                <ListItemAvatar sx={{ minWidth: 36 }}>\n                  <Delete fontSize=\"small\" color=\"error\" />\n                </ListItemAvatar>\n                <ListItemText \n                  primary=\"Удалить\" \n                  primaryTypographyProps={{ variant: 'body2' }}\n                />\n              </MenuItem>\n            )}\n          </>\n        )}\n      </Menu>\n\n      {/* Add PlaylistViewModal near the end of the file, before PlaylistModal */}\n      <PlaylistViewModal\n        open={playlistViewModalOpen}\n        onClose={() => setPlaylistViewModalOpen(false)}\n        playlist={viewingPlaylist}\n        onEdit={handleEditFromView}\n        onPlayTrack={handlePlayTrackFromPlaylist}\n        isLoading={playlistDetailsLoading}\n        nowPlaying={currentTrack} \n      />\n    </MusicPageContainer>\n  );\n});\n\nexport default MusicPage; "],"names":["GENRES","formatFileSize","bytes","i","Math","floor","log","parseFloat","pow","toFixed","MusicUploadDialog","open","onClose","onSuccess","tracks","setTracks","useState","currentTrackIndex","setCurrentTrackIndex","loading","setLoading","loadingMetadata","setLoadingMetadata","error","setError","success","setSuccess","uploadProgress","setUploadProgress","useEffect","resetForm","createEmptyTrack","file","coverFile","coverPreview","title","artist","album","genre","description","duration","metadata","fileFormat","sampleRate","bitDepth","channels","fileSize","handleFileChange","async","event","selectedFiles","Array","from","target","files","length","filesToProcess","slice","newTracks","type","startsWith","track","extractMetadata","file_format","sample_rate","bit_depth","file_size","cover_data","base64Response","fetch","blob","File","cover_mime","split","e","fileName","name","replace","includes","parts","trim","objectUrl","URL","createObjectURL","audioElement","Audio","Promise","resolve","onloadedmetadata","round","revokeObjectURL","onerror","src","push","formData","FormData","append","response","axios","post","headers","data","handleCoverChange","selectedFile","updatedTracks","handleTrackChange","field","value","jsxs","Dialog","maxWidth","fullWidth","PaperProps","sx","minHeight","width","margin","borderRadius","children","DialogTitle","display","justifyContent","alignItems","jsx","Typography","variant","IconButton","onClick","size","Close","DialogContent","pb","Alert","severity","mb","Box","textAlign","py","Button","component","htmlFor","startIcon","Add","disabled","id","accept","multiple","hidden","onChange","mt","CircularProgress","ml","Grid","container","spacing","item","xs","md","renderTrackList","Paper","height","overflow","List","dense","p","map","index","ListItem","selected","button","borderLeft","borderLeftColor","bgcolor","ListItemAvatar","Avatar","AudioFile","ListItemText","primary","secondary","primaryTypographyProps","noWrap","secondaryTypographyProps","ListItemSecondaryAction","edge","stopPropagation","splice","max","handleRemoveTrack","Delete","fontSize","renderTrackForm","flexDirection","Album","color","TextField","label","required","sm","FormControl","InputLabel","Select","labelId","MenuItem","g","multiline","rows","gutterBottom","border","borderColor","cursor","position","backgroundImage","backgroundSize","backgroundPosition","Fragment","Image","MusicNote","mr","fontWeight","String","padStart","Chip","icon","AudiotrackOutlined","DialogActions","pt","invalidTrackIndex","findIndex","forEach","uploadProgressCallback","progressEvent","percentCompleted","loaded","total","onUploadProgress","uploadedTracks","errors","join","setTimeout","message","CloudUpload","_interopRequireDefault","require$$0","Object","defineProperty","PlayCircleOutline","default","_createSvgIcon","_jsxRuntime","require$$2","d","ViewDialog","styled","theme","breakpoints","down","maxHeight","up","backgroundColor","palette","mode","background","paper","DialogHeader","padding","borderBottom","divider","text","CoverImage","aspectRatio","boxShadow","TrackItem","isPlaying","marginBottom","alpha","main","grey","common","white","TrackAvatar","ScrollableContent","ActionButton","textTransform","UserAvatar","marginRight","PlayingIndicator","animation","opacity","PlaylistViewModal","playlist","onEdit","onPlayTrack","isLoading","nowPlaying","useTheme","themeSettings","useContext","ThemeSettingsContext","isMobile","useMediaQuery","isVeryNarrow","handlePlayTrack","handleEditPlaylist","fullScreen","CloseIcon","gap","flexShrink","cover_url","cover_image","alt","style","objectFit","owner","avatar_url","PersonIcon","tracks_count","getTracksText","is_public","VisibilityIcon","VisibilityOffIcon","is_owner","EditIcon","PlayCircleOutlineIcon","flex","mx","disablePadding","playing","isTrackPlaying","viewBox","fill","x","y","rx","attributeName","to","dur","begin","repeatCount","values","keyTimes","minWidth","cover_path","MusicNoteOutlinedIcon","AddIcon","count","lastDigit","lastTwoDigits","debounce","func","wait","timeout","args","clearTimeout","later","MusicPageContainer","Container","marginTop","CategoryCard","Card","shouldForwardProp","prop","active","backdropFilter","transition","transform","CategoryIcon","Fab","bottom","right","zIndex","SearchContainer","top","StyledSearchInput","focused","outline","MobileNavigation","BottomNavigation","left","borderTop","HeaderPaper","CoverArtContainer","content","pointerEvents","letterSpacing","dark","CompactTrackItem","MobileSearchContainer","ChartTrackItem","ChartPosition","ChartCover","ChartInfoContainer","flexGrow","ChartTrackTitle","whiteSpace","textOverflow","ChartTrackArtist","marginLeft","MusicPage","React","memo","tabValue","setTabValue","fullScreenPlayerOpen","setFullScreenPlayerOpen","uploadDialogOpen","setUploadDialogOpen","searchQuery","setSearchQuery","isSearchFocused","setIsSearchFocused","mainTab","setMainTab","playlists","setPlaylists","isPlaylistsLoading","setIsPlaylistsLoading","selectedPlaylist","setSelectedPlaylist","playlistDialogOpen","setPlaylistDialogOpen","playlistTracksDialogOpen","setPlaylistTracksDialogOpen","localLoading","setLocalLoading","viewMode","setViewMode","showSearchBar","setShowSearchBar","scrolled","setScrolled","refreshing","setRefreshing","showBackToTop","setShowBackToTop","isMobileNavVisible","setIsMobileNavVisible","lastScrollTop","setLastScrollTop","searchLoading","setSearchLoading","section","useParams","charts","setCharts","trending","most_played","most_liked","new_releases","chartsLoading","setChartsLoading","contextMenu","setContextMenu","selectedTrack","setSelectedTrack","snackbar","setSnackbar","popularArtists","setPopularArtists","artistsLoading","setArtistsLoading","artistSearchQuery","setArtistSearchQuery","artistSearchResults","setArtistSearchResults","isArtistSearching","setIsArtistSearching","playlistModalOpen","setPlaylistModalOpen","editingPlaylist","setEditingPlaylist","playlistContextMenu","setPlaylistContextMenu","mouseX","mouseY","selectedPlaylistForMenu","setSelectedPlaylistForMenu","playlistBannerOpen","setPlaylistBannerOpen","playlistViewModalOpen","setPlaylistViewModalOpen","viewingPlaylist","setViewingPlaylist","playlistDetailsLoading","setPlaylistDetailsLoading","between","searchInputRef","useRef","headerRef","searchParams","useSearchParams","navigate","useNavigate","location","useLocation","musicContext","useMusic","likedTracks","randomTracks","popularTracks","currentTrack","togglePlay","searchResults","isSearching","searchTracks","setCurrentSection","playTrack","likeTrack","setRandomTracks","loadMoreTracks","hasMoreTracks","setHasMoreTracks","isLoadingMore","setIsLoadingMore","loaderRef","prevTabValue","handleScroll","scrollTop","window","pageYOffset","document","documentElement","addEventListener","removeEventListener","resetPagination","initialSection","loadInitialData","fetchCharts","fetchPopularArtists","useCallback","get","receivedCharts","likedTrackIds","Set","syncLikes","isArray","isLiked","has","existingTrack","find","t","is_liked","updatedCharts","handleUrlSync","currentSection","fetchPublicPlaylists","ok","json","fetchUserPlaylists","JSON","parse","userPlaylists","all","previewTracks","detailResponse","detailData","track_count","created_at","updated_at","preview_tracks","publicPlaylists","mappedPublicPlaylists","publicPlaylistIds","uniqueUserPlaylists","filter","createPlaylist","deletePlaylist","playlistId","method","statusText","addTrackToPlaylist","trackId","body","stringify","track_ids","removeTrackFromPlaylist","playPlaylist","playlistSection","firstTrack","setPlaylistTracks","newValue","oldValue","scrollTo","current","newType","randomize","then","catch","err","handleTrackClick","handleCloseFullScreenPlayer","touchAction","handleOpenUploadDialog","handleCloseUploadDialog","handleOpenPlaylistTracksDialog","currentTracks","useMemo","debouncedSearch","query","results","setSearchResults","handleSearchChange","clearSearch","currentType","displayedTracks","effectiveLoading","currentHasMore","hasMoreByType","isLoadingData","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","unobserve","hasMore","getSectionData","subtitle","cover","getCoverWithFallback","copyTrackLink","trackLink","origin","navigator","clipboard","writeText","handleCloseContextMenu","handleCloseSnackbar","reason","pathParts","pathname","Error","playTrackFromUrl","handleSwitchToTracks","handleBackToCategories","scrollToTop","behavior","handleRefresh","handleToggleSearch","prev","focus","handleLikeTrack","updateChartsWithLikes","updateLikedStatus","chartTracks","prevCharts","renderTrackItem","isActive","isCurrentlyPlaying","onContextMenu","handleContextMenu","preventDefault","clientX","clientY","Pause","PlayArrow","is_verified","flexWrap","idx","arr","artist_info","goToArtist","textDecoration","formatDuration","overflowX","Favorite","FavoriteBorder","artists","debouncedArtistSearch","searchEndpoint","encodeURIComponent","fallbackResponse","fallbackError","searchArtists","handleArtistClick","artistId","handleOpenCreatePlaylist","handleOpenEditPlaylist","handleClosePlaylistModal","handleAddTracksToPlaylist","trackIds","every","result","handleRemoveTrackFromPlaylist","handleDeletePlaylist","handlePlaylistMoreClick","handleClosePlaylistContextMenu","fetchPlaylistDetails","handlePlaylistClick","playlistDetailsFromCache","fullDetails","handleEditFromView","handlePlayTrackFromPlaylist","fetchPlaylist","setPlaylistsLoading","disableGutters","SEO","image","meta","song","ArrowBack","Search","ref","placeholder","onFocus","onBlur","Upload","px","Fade","in","my","Grow","transformOrigin","transitionDelay","elevation","Zoom","CardContent","Shuffle","PlaylistGrid","skeletonCount","onPlaylistClick","onPlaylistPlay","onPlaylistMoreClick","QueueMusic","align","Refresh","LibraryMusic","lg","paddingTop","verified","Tooltip","VerifiedUser","Slide","direction","mountOnEnter","unmountOnExit","showLabels","BottomNavigationAction","Home","FullScreenPlayer","Menu","anchorReference","anchorPosition","undefined","ContentCopy","shareTrack","Share","Download","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","KeyboardArrowUp","PlaylistModal","onSave","playlistData","key","updatePlaylist","onAddTracks","onRemoveTrack","onDelete","isOwner","Edit","playlistLink"],"mappings":"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","x_google_ignoreList":[1]}