{"version":3,"file":"MainPage.CFkrN-o-.js","sources":["../../src/components/RepostItem/RepostItem.js","../../src/components/UI/ContentLoader.js","../../node_modules/@mui/icons-material/Timer.js","../../src/pages/Main/MainPage.js"],"sourcesContent":["import React, { useState, useContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { \n  Box, \n  Typography, \n  Avatar, \n  Card, \n  CardContent, \n  IconButton,\n  MenuItem,\n  Menu,\n  styled,\n  Fade\n} from '@mui/material';\nimport ReactMarkdown from 'react-markdown';\nimport { formatTimeAgo } from '../../utils/dateUtils';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport RepeatIcon from '@mui/icons-material/Repeat';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport { AuthContext } from '../../context/AuthContext';\nimport { MusicContext } from '../../context/MusicContext';\nimport { VerificationBadge } from '../../UIKIT';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ReportIcon from '@mui/icons-material/Report';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\n\nconst RepostCard = styled(Card)(({ theme, background }) => ({\n  marginBottom: '4px',\n  borderRadius: '12px',\n  backgroundColor: '#1E1E1E', \n  backgroundImage: background ? `linear-gradient(rgba(120, 100, 160, 0.03), rgba(20, 20, 20, 0.95)), url(${background})` : \n                'linear-gradient(145deg, rgba(30, 30, 30, 0.97), rgba(26, 26, 26, 0.99))',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  backgroundBlendMode: 'overlay',\n  backdropFilter: 'blur(15px)',\n  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.15)',\n  position: 'relative',\n  overflow: 'visible',\n  cursor: 'pointer',\n  transition: 'opacity 0.3s ease',\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderRadius: '12px',\n    background: 'rgba(100, 90, 140, 0.02)',\n    backdropFilter: 'blur(10px)',\n    zIndex: 0\n  }\n}));\n\nconst CardOverlay = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  borderRadius: '12px',\n  background: 'linear-gradient(145deg, rgba(30, 30, 30, 0.9), rgba(26, 26, 26, 0.97))',\n  backdropFilter: 'blur(15px)',\n  zIndex: 0\n}));\n\nconst OriginalPostCard = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderRadius: '8px',\n  backgroundColor: 'rgba(42, 42, 42, 0.8)',\n  backdropFilter: 'blur(5px)',\n  marginTop: theme.spacing(2),\n  border: '1px solid rgba(255, 255, 255, 0.05)',\n}));\n\nconst UserInfo = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: theme.spacing(1),\n  position: 'relative',\n  zIndex: 1\n}));\n\nconst MarkdownContent = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  zIndex: 1,\n  '& p': {\n    margin: 0,\n    marginBottom: theme.spacing(1),\n    wordBreak: 'break-word'\n  },\n  '& p:last-child': {\n    marginBottom: 0\n  },\n  '& img': {\n    maxWidth: '100%',\n    borderRadius: '8px',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  '& a': {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n  '& h1, & h2, & h3, & h4, & h5, & h6': {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  '& ul, & ol': {\n    paddingLeft: theme.spacing(2)\n  }\n}));\n\nconst BlurredMenu = styled(Menu)(({ theme }) => ({\n  '& .MuiPaper-root': {\n    backgroundColor: 'rgba(30, 30, 30, 0.85)',\n    backdropFilter: 'blur(10px)',\n    border: '1px solid rgba(255, 255, 255, 0.05)',\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n    '& .MuiMenuItem-root': {\n      '&:hover': {\n        backgroundColor: 'rgba(100, 90, 140, 0.1)',\n      },\n    }\n  }\n}));\n\n\nconst MusicTrackPreview = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(1, 1.5),\n  borderRadius: '10px',\n  backgroundColor: 'rgba(255, 255, 255, 0.07)',\n  marginBottom: theme.spacing(1),\n  marginTop: theme.spacing(1),\n  border: '1px solid rgba(255, 255, 255, 0.07)',\n  transition: 'all 0.2s ease',\n  '&:hover': {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    transform: 'translateY(-2px)',\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.15)'\n  }\n}));\n\nconst RepostItem = ({ repost, onDelete, onOpenLightbox }) => {\n  const navigate = useNavigate();\n  const { user } = useContext(AuthContext);\n  const { playTrack, currentTrack, isPlaying, togglePlay } = useContext(MusicContext);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const cardRef = useRef(null);\n  \n  \n  const [postMusicTracks, setPostMusicTracks] = useState([]);\n  \n  \n  const originalPost = repost.original_post;\n  \n  \n  const images = [];\n  if (originalPost.images && Array.isArray(originalPost.images)) {\n    images.push(...originalPost.images);\n  } else if (originalPost.image) {\n    images.push(originalPost.image);\n  }\n  \n  \n  React.useEffect(() => {\n    if (originalPost.music) {\n      try {\n        const parsedTracks = typeof originalPost.music === 'string' ? \n          JSON.parse(originalPost.music) : originalPost.music;\n        setPostMusicTracks(Array.isArray(parsedTracks) ? parsedTracks : []);\n      } catch (error) {\n        console.error('Error parsing music tracks in repost:', error);\n        setPostMusicTracks([]);\n      }\n    } else {\n      setPostMusicTracks([]);\n    }\n  }, [originalPost]);\n  \n  \n  const handleTrackPlay = (track, event) => {\n    event.stopPropagation();\n    \n    if (currentTrack && currentTrack.id === track.id) {\n      togglePlay(); \n    } else {\n      playTrack(track); \n    }\n  };\n  \n  \n  const handleClick = (e) => {\n    \n    if (e.target.closest('button') || e.target.closest('.MuiIconButton-root')) {\n      return;\n    }\n    \n    \n    navigate(`/post/${originalPost.id}`);\n  };\n  \n  \n  const handleMenuOpen = (e) => {\n    e.stopPropagation();\n    setMenuAnchorEl(e.currentTarget);\n  };\n  \n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n  \n  \n  const handleDelete = async () => {\n    handleMenuClose();\n    setIsDeleting(true);\n    \n    try {\n      const response = await axios.delete(`/api/reposts/${repost.id}`);\n      if (response.data && response.data.success) {\n        \n        setTimeout(() => {\n          if (onDelete) {\n            \n            onDelete(`repost-${repost.id}`);\n          }\n        }, 300); \n      }\n    } catch (error) {\n      console.error('Error deleting repost:', error);\n      setIsDeleting(false); \n    }\n  };\n  \n  \n  const backgroundImage = repost.user?.avatar_url || null;\n  \n  return (\n    <Fade in={!isDeleting} timeout={300}>\n      <RepostCard \n        ref={cardRef} \n        onClick={handleClick} \n        background={backgroundImage}\n        sx={{\n          opacity: isDeleting ? 0 : 1,\n          transform: isDeleting ? 'translateY(10px)' : 'none',\n        }}\n      >\n        <CardOverlay />\n        <CardContent sx={{ position: 'relative', zIndex: 1 }}>\n          \n          <UserInfo>\n            <Avatar \n              src={repost.user.avatar_url}\n              alt={repost.user.name}\n              sx={{ width: 40, height: 40, mr: 1.5 }}\n            />\n            <Box sx={{ flexGrow: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Typography variant=\"body1\" sx={{ fontWeight: 'medium', mr: 0.5 }}>\n                  {repost.user.name}\n                </Typography>\n                <VerificationBadge status={repost.user.verification} size=\"small\" />\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 0.5 }}>\n                  @{repost.user.username}\n                </Typography>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <RepeatIcon fontSize=\"small\" sx={{ color: 'text.secondary', mr: 0.5 }} />\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Поделился постом • {formatTimeAgo(repost.timestamp)}\n                </Typography>\n              </Box>\n            </Box>\n            \n            \n            {user && user.id === repost.user.id && (\n              <>\n                <IconButton \n                  size=\"small\" \n                  onClick={handleMenuOpen}\n                  sx={{ \n                    ml: 1,\n                    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n                  }}\n                >\n                  <MoreVertIcon fontSize=\"small\" />\n                </IconButton>\n                <BlurredMenu\n                  anchorEl={menuAnchorEl}\n                  open={Boolean(menuAnchorEl)}\n                  onClose={handleMenuClose}\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <MenuItem onClick={handleDelete}>Удалить репост</MenuItem>\n                </BlurredMenu>\n              </>\n            )}\n          </UserInfo>\n\n          \n          {repost.repost_text && (\n            <MarkdownContent sx={{ mb: 2 }}>\n              <Typography variant=\"body1\" sx={{ \n                mb: 1.5, \n                fontSize: '0.95rem',\n                lineHeight: 1.5\n              }}>\n                <ReactMarkdown transformLinkUri={null}>{repost.repost_text}</ReactMarkdown>\n              </Typography>\n            </MarkdownContent>\n          )}\n          \n          \n          <OriginalPostCard>\n            <UserInfo>\n              <Avatar \n                src={originalPost.user.avatar_url}\n                alt={originalPost.user.name}\n                sx={{ width: 32, height: 32, mr: 1 }}\n              />\n              <Box sx={{ flexGrow: 1 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" sx={{ fontWeight: 'medium', mr: 0.5 }}>\n                    {originalPost.user.name}\n                  </Typography>\n                  <VerificationBadge status={originalPost.user.verification} size=\"small\" />\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 0.5 }}>\n                    @{originalPost.user.username}\n                  </Typography>\n                </Box>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {formatTimeAgo(originalPost.timestamp)}\n                </Typography>\n              </Box>\n            </UserInfo>\n            \n            \n            <MarkdownContent>\n              <Typography variant=\"body1\" sx={{ \n                fontSize: '0.9rem', \n                lineHeight: 1.5,\n                color: 'rgba(255, 255, 255, 0.8)'\n              }}>\n                <ReactMarkdown transformLinkUri={null}>{originalPost.content}</ReactMarkdown>\n              </Typography>\n            </MarkdownContent>\n            \n            \n            {postMusicTracks.length > 0 && (\n              <Box sx={{ mt: 1, mb: 1 }}>\n                {postMusicTracks.slice(0, 2).map((track, index) => (\n                  <MusicTrackPreview \n                    key={`track-${index}`} \n                    onClick={(e) => handleTrackPlay(track, e)}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <Box \n                      sx={{ \n                        width: 28, \n                        height: 28, \n                        borderRadius: '6px', \n                        overflow: 'hidden', \n                        position: 'relative',\n                        mr: 1.5,\n                        flexShrink: 0,\n                        bgcolor: 'rgba(0, 0, 0, 0.2)',\n                        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.15)',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                      }}\n                    >\n                      <img \n                        src={\n                          !track.cover_path ? '/uploads/system/album_placeholder.jpg' :\n                          track.cover_path.startsWith('/static/') ? track.cover_path :\n                          track.cover_path.startsWith('static/') ? `/${track.cover_path}` :\n                          track.cover_path.startsWith('http') ? track.cover_path :\n                          `/static/music/${track.cover_path}`\n                        } \n                        alt={track.title}\n                        style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                        onError={(e) => {\n                          e.target.src = '/uploads/system/album_placeholder.jpg';\n                        }}\n                      />\n                      <Box\n                        sx={{\n                          position: 'absolute',\n                          top: 0,\n                          left: 0,\n                          width: '100%',\n                          height: '100%',\n                          background: 'linear-gradient(145deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.3))',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center'\n                        }}\n                      >\n                        <MusicNoteIcon \n                          sx={{ \n                            fontSize: 14, \n                            color: 'rgba(255, 255, 255, 0.9)',\n                            filter: 'drop-shadow(0 1px 1px rgba(0,0,0,0.3))'\n                          }} \n                        />\n                      </Box>\n                    </Box>\n                    <Box sx={{ flex: 1, minWidth: 0 }}>\n                      <Typography \n                        variant=\"caption\" \n                        noWrap \n                        sx={{ \n                          fontWeight: 'medium',\n                          color: currentTrack && currentTrack.id === track.id ? 'primary.main' : 'inherit',\n                          fontSize: '0.8rem',\n                          letterSpacing: '0.2px',\n                          display: 'block'\n                        }}\n                      >\n                        {track.title}\n                      </Typography>\n                      <Typography \n                        variant=\"caption\" \n                        color=\"text.secondary\" \n                        noWrap \n                        sx={{ display: 'block', fontSize: '0.7rem' }}\n                      >\n                        {track.artist}\n                      </Typography>\n                    </Box>\n                    {currentTrack && currentTrack.id === track.id && (\n                      isPlaying ? (\n                        <PauseIcon color=\"primary\" fontSize=\"small\" sx={{ \n                          ml: 1,\n                          animation: 'pulse 1.5s infinite ease-in-out',\n                          '@keyframes pulse': {\n                            '0%': { opacity: 0.7, transform: 'scale(1)' },\n                            '50%': { opacity: 1, transform: 'scale(1.1)' },\n                            '100%': { opacity: 0.7, transform: 'scale(1)' }\n                          }\n                        }} />\n                      ) : (\n                        <PlayArrowIcon color=\"primary\" fontSize=\"small\" sx={{ ml: 1 }} />\n                      )\n                    )}\n                  </MusicTrackPreview>\n                ))}\n                {postMusicTracks.length > 2 && (\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ \n                    display: 'block', \n                    textAlign: 'right', \n                    mt: 0.5, \n                    fontStyle: 'italic',\n                    fontSize: '0.75rem',\n                    opacity: 0.8\n                  }}>\n                    + еще {postMusicTracks.length - 2} трек(ов)\n                  </Typography>\n                )}\n              </Box>\n            )}\n            \n            \n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 1.5, opacity: 0.9 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <FavoriteIcon sx={{ fontSize: 16, mr: 0.5, color: '#e57373' }} />\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {originalPost.likes_count || 0}\n                </Typography>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <ChatBubbleOutlineIcon sx={{ fontSize: 16, mr: 0.5 }} />\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {originalPost.comments_count || 0}\n                </Typography>\n              </Box>\n              {postMusicTracks.length > 0 && (\n                <Box sx={{ display: 'flex', alignItems: 'center', ml: 2 }}>\n                  <MusicNoteIcon sx={{ fontSize: 16, mr: 0.5 }} />\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {postMusicTracks.length}\n                  </Typography>\n                </Box>\n              )}\n            </Box>\n          </OriginalPostCard>\n        </CardContent>\n      </RepostCard>\n    </Fade>\n  );\n};\n\nexport default RepostItem; ","import React from 'react';\nimport { Box } from '@mui/material';\n\n/**\n * ContentLoader component with no animations\n * Directly renders content without any transitions\n */\nconst ContentLoader = ({ \n  loading, \n  children, \n  skeletonCount = 1,\n  height = '100px',\n  sx = {},\n  showSkeleton = false\n}) => {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      {children}\n    </Box>\n  );\n};\n\nexport default ContentLoader; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 1h6v2H9zm10.03 6.39 1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61M13 14h-2V8h2z\"\n}), 'Timer');","import React, { useState, useEffect, useContext, useRef, useCallback, useMemo } from 'react';\nimport { \n  Box, \n  Typography,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Avatar,\n  Button,\n  CircularProgress,\n  Divider,\n  Paper,\n  IconButton,\n  styled,\n  InputBase,\n  Tooltip,\n  Fade,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Snackbar,\n  Chip,\n  useTheme,\n  useMediaQuery,\n  CardMedia,\n  ImageList,\n  ImageListItem,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@mui/material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport PostService from '../../services/PostService';\nimport axios from '../../services/axiosConfig';\nimport ImageIcon from '@mui/icons-material/Image';\nimport VideoCameraBackIcon from '@mui/icons-material/VideoCameraBack';\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport ShareIcon from '@mui/icons-material/Share';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport ReportIcon from '@mui/icons-material/Report';\nimport { formatTimeAgo, formatDate } from '../../utils/dateUtils';\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\nimport ImageGrid from '../../components/Post/ImageGrid';\nimport { Post } from '../../components/Post';\nimport RepostItem from '../../components/RepostItem';\nimport PostSkeleton from '../../components/Post/PostSkeleton';\nimport MusicSelectDialog from '../../components/Music/MusicSelectDialog';\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport ImageOutlinedIcon from '@mui/icons-material/ImageOutlined';\nimport { MusicContext } from '../../context/MusicContext';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\nimport ContentLoader from '../../components/UI/ContentLoader';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport UpdateInfo from '../../components/Updates/UpdateInfo';\nimport UpdateService from '../../services/UpdateService';\nimport SimpleImageViewer from '../../components/SimpleImageViewer';\nimport DynamicIslandNotification from '../../components/DynamicIslandNotification';\n\n\nconst PostCard = styled(Card)(({ theme }) => ({\n  marginBottom: 10,\n  borderRadius: '10px',\n  overflow: 'hidden',\n  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n  background: '#1A1A1A',\n  cursor: 'pointer'\n}));\n\n\nconst OnlineUsersCard = styled(Card)(({ theme }) => ({\n  borderRadius: '12px',\n  overflow: 'hidden',\n  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n  background: theme.palette.background.paper,\n  border: theme.palette.mode === 'dark' \n    ? '1px solid rgba(255, 255, 255, 0.1)' \n    : '1px solid rgba(0, 0, 0, 0.1)'\n}));\n\nconst RecommendationCard = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(1.5),\n  borderRadius: '12px',\n  background: '#1d1d1d',\n  boxShadow: '0 1px 3px rgba(0, 0, 0, 0.12)',\n  border: '1px solid rgba(255, 255, 255, 0.03)'\n}));\n\nconst FollowButton = styled(Button)(({ theme, following }) => ({\n  borderRadius: '10px',\n  textTransform: 'none',\n  fontWeight: 'medium',\n  minWidth: '80px',\n  padding: theme.spacing(0.5, 1.5),\n  fontSize: '0.75rem',\n  backgroundColor: following ? 'transparent' : theme.palette.primary.main,\n  borderColor: following ? theme.palette.divider : theme.palette.primary.main,\n  color: following ? theme.palette.text.primary : theme.palette.primary.contrastText,\n  '&:hover': {\n    backgroundColor: following ? 'rgba(255, 255, 255, 0.05)' : theme.palette.primary.dark,\n  }\n}));\n\nconst SidebarContainer = styled(Box)(({ theme }) => ({\n  position: 'sticky',\n  top: 80,\n  width: '100%',\n  [theme.breakpoints.down('md')]: {\n    position: 'static',\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst MarkdownContent = styled(Box)(({ theme }) => ({\n  '& p': {\n    margin: theme.spacing(1, 0),\n    lineHeight: 1.6,\n  },\n  '& h1, & h2, & h3, & h4, & h5, & h6': {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    fontWeight: 600,\n  },\n  '& a': {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  '& ul, & ol': {\n    marginLeft: theme.spacing(2),\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.action.hover,\n    padding: theme.spacing(0.3, 0.6),\n    borderRadius: 3,\n  },\n  '& pre': {\n    backgroundColor: theme.palette.grey[900],\n    color: theme.palette.common.white,\n    padding: theme.spacing(1.5),\n    borderRadius: theme.shape.borderRadius,\n    overflowX: 'auto',\n    '& code': {\n      backgroundColor: 'transparent',\n      padding: 0,\n    },\n  },\n}));\n\n\n\nconst PostInput = styled(InputBase)(({ theme }) => ({\n  width: '100%',\n  borderRadius: '10px',\n  backgroundColor: 'rgba(255, 255, 255, 0.05)',\n  '&:hover': {\n    backgroundColor: 'rgba(255, 255, 255, 0.07)',\n  },\n  '& .MuiInputBase-input': {\n    padding: '8px',\n  },\n}));\n\nconst PostActions = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  paddingTop: theme.spacing(1),\n}));\n\nconst MediaPreviewContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  marginTop: theme.spacing(2),\n  borderRadius: '10px',\n  overflow: 'hidden',\n  backgroundColor: 'rgba(0, 0, 0, 0.2)',\n}));\n\nconst RemoveMediaButton = styled(IconButton)(({ theme }) => ({\n  position: 'absolute',\n  top: 8,\n  right: 8,\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  color: theme.palette.common.white,\n  padding: theme.spacing(0.5),\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  },\n}));\n\nconst ContentContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(),\n  width: '100%',\n  maxWidth: '100%',\n  overflow: { xs: 'hidden', md: 'visible' },\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n  },\n  [theme.breakpoints.down('sm')]: {\n    gap: theme.spacing(1), \n  },\n}));\n\nconst LeftColumn = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '5px',\n  [theme.breakpoints.up('md')]: {\n    width: '68%',\n  },\n  [theme.breakpoints.down('sm')]: {\n    gap: '5px', \n  },\n}));\n\nconst RightColumn = styled(Box)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n  [theme.breakpoints.up('md')]: {\n    width: '32%',\n  },\n  [theme.breakpoints.down('sm')]: {\n    gap: theme.spacing(1), \n  },\n}));\n\n\nconst OnlineUsers = () => {\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const theme = useTheme();\n  \n  useEffect(() => {\n    const fetchOnlineUsers = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('/api/users/online?limit=1200');\n        \n        if (Array.isArray(response.data)) {\n          setOnlineUsers(response.data);\n        } else if (response.data && Array.isArray(response.data.users)) {\n          setOnlineUsers(response.data.users);\n        } else {\n          setOnlineUsers([]);\n        }\n      } catch (error) {\n        console.error('Error fetching online users:', error);\n        setOnlineUsers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchOnlineUsers();\n    \n    \n    const interval = setInterval(fetchOnlineUsers, 60000);\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  const handleUserClick = (username) => {\n    navigate(`/profile/${username}`);\n  };\n  \n  if (loading) {\n    return (\n      <OnlineUsersCard sx={{ p: 1, minHeight: 56, display: 'flex', alignItems: 'center' }}>\n        <CircularProgress size={18} sx={{ mr: 1 }} />\n        <Typography variant=\"body2\" sx={{ fontSize: '0.95rem' }}>Загрузка...</Typography>\n      </OnlineUsersCard>\n    );\n  }\n  \n  if (onlineUsers.length === 0) {\n    return null;\n  }\n  \n  return (\n    <OnlineUsersCard sx={{ p: 1, minHeight: 56, display: 'flex', alignItems: 'center', overflowX: 'auto' }}>\n      <Box sx={{\n        display: 'flex',\n        flexWrap: 'nowrap',\n        gap: 1,\n        overflowX: 'auto',\n        pb: 0,\n        '&::-webkit-scrollbar': { height: '0px', display: 'none' },\n        msOverflowStyle: 'none',\n        scrollbarWidth: 'none',\n      }}>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 0.5,\n            px: 1,\n            py: 0.5,\n            borderRadius: '12px',\n            backgroundColor: 'rgba(76, 175, 80, 0.1)',\n            border: '1px solid rgba(76, 175, 80, 0.2)',\n            minWidth: 'fit-content',\n            height: 36,\n            mr: 0.5\n          }}\n        >\n          <Box\n            sx={{\n              width: 8,\n              height: 8,\n              borderRadius: '50%',\n              backgroundColor: '#4caf50',\n              boxShadow: '0 0 8px rgba(76, 175, 80, 0.5)'\n            }}\n          />\n          <Typography\n            variant=\"body2\"\n            sx={{\n              fontSize: '0.75rem',\n              fontWeight: 500,\n              color: '#4caf50'\n            }}\n          >\n            {onlineUsers.length} онлайн\n          </Typography>\n        </Box>\n        {onlineUsers.map(user => (\n          <Box\n            key={user.id}\n            sx={{ position: 'relative', cursor: 'pointer', mx: 0.25 }}\n            onClick={() => handleUserClick(user.username)}\n          >\n            <Avatar\n              src={user.photo}\n              alt={user.username}\n              sx={{\n                width: 36,\n                height: 36,\n                border: `2px solid ${theme.palette.background.paper}`,\n                boxSizing: 'border-box',\n                background: '#222',\n              }}\n              onError={e => {\n                const img = e.target;\n                if (img && typeof img.src !== 'undefined') {\n                  img.src = '/static/uploads/system/avatar.png';\n                }\n              }}\n            />\n            <Box\n              sx={{\n                position: 'absolute',\n                bottom: 2,\n                right: 2,\n                width: 9,\n                height: 9,\n                borderRadius: '50%',\n                backgroundColor: '#4caf50',\n                border: `1.5px solid ${theme.palette.background.paper}`,\n                boxSizing: 'border-box',\n              }}\n            />\n          </Box>\n        ))}\n      </Box>\n    </OnlineUsersCard>\n  );\n};\n\n\nconst UserRecommendation = ({ user }) => {\n  const [following, setFollowing] = useState(user.is_following || false);\n  const { user: currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const handleFollow = async (e) => {\n    e.stopPropagation();\n    try {\n      \n      setFollowing(!following);\n      \n      const response = await axios.post(`/api/profile/follow`, {\n        followed_id: user.id\n      });\n      \n      \n      if (response.data && response.data.success) {\n        setFollowing(response.data.is_following);\n      }\n    } catch (error) {\n      \n      setFollowing(following);\n      console.error('Error toggling follow:', error);\n    }\n  };\n  \n  const handleCardClick = () => {\n    navigate(`/profile/${user.username}`);\n  };\n\n  \n  const getAvatarSrc = () => {\n    if (!user.photo) return '/static/uploads/system/avatar.png';\n    \n    \n    if (user.photo.startsWith('/') || user.photo.startsWith('http')) {\n      return user.photo;\n    }\n    \n    \n    return `/static/uploads/avatar/${user.id}/${user.photo}`;\n  };\n  \n  \n  const isChannelAccount = currentUser && currentUser.account_type === 'channel';\n  \n  return (\n    <Box \n      onClick={handleCardClick} \n      sx={{ \n        cursor: 'pointer',\n        py: 2,\n        px: 2.5,\n        transition: 'all 0.2s ease',\n        '&:hover': {\n          backgroundColor: 'rgba(255, 255, 255, 0.03)'\n        }\n      }}\n    >\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\n          <Avatar \n            src={getAvatarSrc()}\n            alt={user.name || user.username}\n            sx={{ \n              width: 42, \n              height: 42, \n              mr: 1.5,\n              border: '2px solid rgba(208, 188, 255, 0.3)',\n              boxShadow: '0 2px 8px rgba(0, 0, 0, 0.15)'\n            }}\n            onError={(e) => {\n              console.error(`Failed to load avatar for ${user.name}`);\n              const imgElement = e.target;\n              if (imgElement && typeof imgElement.src !== 'undefined') {\n                imgElement.src = `/static/uploads/avatar/system/avatar.png`;\n              }\n            }}\n          />\n          <Box sx={{ minWidth: 0, flex: 1 }}>\n            <Typography \n              variant=\"body2\" \n              fontWeight=\"500\" \n              noWrap \n              sx={{ \n                color: theme => theme.palette.text.primary,\n                letterSpacing: '0.1px'\n              }}\n            >\n              {user.name || user.username}\n            </Typography>\n            <Box sx={{ \n              display: 'flex', \n              alignItems: 'center',\n              gap: 0.75\n            }}>\n              <Typography \n                variant=\"caption\" \n                color=\"text.secondary\" \n                noWrap \n                sx={{ \n                  fontSize: '0.75rem',\n                  color: '#a0a0a0'\n                }}\n              >\n                @{user.username}\n              </Typography>\n              {user.is_verified && (\n                <Box\n                  component=\"span\"\n                  sx={{\n                    display: 'inline-flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    width: 12,\n                    height: 12,\n                    bgcolor: '#8470FF',\n                    borderRadius: '50%',\n                    fontSize: '0.6rem',\n                    color: 'white',\n                    fontWeight: 'bold'\n                  }}\n                >\n                  ✓\n                </Box>\n              )}\n            </Box>\n          </Box>\n          \n          {!isChannelAccount && (\n            <Button\n              variant={following ? \"text\" : \"contained\"}\n              size=\"small\"\n              onClick={handleFollow}\n              sx={{\n                minWidth: 'auto',\n                height: 32,\n                borderRadius: '16px',\n                textTransform: 'none',\n                px: following ? 2 : 2,\n                ml: 1,\n                fontSize: '0.75rem',\n                fontWeight: 500,\n                ...(following && {\n                  color: '#a0a0a0',\n                  border: '1px solid rgba(255, 255, 255, 0.12)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(255, 0, 0, 0.04)',\n                    color: '#ff5252',\n                    borderColor: 'rgba(255, 82, 82, 0.2)'\n                  }\n                })\n              }}\n            >\n              {following ? 'Отписаться' : 'Подписаться'}\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\n\nconst CreatePost = ({ onPostCreated }) => {\n  const { user } = useContext(AuthContext);\n  const { playTrack, currentTrack, isPlaying, togglePlay } = useContext(MusicContext);\n  const [content, setContent] = useState('');\n  const [mediaFiles, setMediaFiles] = useState([]);\n  const [mediaType, setMediaType] = useState('');\n  const [mediaPreview, setMediaPreview] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [mediaNotification, setMediaNotification] = useState({ open: false, message: '' });\n  \n  \n  const [musicSelectOpen, setMusicSelectOpen] = useState(false);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  \n  \n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'error'\n  });\n  \n  \n  const [rateLimitDialog, setRateLimitDialog] = useState({\n    open: false,\n    message: '',\n    timeRemaining: 0\n  });\n  \n  const [showSizeError, setShowSizeError] = useState(false);\n  const [sizeErrorMessage, setSizeErrorMessage] = useState('');\n  const MAX_VIDEO_SIZE = 150 * 1024 * 1024; // 150MB in bytes\n  const MAX_PHOTO_SIZE = 50 * 1024 * 1024;  // 50MB in bytes\n  \n  \n  useEffect(() => {\n    if (error) setError('');\n  }, [content, mediaFiles, selectedTracks, error]);\n  \n  \n  const dragCounter = useRef(0);\n  \n  const handleDragEnter = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter.current += 1;\n    if (dragCounter.current === 1) {\n      setIsDragging(true);\n    }\n  };\n  \n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n  };\n  \n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter.current -= 1;\n    if (dragCounter.current === 0) {\n      setIsDragging(false);\n    }\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter.current = 0;\n    setIsDragging(false);\n    \n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      processFiles(files);\n    }\n  };\n  \n  const handleMediaChange = (event) => {\n    event.preventDefault(); \n    const files = Array.from(event.target.files);\n    if (files.length > 0) {\n      processFiles(files);\n    }\n  };\n  \n  const processFiles = (files) => {\n    if (!files.length) return;\n\n    let hasInvalidSize = false;\n    \n    // Проверяем размеры файлов\n    Array.from(files).forEach(file => {\n      const isVideo = file.type.startsWith('video/');\n      const isImage = file.type.startsWith('image/');\n\n      if (isVideo && file.size > MAX_VIDEO_SIZE) {\n        setSizeErrorMessage(`Размер видео превышает лимит в 150МБ`);\n        setShowSizeError(true);\n        hasInvalidSize = true;\n      }\n\n      if (isImage && file.size > MAX_PHOTO_SIZE) {\n        setSizeErrorMessage(`Размер изображения превышает лимит в 50МБ`);\n        setShowSizeError(true);\n        hasInvalidSize = true;\n      }\n    });\n\n    if (hasInvalidSize) {\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      return;\n    }\n\n    const imageFiles = Array.from(files).filter(file => file.type.startsWith('image/'));\n    const videoFiles = Array.from(files).filter(file => file.type.startsWith('video/'));\n\n    if (imageFiles.length === 0 && videoFiles.length === 0) {\n      setMediaNotification({\n        open: true,\n        message: 'Поддерживаются только изображения и видео'\n      });\n      return;\n    }\n\n    // Если уже есть видео, не позволяем добавлять изображения\n    if (mediaType === 'video' && imageFiles.length > 0) {\n      setMediaNotification({\n        open: true,\n        message: 'Нельзя прикрепить фото и видео одновременно'\n      });\n      return;\n    }\n\n    // Если уже есть изображения, не позволяем добавлять видео\n    if (mediaType === 'image' && videoFiles.length > 0) {\n      setMediaNotification({\n        open: true,\n        message: 'Нельзя прикрепить фото и видео одновременно'\n      });\n      return;\n    }\n\n    // Обработка видео\n    if (videoFiles.length > 0) {\n      setMediaFiles([videoFiles[0]]);\n      setMediaType('video');\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setMediaPreview([reader.result]);\n      };\n      reader.readAsDataURL(videoFiles[0]);\n      return;\n    }\n\n    // Обработка изображений\n    if (imageFiles.length > 0) {\n      setMediaFiles(prev => [...prev, ...imageFiles]);\n      setMediaType('image');\n      \n      // Создаем превью для всех изображений\n      const newPreviews = [];\n      imageFiles.forEach(file => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          newPreviews.push(reader.result);\n          if (newPreviews.length === imageFiles.length) {\n            setMediaPreview(prev => [...prev, ...newPreviews]);\n          }\n        };\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n  \n  const handleRemoveMedia = () => {\n    setMediaFiles([]);\n    setMediaPreview([]);\n    setMediaType('');\n    setSelectedTracks([]);\n    setError('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  \n  \n  const handleMusicSelect = (tracks) => {\n    setSelectedTracks(tracks);\n  };\n  \n  \n  const handleRemoveTrack = (trackId) => {\n    setSelectedTracks(prev => prev.filter(track => track.id !== trackId));\n  };\n  \n  const clearForm = () => {\n    setContent('');\n    setMediaFiles([]);\n    setMediaPreview([]);\n    setMediaType('');\n    setSelectedTracks([]);\n    setError('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  \n  \n  const handleTrackPlay = (track, event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    \n    if (currentTrack && currentTrack.id === track.id) {\n      togglePlay(); \n    } else {\n      playTrack(track); \n    }\n  };\n  \n  const handleSubmit = async () => {\n    if (!content.trim() && mediaFiles.length === 0 && selectedTracks.length === 0) return;\n    \n    try {\n      setIsSubmitting(true);\n      setError('');\n      console.log(\"Starting post submission...\");\n      \n      const formData = new FormData();\n      formData.append('content', content.trim());\n      \n      console.log(\"Added content to FormData:\", content.trim());\n      \n      if (mediaType === 'image') {\n        // Отправляем все изображения с правильным форматом\n        mediaFiles.forEach((file, index) => {\n          console.log(`Adding image[${index}]:`, file.name, file.size);\n          formData.append(`images[${index}]`, file); // Исправлено на правильный формат\n        });\n      } else if (mediaType === 'video') {\n        console.log(\"Adding video to FormData:\", mediaFiles[0].name, mediaFiles[0].size);\n        formData.append('video', mediaFiles[0]);\n      }\n      \n      if (selectedTracks.length > 0) {\n        console.log(`Adding ${selectedTracks.length} music tracks to post`);\n        \n        const trackData = selectedTracks.map(track => ({\n          id: track.id,\n          title: track.title,\n          artist: track.artist,\n          duration: track.duration,\n          file_path: track.file_path,\n          cover_path: track.cover_path\n        }));\n        formData.append('music', JSON.stringify(trackData));\n      }\n      \n      console.log(\"Sending post request to server...\");\n      const response = await axios.post('/api/posts', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      \n      console.log(\"Post created successfully!\", response.data);\n      \n      clearForm();\n      \n      if (onPostCreated) {\n        onPostCreated(response.data.post);\n      }\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n      \n      \n      if (error.response && error.response.status === 429) {\n        const rateLimit = error.response.data.rate_limit;\n        let errorMessage = \"Превышен лимит публикации постов. \";\n        let timeRemaining = 0;\n        \n        if (rateLimit && rateLimit.reset) {\n          \n          const resetTime = new Date(rateLimit.reset * 1000);\n          const now = new Date();\n          const diffSeconds = Math.round((resetTime - now) / 1000);\n          timeRemaining = diffSeconds;\n          \n          if (diffSeconds > 60) {\n            const minutes = Math.floor(diffSeconds / 60);\n            const seconds = diffSeconds % 60;\n            errorMessage += `Следующий пост можно опубликовать через ${minutes} мин. ${seconds} сек.`;\n          } else {\n            errorMessage += `Следующий пост можно опубликовать через ${diffSeconds} сек.`;\n          }\n        } else {\n          errorMessage += \"Пожалуйста, повторите попытку позже.\";\n          timeRemaining = 60; \n        }\n        \n        setError(errorMessage);\n        \n        setSnackbar({\n          open: true,\n          message: errorMessage,\n          severity: 'warning'\n        });\n        \n        \n        setRateLimitDialog({\n          open: true,\n          message: errorMessage,\n          timeRemaining: timeRemaining\n        });\n      } else if (error.response && error.response.data && error.response.data.error) {\n        setError(error.response.data.error);\n        \n        setSnackbar({\n          open: true,\n          message: error.response.data.error,\n          severity: 'error'\n        });\n      } else {\n        setError(\"Произошла ошибка при создании поста. Пожалуйста, попробуйте еще раз.\");\n        \n        setSnackbar({\n          open: true,\n          message: \"Произошла ошибка при создании поста. Пожалуйста, попробуйте еще раз.\",\n          severity: 'error'\n        });\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handlePaste = (e) => {\n    const clipboardData = e.clipboardData;\n    if (clipboardData.items) {\n      const items = Array.from(clipboardData.items);\n      const imageItems = items.filter(item => item.type.indexOf('image') !== -1);\n      \n      if (imageItems.length > 0) {\n        e.preventDefault();\n        \n        // Если уже есть видео, не позволяем добавлять изображения\n        if (mediaType === 'video') {\n          setMediaNotification({\n            open: true,\n            message: 'Нельзя прикрепить фото и видео одновременно'\n          });\n          return;\n        }\n\n        const imageFiles = imageItems.map(item => item.getAsFile());\n        processFiles(imageFiles);\n      }\n    }\n  };\n  \n  if (!user) return null;\n  \n  return (\n    <Paper \n      elevation={0} \n      sx={{ \n        p: 2, \n        borderRadius: 1,\n        backgroundColor: (theme) => theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'hidden',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      }}\n    >\n      {error && (\n        <Alert \n          severity=\"error\" \n          sx={{ mb: 2 }}\n          onClose={() => setError('')}\n        >\n          {error}\n        </Alert>\n      )}\n      \n      \n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={() => setSnackbar(prev => ({ ...prev, open: false }))} \n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n      \n      \n      <Dialog\n        open={rateLimitDialog.open}\n        onClose={() => setRateLimitDialog(prev => ({ ...prev, open: false }))}\n        aria-labelledby=\"rate-limit-dialog-title\"\n        aria-describedby=\"rate-limit-dialog-description\"\n        PaperProps={{\n          sx: {\n            backgroundColor: '#1A1A1A',\n            borderRadius: '12px',\n            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.5)',\n            border: '1px solid rgba(255, 255, 255, 0.1)',\n            maxWidth: '400px',\n            width: '100%'\n          }\n        }}\n      >\n        <Box sx={{ p: 3 }}>\n          <Typography \n            id=\"rate-limit-dialog-title\" \n            variant=\"h6\" \n            component=\"h2\" \n            sx={{ \n              mb: 2, \n              color: '#D0BCFF',\n              fontWeight: 'medium',\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <TimerIcon sx={{ mr: 1 }} /> Пожалуйста, подождите\n          </Typography>\n          <Typography id=\"rate-limit-dialog-description\" sx={{ mb: 3, color: 'text.secondary' }}>\n            {rateLimitDialog.message}\n          </Typography>\n          <Box sx={{ textAlign: 'right' }}>\n            <Button \n              onClick={() => setRateLimitDialog(prev => ({ ...prev, open: false }))} \n              variant=\"contained\"\n              sx={{\n                borderRadius: '24px',\n                textTransform: 'none',\n                fontWeight: 500,\n                padding: '6px 16px'\n              }}\n            >\n              Понятно\n            </Button>\n          </Box>\n        </Box>\n      </Dialog>\n      \n      <Snackbar\n        open={mediaNotification.open}\n        autoHideDuration={3000}\n        onClose={() => setMediaNotification({ ...mediaNotification, open: false })}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={() => setMediaNotification({ ...mediaNotification, open: false })} \n          severity=\"warning\"\n          sx={{ width: '100%' }}\n        >\n          {mediaNotification.message}\n        </Alert>\n      </Snackbar>\n      \n      <DynamicIslandNotification\n        open={showSizeError}\n        message={sizeErrorMessage}\n        shortMessage=\"Ошибка размера файла\"\n        notificationType=\"error\"\n        animationType=\"pill\"\n        autoHideDuration={5000}\n        onClose={() => setShowSizeError(false)}\n      />\n      \n      <Box \n        component=\"form\" \n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n        sx={{ \n          position: 'relative',\n          zIndex: 1 \n        }}\n        onDragEnter={handleDragEnter}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n      >\n        <Box \n          sx={{ \n            display: 'flex', \n            flexDirection: 'column',\n            position: 'relative',\n            borderRadius: '12px',\n            border: isDragging ? '2px dashed #D0BCFF' : 'none',\n            backgroundColor: isDragging ? 'rgba(208, 188, 255, 0.05)' : 'transparent',\n            padding: isDragging ? 1 : 0,\n            transition: 'all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1)'\n          }}\n        >\n          {isDragging && (\n            <Box \n              sx={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexDirection: 'column',\n                backgroundColor: 'rgba(26, 26, 26, 0.7)',\n                borderRadius: '12px',\n                zIndex: 10,\n                opacity: isDragging ? 1 : 0,\n                transition: 'opacity 0.3s cubic-bezier(0.25, 0.8, 0.25, 1)'\n              }}\n            >\n              <ImageOutlinedIcon sx={{ fontSize: 40, color: '#D0BCFF', mb: 1, filter: 'drop-shadow(0 0 8px rgba(208, 188, 255, 0.6))' }} />\n              <Typography variant=\"body1\" color=\"primary\" sx={{ fontWeight: 'medium', textShadow: '0 1px 3px rgba(0,0,0,0.3)' }}>\n                Перетащите файлы сюда\n              </Typography>\n            </Box>\n          )}\n          \n          <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 0 }}>\n            <Avatar \n              src={user.photo ? `/static/uploads/avatar/${user.id}/${user.photo}` : undefined}\n              alt={user.name}\n              sx={{ mr: 1.5, width: 42, height: 42, border: '2px solid #D0BCFF' }}\n            />\n            <PostInput \n              placeholder=\"Что у вас нового?\"\n              multiline\n              maxRows={6}\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              onPaste={handlePaste}\n              fullWidth\n            />\n          </Box>\n          \n          \n          {mediaPreview.length > 0 && (\n            <Box sx={{ position: 'relative', mb: 2 }}>\n              <Box sx={{ \n                position: 'relative',\n                borderRadius: '12px',\n                overflow: 'hidden',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n                backgroundColor: 'rgba(0, 0, 0, 0.2)'\n              }}>\n                {mediaType === 'image' ? (\n                  <ImageList \n                    sx={{ \n                      width: '100%', \n                      height: 'auto',\n                      maxHeight: 500,\n                      margin: 0,\n                      padding: 1\n                    }} \n                    cols={mediaPreview.length > 3 ? 3 : mediaPreview.length} \n                    rowHeight={164}\n                    gap={8}\n                  >\n                    {mediaPreview.map((preview, index) => (\n                      <ImageListItem \n                        key={index}\n                        sx={{\n                          position: 'relative',\n                          borderRadius: '8px',\n                          overflow: 'hidden',\n                          border: '1px solid rgba(255, 255, 255, 0.1)'\n                        }}\n                      >\n                        <img\n                          src={preview}\n                          alt={`Preview ${index + 1}`}\n                          style={{ \n                            objectFit: 'cover',\n                            height: '100%',\n                            width: '100%',\n                            borderRadius: '8px'\n                          }}\n                        />\n                        <IconButton\n                          onClick={() => {\n                            setMediaFiles(prev => prev.filter((_, i) => i !== index));\n                            setMediaPreview(prev => prev.filter((_, i) => i !== index));\n                            if (mediaPreview.length === 1) {\n                              setMediaType('');\n                            }\n                          }}\n                          sx={{\n                            position: 'absolute',\n                            top: 4,\n                            right: 4,\n                            backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                            color: 'white',\n                            padding: '4px',\n                            '&:hover': {\n                              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                            },\n                            backdropFilter: 'blur(4px)'\n                          }}\n                        >\n                          <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                      </ImageListItem>\n                    ))}\n                  </ImageList>\n                ) : (\n                  <video\n                    src={mediaPreview[0]}\n                    controls\n                    style={{ \n                      width: '100%', \n                      maxHeight: '300px',\n                      borderRadius: '12px'\n                    }}\n                  />\n                )}\n                {mediaType === 'video' && (\n                  <IconButton\n                    onClick={handleRemoveMedia}\n                    sx={{\n                      position: 'absolute',\n                      top: 8,\n                      right: 8,\n                      backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                      color: 'white',\n                      '&:hover': {\n                        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                      },\n                      padding: '8px',\n                      backdropFilter: 'blur(4px)'\n                    }}\n                  >\n                    <CloseIcon fontSize=\"small\" />\n                  </IconButton>\n                )}\n              </Box>\n            </Box>\n          )}\n          \n          \n          {selectedTracks.length > 0 && (\n            <Box sx={{ mt: 2, mb: 2 }}>\n              {selectedTracks.map(track => (\n                <Box \n                  key={track.id}\n                  sx={{ \n                    display: 'flex', \n                    alignItems: 'center', \n                    py: 1, \n                    px: 1.5, \n                    mb: 1, \n                    borderRadius: '10px',\n                    bgcolor: 'rgba(255, 255, 255, 0.05)',\n                    border: '1px solid rgba(255, 255, 255, 0.08)',\n                    boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s ease'\n                  }}\n                  onClick={(e) => handleTrackPlay(track, e)}\n                >\n                  <Box \n                    sx={{ \n                      width: 32, \n                      height: 32, \n                      borderRadius: '6px', \n                      overflow: 'hidden',\n                      mr: 1.5,\n                      position: 'relative',\n                      bgcolor: 'rgba(0, 0, 0, 0.3)',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.2)'\n                    }}\n                  >\n                    <img \n                      src={\n                        !track.cover_path ? '/uploads/system/album_placeholder.jpg' :\n                        track.cover_path.startsWith('/static/') ? track.cover_path :\n                        track.cover_path.startsWith('static/') ? `/${track.cover_path}` :\n                        track.cover_path.startsWith('http') ? track.cover_path :\n                        `/static/music/${track.cover_path}`\n                      } \n                      alt={track.title}\n                      style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                      onError={(e) => {\n                        e.target.src = '/uploads/system/album_placeholder.jpg';\n                      }}\n                    />\n                    <Box\n                      sx={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        background: 'linear-gradient(145deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.3))',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                      }}\n                    >\n                      {currentTrack && currentTrack.id === track.id && isPlaying ? (\n                        <PauseIcon sx={{ color: 'white', fontSize: 16 }} />\n                      ) : (\n                        <MusicNoteIcon \n                          sx={{ \n                            fontSize: 14, \n                            color: 'rgba(255, 255, 255, 0.9)',\n                            filter: 'drop-shadow(0 1px 1px rgba(0,0,0,0.3))'\n                          }}\n                        />\n                      )}\n                    </Box>\n                  </Box>\n                  <Box sx={{ flexGrow: 1, overflow: 'hidden' }}>\n                    <Typography \n                      variant=\"body2\" \n                      sx={{ \n                        fontWeight: currentTrack && currentTrack.id === track.id ? 'medium' : 'normal',\n                        color: currentTrack && currentTrack.id === track.id ? 'primary.main' : 'text.primary',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        fontSize: '0.85rem'\n                      }}\n                    >\n                      {track.title}\n                    </Typography>\n                    <Typography \n                      variant=\"caption\" \n                      color=\"text.secondary\"\n                      sx={{\n                        display: 'block',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        fontSize: '0.75rem'\n                      }}\n                    >\n                      {track.artist}\n                    </Typography>\n                  </Box>\n                  {currentTrack && currentTrack.id === track.id ? (\n                    isPlaying ? (\n                      <PauseIcon color=\"primary\" fontSize=\"small\" sx={{ mr: 1, fontSize: 16 }} />\n                    ) : (\n                      <PlayArrowIcon color=\"primary\" fontSize=\"small\" sx={{ mr: 1, fontSize: 16 }} />\n                    )\n                  ) : null}\n                  <IconButton \n                    size=\"small\" \n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleRemoveTrack(track.id);\n                    }}\n                    sx={{ \n                      ml: 'auto',\n                      bgcolor: 'rgba(0, 0, 0, 0.2)',\n                      '&:hover': {\n                        bgcolor: 'rgba(0, 0, 0, 0.3)'\n                      },\n                      padding: '4px'\n                    }}\n                  >\n                    <CloseIcon fontSize=\"small\" sx={{ fontSize: 16 }} />\n                  </IconButton>\n                </Box>\n              ))}\n            </Box>\n          )}\n          \n          <PostActions>\n            <Box sx={{ display: 'flex', gap: 1 }}>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"image/*,video/*\"\n                multiple\n                onChange={handleMediaChange}\n                style={{ display: 'none' }}\n                id=\"media-upload-main\"\n              />\n              <Button\n                startIcon={<ImageOutlinedIcon />}\n                sx={{\n                  color: mediaFiles.length > 0 ? 'primary.main' : 'text.secondary',\n                  borderRadius: '24px',\n                  textTransform: 'none',\n                  fontSize: '0.875rem',\n                  fontWeight: 500,\n                  padding: '6px 12px',\n                  border: mediaFiles.length > 0 \n                    ? '1px solid rgba(208, 188, 255, 0.5)' \n                    : '1px solid rgba(255, 255, 255, 0.12)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(208, 188, 255, 0.08)',\n                    borderColor: 'rgba(208, 188, 255, 0.4)'\n                  }\n                }}\n                size=\"small\"\n                onClick={() => fileInputRef.current?.click()}\n              >\n                {mediaFiles.length ? `Файлы (${mediaFiles.length})` : 'Медиа'}\n              </Button>\n              \n              <Button\n                onClick={() => setMusicSelectOpen(true)}\n                startIcon={<MusicNoteIcon />}\n                sx={{\n                  color: selectedTracks.length > 0 ? 'primary.main' : 'text.secondary',\n                  borderRadius: '24px',\n                  textTransform: 'none',\n                  fontSize: '0.875rem',\n                  fontWeight: 500,\n                  padding: '6px 12px',\n                  border: selectedTracks.length > 0 \n                    ? '1px solid rgba(208, 188, 255, 0.5)' \n                    : '1px solid rgba(255, 255, 255, 0.12)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(208, 188, 255, 0.08)',\n                    borderColor: 'rgba(208, 188, 255, 0.4)'\n                  }\n                }}\n                size=\"small\"\n              >\n                {selectedTracks.length ? `Музыка (${selectedTracks.length})` : 'Музыка'}\n              </Button>\n            </Box>\n            \n            <Button \n              variant=\"contained\" \n              type=\"submit\"\n              disabled={isSubmitting || (!content.trim() && mediaFiles.length === 0 && selectedTracks.length === 0)}\n              endIcon={isSubmitting ? <CircularProgress size={16} color=\"inherit\" /> : null}\n              sx={{\n                borderRadius: '24px',\n                textTransform: 'none',\n                fontWeight: 500,\n                padding: '6px 16px'\n              }}\n            >\n              Опубликовать\n            </Button>\n          </PostActions>\n          \n          \n          <MusicSelectDialog\n            open={musicSelectOpen}\n            onClose={() => setMusicSelectOpen(false)}\n            onSelectTracks={handleMusicSelect}\n            maxTracks={3}\n          />\n        </Box>\n      </Box>\n    </Paper>\n  );\n};\n\n\nconst MainPage = React.memo(() => {\n  const { user } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [recommendations, setRecommendations] = useState([]);\n  const [loadingRecommendations, setLoadingRecommendations] = useState(true);\n  const [trendingBadges, setTrendingBadges] = useState([]);\n  const [loadingTrendingBadges, setLoadingTrendingBadges] = useState(true);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [feedType, setFeedType] = useState('all'); \n  const [requestId, setRequestId] = useState(0); \n  const isFirstRender = useRef(true); \n  const feedTypeChanged = useRef(false); \n  const navigate = useNavigate(); \n  const loadingMoreRef = useRef(false); \n  const loaderRef = useRef(null); \n  \n  \n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState('');\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [lightboxImages, setLightboxImages] = useState([]);\n\n  const [latestUpdate, setLatestUpdate] = useState(null);\n  \n  useEffect(() => {\n    const options = {\n      root: null, \n      rootMargin: '0px',\n      threshold: 0.1 \n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      const [entry] = entries;\n      if (entry.isIntersecting && hasMore && !loading && !loadingMoreRef.current && !feedTypeChanged.current) {\n        loadMorePosts();\n      }\n    }, options);\n\n    if (loaderRef.current) {\n      observer.observe(loaderRef.current);\n    }\n\n    return () => {\n      if (loaderRef.current) {\n        observer.unobserve(loaderRef.current);\n      }\n    };\n  }, [hasMore, loading, posts.length, feedType]);\n  \n  \n  useEffect(() => {\n    if (!isFirstRender.current) return; \n    \n    const initialLoad = async () => {\n      console.log(\"INITIAL MOUNT - ONE TIME LOAD\");\n      try {\n        setLoading(true);\n        setPosts([]);\n        \n        const params = {\n          page: 1,\n          per_page: 20,\n          sort: feedType,\n          include_all: feedType === 'all'\n        };\n        \n        \n        const currentRequestId = requestId + 1;\n        setRequestId(currentRequestId);\n        \n        const response = await axios.get('/api/posts/feed', { params });\n        \n        \n        if (requestId !== currentRequestId - 1) return;\n        \n        if (response.data && Array.isArray(response.data.posts)) {\n          setPosts(response.data.posts);\n          setHasMore(response.data.has_next === true);\n          setPage(2);\n        } else {\n          setPosts([]);\n          setHasMore(false);\n        }\n      } catch (error) {\n        console.error('Error loading initial posts:', error);\n        setPosts([]);\n        setHasMore(false);\n      } finally {\n        setLoading(false);\n        isFirstRender.current = false; \n      }\n    };\n    \n    initialLoad();\n    \n    \n  }, []);\n  \n  \n  useEffect(() => {\n    \n    if (isFirstRender.current) return;\n    \n    \n    feedTypeChanged.current = true;\n    \n    const loadFeedPosts = async () => {\n      console.log(`FEED TYPE CHANGED TO: ${feedType} - LOADING NEW POSTS`);\n      try {\n        setLoading(true);\n        setPosts([]);\n        \n        const params = {\n          page: 1,\n          per_page: 20,\n          sort: feedType,\n          include_all: feedType === 'all'\n        };\n        \n        \n        const currentRequestId = requestId + 1;\n        setRequestId(currentRequestId);\n        \n        \n        let response;\n        try {\n          response = await axios.get('/api/posts/feed', { params });\n        } catch (apiError) {\n          console.error(`Error in API call for ${feedType} feed:`, apiError);\n          \n          \n          if (feedType === 'recommended') {\n            \n            setHasMore(false);\n            setPosts([]);\n            setLoading(false);\n            feedTypeChanged.current = false;\n            return;\n          }\n          \n          \n          throw apiError;\n        }\n        \n        \n        if (requestId !== currentRequestId - 1) return;\n        \n        if (response.data && Array.isArray(response.data.posts)) {\n          setPosts(response.data.posts);\n          setHasMore(response.data.has_next === true);\n          setPage(2);\n        } else {\n          setPosts([]);\n          setHasMore(false);\n        }\n      } catch (error) {\n        console.error(`Error loading ${feedType} posts:`, error);\n        setPosts([]);\n        setHasMore(false);\n      } finally {\n        setLoading(false);\n        feedTypeChanged.current = false; \n      }\n    };\n    \n    loadFeedPosts();\n    \n    \n  }, [feedType]);\n  \n  \n  useEffect(() => {\n    \n    if (!isFirstRender.current) return;\n    \n    const fetchRecommendations = async () => {\n      try {\n        setLoadingRecommendations(true);\n        \n        \n        if (recommendations.length > 0) {\n          setLoadingRecommendations(false);\n          return;\n        }\n        \n        \n        try {\n          const response = await axios.get('/api/users/recent-channels', { timeout: 5000 });\n          if (Array.isArray(response.data)) {\n            setRecommendations(response.data || []);\n          } else {\n            \n            console.log('Unexpected response format:', response.data);\n            setRecommendations([]);\n          }\n        } catch (error) {\n          console.error('Error fetching recent channels:', error);\n          \n          setRecommendations([]);\n        }\n      } finally {\n        setLoadingRecommendations(false);\n      }\n    };\n\n    fetchRecommendations();\n    \n  }, []);\n\n  \n  useEffect(() => {\n    const fetchTrendingBadges = async () => {\n      try {\n        setLoadingTrendingBadges(true);\n        \n        const response = await axios.get('/api/badges/trending');\n        if (response.data && Array.isArray(response.data.badges)) {\n          setTrendingBadges(response.data.badges);\n        } else {\n          setTrendingBadges([]);\n        }\n      } catch (error) {\n        console.error('Error fetching trending badges:', error);\n        setTrendingBadges([]);\n      } finally {\n        setLoadingTrendingBadges(false);\n      }\n    };\n\n    fetchTrendingBadges();\n  }, []);\n\n  \n  const getFallbackRecommendations = () => {\n    return [\n      {\n        id: 'local1',\n        name: 'Анна Смирнова',\n        username: 'anna_smirnova',\n        photo: '/static/uploads/system/user_placeholder.png',\n        about: 'UX/UI дизайнер, люблю путешествия и фотографию'\n      },\n      {\n        id: 'local2',\n        name: 'Иван Петров',\n        username: 'ivan_petrov',\n        photo: '/static/uploads/system/user_placeholder.png',\n        about: 'Разработчик, любитель музыки и хороших книг'\n      },\n      {\n        id: 'local3',\n        name: 'Маргарита К.',\n        username: 'rita_k',\n        photo: '/static/uploads/system/user_placeholder.png',\n        about: 'Фотограф, путешественник, искатель приключений'\n      }\n    ];\n  };\n\n  \n  const loadMorePosts = async () => {\n    if (loading || !hasMore || feedTypeChanged.current || loadingMoreRef.current) return;\n    \n    try {\n      loadingMoreRef.current = true;\n      setLoading(true);\n      \n      const currentPage = page;\n      \n      const params = {\n        page: currentPage,\n        per_page: 10, \n        sort: feedType,\n        include_all: feedType === 'all'\n      };\n      \n      const currentRequestId = requestId + 1;\n      setRequestId(currentRequestId);\n      \n      setPage(currentPage + 1);\n      \n      const response = await axios.get('/api/posts/feed', { params });\n      \n      if (requestId !== currentRequestId - 1) return;\n      \n      if (response.data && Array.isArray(response.data.posts)) {\n        setPosts(prev => {\n          const existingPostIds = new Set(prev.map(p => p.id));\n          const newPosts = response.data.posts.filter(post => !existingPostIds.has(post.id));\n          return [...prev, ...newPosts];\n        });\n        setHasMore(response.data.has_next === true && response.data.posts.length > 0);\n      } else {\n        setHasMore(false);\n      }\n    } catch (error) {\n      console.error('Error loading more posts:', error);\n      setHasMore(false);\n    } finally {\n      setLoading(false);\n      loadingMoreRef.current = false;\n    }\n  };\n  \n  const handlePostCreated = (newPost, deletedPostId = null) => {\n    if (axios.cache) {\n      axios.cache.clearPostsCache();\n      axios.cache.clearByUrlPrefix('/api/posts/feed');\n      axios.cache.clearByUrlPrefix('/api/profile/pinned_post');\n    }\n    \n    if (deletedPostId) {\n      setPosts(prevPosts => prevPosts.filter(p => p.id !== deletedPostId));\n      return;\n    }\n    \n    if (!newPost) {\n      setPosts([]); \n      setPage(1); \n      \n      const refreshFeed = async () => {\n        try {\n          setLoading(true);\n          const params = {\n            page: 1,\n            per_page: 20,\n            sort: feedType,\n            include_all: feedType === 'all'\n          };\n          \n          const currentRequestId = requestId + 1;\n          setRequestId(currentRequestId);\n          \n          const response = await axios.get('/api/posts/feed', { \n            params,\n            forceRefresh: true\n          });\n          \n          if (requestId !== currentRequestId - 1) return;\n          \n          if (response.data && Array.isArray(response.data.posts)) {\n            setPosts(response.data.posts);\n            setHasMore(response.data.has_next === true);\n            setPage(2);\n          } else {\n            setPosts([]);\n            setHasMore(false);\n          }\n        } catch (error) {\n          console.error(`Error refreshing ${feedType} posts:`, error);\n          setPosts([]);\n          setHasMore(false);\n        } finally {\n          setLoading(false);\n        }\n      };\n      \n      refreshFeed();\n      return;\n    }\n    \n    setPosts(prevPosts => [newPost, ...prevPosts]);\n  };\n  \n  const handleFollow = async (userId, isFollowing) => {\n    try {\n      await axios.post('/api/profile/follow', { followed_id: userId });\n    } catch (error) {\n      console.error(\"Error following user:\", error);\n      setRecommendations(recommendations.map(rec => \n        rec.id === userId \n          ? { ...rec, isFollowing: !isFollowing } \n          : rec\n      ));\n    }\n  };\n  \n  const handleOpenLightbox = (image, allImages, index) => {\n    setCurrentImage(image);\n    setLightboxImages(Array.isArray(allImages) ? allImages : [image]);\n    setCurrentImageIndex(index || 0);\n    setLightboxOpen(true);\n  };\n  \n  const handleCloseLightbox = () => {\n    setLightboxOpen(false);\n  };\n  \n  const handleNextImage = () => {\n    setCurrentImageIndex((prevIndex) => {\n      const nextIndex = (prevIndex + 1) % lightboxImages.length;\n      setCurrentImage(lightboxImages[nextIndex]);\n      return nextIndex;\n    });\n  };\n  \n  const handlePrevImage = () => {\n    setCurrentImageIndex((prevIndex) => {\n      const nextIndex = (prevIndex - 1 + lightboxImages.length) % lightboxImages.length;\n      setCurrentImage(lightboxImages[nextIndex]);\n      return nextIndex;\n    });\n  };\n  \n  useEffect(() => {\n    const update = UpdateService.getLatestUpdate();\n    setLatestUpdate(update);\n  }, []);\n  \n  return (\n    <Container maxWidth=\"lg\" sx={{ \n      mt: 2, \n      mb: 0,\n      px: { xs: 0.5, sm: 0 },\n      width: '100%',\n      maxWidth: '100%',\n      overflow: { xs: 'hidden', md: 'visible' },\n      pb: { xs: '100px', sm: 0 }\n    }}>\n      <ContentContainer>\n        <LeftColumn>\n          <OnlineUsers />\n          <CreatePost onPostCreated={handlePostCreated} />\n          \n          \n          <Paper sx={{ \n            p: 1, \n            display: 'flex', \n            justifyContent: 'space-between',\n            mb: 0,\n            borderRadius: '12px',\n            backgroundColor: theme => theme.palette.mode === 'dark' ? '#1E1E1E' : theme.palette.background.paper,\n            backgroundImage: 'unset',\n            border: '1px solid rgba(255, 255, 255, 0.1)'\n          }}>\n            <Button \n              variant={feedType === 'all' ? 'contained' : 'text'} \n              onClick={() => setFeedType('all')}\n              sx={{ flex: 1, mx: 0.5 }}\n            >\n              Все\n            </Button>\n            <Button \n              variant={feedType === 'following' ? 'contained' : 'text'} \n              onClick={() => setFeedType('following')}\n              sx={{ flex: 1, mx: 0.5 }}\n            >\n              Подписки\n            </Button>\n            <Button \n              variant={feedType === 'recommended' ? 'contained' : 'text'} \n              onClick={() => setFeedType('recommended')}\n              sx={{ flex: 1, mx: 0.5 }}\n            >\n              Рекомендации\n            </Button>\n          </Paper>\n          \n          \n          <Box sx={{ mt: 0 }}>\n            {loading && posts.length === 0 ? (\n              \n              <>\n                {[...Array(5)].map((_, index) => (\n                  <PostSkeleton key={index} />\n                ))}\n              </>\n            ) : posts.length > 0 ? (\n              <Box sx={{ mt: 0 }}>\n                {posts.map((post) => (\n                  post.is_repost ? (\n                    <RepostItem key={post.id} post={post} />\n                  ) : (\n                    <Post \n                      key={post.id} \n                      post={post} \n                      showPostDetails={false}\n                      onOpenLightbox={handleOpenLightbox}\n                    />\n                  )\n                ))}\n                \n                \n                {hasMore && (\n                  <Box \n                    ref={loaderRef}\n                    sx={{ \n                      textAlign: 'center', \n                      py: 2, \n                      opacity: loading ? 1 : 0,\n                      transition: 'opacity 0.3s ease'\n                    }}\n                  >\n                    {loading && (\n                      <CircularProgress size={30} sx={{ color: 'primary.main' }} />\n                    )}\n                  </Box>\n                )}\n                \n                \n                {!hasMore && (\n                  <Box sx={{ \n                    textAlign: 'center', \n                    py: 3,\n                    opacity: 0.7\n                  }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Вы просмотрели все посты\n                    </Typography>\n                  </Box>\n                )}\n              </Box>\n            ) : (\n              <Box sx={{ \n                textAlign: 'center', \n                py: 4,\n                mt: 2\n              }}>\n                <Typography color=\"text.secondary\">\n                  Нет постов для отображения. Подпишитесь на пользователей, чтобы видеть их публикации в ленте.\n                </Typography>\n              </Box>\n            )}\n          </Box>\n        </LeftColumn>\n        \n        <RightColumn>\n          \n          <Box \n            component={Paper} \n            sx={{ \n              p: 0, \n              borderRadius: '12px', \n              mb: -0.625,\n              background: theme => theme.palette.mode === 'dark' \n                ? 'linear-gradient(145deg, #222222, #1c1c1c)'\n                : theme.palette.background.paper,\n              boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',\n              border: theme => `1px solid ${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.05)'}`,\n              overflow: 'hidden',\n              display: { xs: 'none', sm: 'block' } \n            }}\n          >\n\n            \n            {loadingRecommendations ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', py: 3, px: 2 }}>\n                <ContentLoader\n                  height={170}\n                  width=\"100%\"\n                  speed={2}\n                  backgroundColor=\"#292929\"\n                  foregroundColor=\"#333333\"\n                >\n                  \n                  <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" width=\"100%\" height=\"50\" />\n                  \n                  <rect x=\"0\" y=\"60\" rx=\"8\" ry=\"8\" width=\"100%\" height=\"50\" />\n                  \n                  <rect x=\"0\" y=\"120\" rx=\"8\" ry=\"8\" width=\"100%\" height=\"50\" />\n                </ContentLoader>\n              </Box>\n            ) : recommendations.length === 0 ? (\n              <Box sx={{ \n                textAlign: 'center', \n                py: 3, \n                px: 2,\n                background: 'linear-gradient(180deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.03))'\n              }}>\n                <Avatar \n                  sx={{ \n                    width: 50, \n                    height: 50, \n                    mx: 'auto', \n                    mb: 2,\n                    bgcolor: 'rgba(208, 188, 255, 0.1)',\n                    border: '1px solid rgba(208, 188, 255, 0.25)'\n                  }}\n                >\n                  <PersonAddIcon sx={{ color: '#D0BCFF', fontSize: 26 }} />\n                </Avatar>\n                <Typography variant=\"body2\" sx={{ fontWeight: 500, color: theme => theme.palette.text.secondary }}>\n                  Нет активных каналов\n                </Typography>\n                <Typography variant=\"caption\" sx={{ display: 'block', mt: 1, maxWidth: '80%', mx: 'auto', color: theme => theme.palette.text.disabled }}>\n                  Создайте первый канал или подпишитесь на существующие каналы\n                </Typography>\n              </Box>\n            ) : (\n              <Box>\n                {recommendations.map((channel, index) => (\n                  <Box key={channel.id}>\n                    <UserRecommendation user={channel} />\n                    {index < recommendations.length - 1 && (\n                      <Divider sx={{ opacity: 0.1, mx: 2 }} />\n                    )}\n                  </Box>\n                ))}\n              </Box>\n            )}\n          </Box>\n\n          {latestUpdate && (\n            <Box \n              sx={{ \n                mb: 2, \n                display: { xs: 'none', sm: 'block' },\n                '&:hover': {\n                  '& > *': { transform: 'translateY(-2px)' },\n                  cursor: 'pointer'\n                }\n              }}\n              onClick={() => navigate('/updates')}\n            >\n              <UpdateInfo \n                version={latestUpdate.version}\n                date={latestUpdate.date}\n                title={latestUpdate.title}\n                updates={latestUpdate.updates}\n                fixes={latestUpdate.fixes}\n                hideHeader={true}\n              />\n            </Box>\n          )}\n        </RightColumn>\n      </ContentContainer>\n      \n      \n      <SimpleImageViewer \n        isOpen={lightboxOpen}\n        onClose={handleCloseLightbox}\n        images={lightboxImages}\n        initialIndex={currentImageIndex}\n      />\n    </Container>\n  );\n});\n\nexport default MainPage; "],"names":["RepostCard","styled","Card","theme","background","marginBottom","borderRadius","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundBlendMode","backdropFilter","boxShadow","position","overflow","cursor","transition","content","top","left","right","bottom","zIndex","CardOverlay","Box","OriginalPostCard","padding","spacing","marginTop","border","UserInfo","display","alignItems","MarkdownContent","margin","wordBreak","maxWidth","color","palette","primary","main","textDecoration","paddingLeft","BlurredMenu","Menu","MusicTrackPreview","transform","RepostItem","repost","onDelete","onOpenLightbox","navigate","useNavigate","user","useContext","AuthContext","playTrack","currentTrack","isPlaying","togglePlay","MusicContext","menuAnchorEl","setMenuAnchorEl","useState","isDeleting","setIsDeleting","cardRef","useRef","postMusicTracks","setPostMusicTracks","originalPost","original_post","images","Array","isArray","push","image","React","useEffect","music","parsedTracks","JSON","parse","error","handleTrackPlay","handleMenuClose","avatar_url","jsx","Fade","in","timeout","children","jsxs","ref","onClick","e","target","closest","id","sx","opacity","CardContent","Avatar","src","alt","name","width","height","mr","flexGrow","Typography","variant","fontWeight","VerificationBadge","status","verification","size","ml","username","RepeatIcon","fontSize","formatTimeAgo","timestamp","Fragment","IconButton","stopPropagation","currentTarget","MoreVertIcon","anchorEl","open","Boolean","onClose","MenuItem","async","response","axios","delete","data","success","setTimeout","repost_text","mb","lineHeight","ReactMarkdown","transformLinkUri","length","mt","slice","map","track","index","event","flexShrink","bgcolor","justifyContent","cover_path","startsWith","title","style","objectFit","onError","MusicNoteIcon","filter","flex","minWidth","noWrap","letterSpacing","artist","PauseIcon","animation","PlayArrowIcon","textAlign","fontStyle","FavoriteIcon","likes_count","ChatBubbleOutlineIcon","comments_count","ContentLoader","loading","skeletonCount","showSkeleton","_interopRequireDefault","require$$0","Object","defineProperty","Timer","value","default","_createSvgIcon","_jsxRuntime","require$$2","d","OnlineUsersCard","paper","mode","Button","following","textTransform","borderColor","divider","text","contrastText","dark","breakpoints","down","marginLeft","fontFamily","action","hover","grey","common","white","shape","overflowX","PostInput","InputBase","PostActions","paddingTop","ContentContainer","flexDirection","gap","xs","md","up","LeftColumn","RightColumn","OnlineUsers","onlineUsers","setOnlineUsers","setLoading","useTheme","fetchOnlineUsers","get","users","interval","setInterval","clearInterval","p","minHeight","CircularProgress","flexWrap","pb","msOverflowStyle","scrollbarWidth","px","py","mx","handleUserClick","photo","boxSizing","img","UserRecommendation","setFollowing","is_following","currentUser","isChannelAccount","account_type","handleCardClick","imgElement","is_verified","component","post","followed_id","CreatePost","onPostCreated","setContent","mediaFiles","setMediaFiles","mediaType","setMediaType","mediaPreview","setMediaPreview","isSubmitting","setIsSubmitting","setError","fileInputRef","isDragging","setIsDragging","mediaNotification","setMediaNotification","message","musicSelectOpen","setMusicSelectOpen","selectedTracks","setSelectedTracks","snackbar","setSnackbar","severity","rateLimitDialog","setRateLimitDialog","timeRemaining","showSizeError","setShowSizeError","sizeErrorMessage","setSizeErrorMessage","dragCounter","processFiles","files","hasInvalidSize","from","forEach","file","isVideo","type","isImage","current","imageFiles","videoFiles","reader","FileReader","onloadend","result","readAsDataURL","prev","newPreviews","Paper","elevation","Alert","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Dialog","PaperProps","TimerIcon","DynamicIslandNotification","shortMessage","notificationType","animationType","onSubmit","preventDefault","trim","formData","FormData","append","trackData","duration","file_path","stringify","headers","rateLimit","rate_limit","errorMessage","reset","resetTime","Date","now","diffSeconds","Math","round","floor","handleSubmit","onDragEnter","onDragOver","onDragLeave","onDrop","dataTransfer","ImageOutlinedIcon","textShadow","undefined","placeholder","multiline","maxRows","onChange","onPaste","clipboardData","items","imageItems","item","indexOf","getAsFile","fullWidth","ImageList","maxHeight","cols","rowHeight","preview","ImageListItem","_","i","CloseIcon","controls","handleRemoveMedia","whiteSpace","textOverflow","trackId","accept","multiple","startIcon","click","disabled","endIcon","MusicSelectDialog","onSelectTracks","tracks","maxTracks","MainPage","memo","posts","setPosts","recommendations","setRecommendations","loadingRecommendations","setLoadingRecommendations","trendingBadges","setTrendingBadges","loadingTrendingBadges","setLoadingTrendingBadges","page","setPage","hasMore","setHasMore","feedType","setFeedType","requestId","setRequestId","isFirstRender","feedTypeChanged","loadingMoreRef","loaderRef","lightboxOpen","setLightboxOpen","currentImage","setCurrentImage","currentImageIndex","setCurrentImageIndex","lightboxImages","setLightboxImages","latestUpdate","setLatestUpdate","observer","IntersectionObserver","entries","entry","isIntersecting","loadMorePosts","root","rootMargin","threshold","observe","unobserve","params","per_page","sort","include_all","currentRequestId","has_next","initialLoad","apiError","loadFeedPosts","fetchRecommendations","badges","fetchTrendingBadges","currentPage","existingPostIds","Set","newPosts","has","handleOpenLightbox","allImages","update","UpdateService","getLatestUpdate","Container","sm","handlePostCreated","newPost","deletedPostId","cache","clearPostsCache","clearByUrlPrefix","prevPosts","forceRefresh","refreshFeed","PostSkeleton","is_repost","Post","showPostDetails","speed","foregroundColor","x","y","rx","ry","PersonAddIcon","secondary","channel","Divider","UpdateInfo","version","date","updates","fixes","hideHeader","SimpleImageViewer","isOpen","handleCloseLightbox","initialIndex"],"mappings":"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","x_google_ignoreList":[2]}