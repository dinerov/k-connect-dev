{"version":3,"file":"BlackjackPage.CbNrywfg.js","sources":["../../src/pages/MiniGames/components/PlayingCard.js","../../src/pages/MiniGames/BlackjackPage.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n\nconst suitColors = {\n  hearts: '#ff5252',    \n  diamonds: '#ff5252',  \n  clubs: '#424242',     \n  spades: '#424242'     \n};\n\n\nconst suitSymbols = {\n  hearts: '♥',\n  diamonds: '♦',\n  clubs: '♣',\n  spades: '♠'\n};\n\n\nconst CardContainer = styled(Box)(({ theme, suits, hidden }) => ({\n  width: '120px',\n  height: '180px',\n  borderRadius: '10px',\n  background: hidden ? '#7986cb' : '#fff',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n  position: 'relative',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  padding: '10px',\n  border: `1px solid ${theme.palette.divider}`,\n  transition: 'transform 0.2s ease',\n  cursor: 'default',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n    boxShadow: '0 6px 12px rgba(0, 0, 0, 0.3)'\n  }\n}));\n\n\nconst SuitSymbol = styled(Typography)(({ color }) => ({\n  fontSize: '36px',\n  color: color,\n  lineHeight: 1\n}));\n\n\nconst Rank = styled(Typography)(({ color }) => ({\n  fontSize: '24px',\n  fontWeight: 'bold',\n  color: color,\n  lineHeight: 1\n}));\n\n\nconst CardBack = styled(Box)({\n  width: '100%',\n  height: '100%',\n  background: 'repeating-linear-gradient(45deg, #5c6bc0, #5c6bc0 10px, #3f51b5 10px, #3f51b5 20px)',\n  borderRadius: '8px',\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst PlayingCard = ({ rank, suit, hidden = false }) => {\n  \n  if (hidden) {\n    return (\n      <CardContainer hidden={true}>\n        <CardBack>\n          <Typography variant=\"h4\" color=\"white\" sx={{ textShadow: '1px 1px 2px rgba(0,0,0,0.6)' }}>\n            21\n          </Typography>\n        </CardBack>\n      </CardContainer>\n    );\n  }\n\n  \n  const color = suitColors[suit] || '#424242';\n  \n  const suitSymbol = suitSymbols[suit] || '?';\n\n  return (\n    <CardContainer>\n      <Box sx={{ alignSelf: 'flex-start' }}>\n        <Rank color={color}>{rank}</Rank>\n        <SuitSymbol color={color}>{suitSymbol}</SuitSymbol>\n      </Box>\n      \n      <Box sx={{ alignSelf: 'center', transform: 'scale(2)' }}>\n        <SuitSymbol color={color}>{suitSymbol}</SuitSymbol>\n      </Box>\n      \n      <Box sx={{ alignSelf: 'flex-end', transform: 'rotate(180deg)' }}>\n        <Rank color={color}>{rank}</Rank>\n        <SuitSymbol color={color}>{suitSymbol}</SuitSymbol>\n      </Box>\n    </CardContainer>\n  );\n};\n\nexport default PlayingCard; ","import React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Button, Typography, Paper, Grid, TextField, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions, Alert, Snackbar } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport PlayingCard from './components/PlayingCard';\nimport SEO from '../../components/SEO';\n\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(3),\n  marginBottom: theme.spacing(2),\n  background: theme.palette.mode === 'dark' ? '#1a1a1a' : '#121212',\n  border: `1px solid ${theme.palette.mode === 'dark' ? '#333333' : '#2a2a2a'}`,\n  borderRadius: theme.shape.borderRadius * 2,\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.5)',\n  color: '#ffffff'\n}));\n\nconst GameButton = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(1),\n  padding: theme.spacing(1.5, 4),\n  borderRadius: theme.shape.borderRadius * 3,\n  fontWeight: 'bold',\n  boxShadow: '0 4px 10px rgba(0, 0, 0, 0.3)',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 6px 15px rgba(0, 0, 0, 0.4)',\n  }\n}));\n\nconst BlackjackPage = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  \n\n  const [balance, setBalance] = useState(0);\n  const [betAmount, setBetAmount] = useState(10);\n  const [gameState, setGameState] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showRules, setShowRules] = useState(false);\n  const [error, setError] = useState(null);\n  \n\n  const [showAnimation, setShowAnimation] = useState(false);\n  const [animationType, setAnimationType] = useState('');\n  \n\n  const fetchBalance = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/user/points');\n      if (response?.data?.points !== undefined) {\n        setBalance(parseInt(response.data.points));\n      }\n    } catch (err) {\n      console.error('Ошибка при получении баланса:', err);\n      setError('Не удалось загрузить баланс. Пожалуйста, попробуйте позже.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  \n\n  const startNewGame = async () => {\n    if (betAmount < 10 || betAmount > 1000000) {\n      setError('Ставка должна быть от 10 до 1000000');\n      return;\n    }\n    \n    if (betAmount > balance) {\n      setError('Недостаточно средств для такой ставки');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      const response = await axios.post('/api/minigames/blackjack/new-game', {\n        bet: betAmount\n      });\n      \n      if (response.data.success) {\n        setGameState(response.data);\n        setGameStarted(true);\n        setBalance(response.data.balance);\n        \n\n        if (response.data.game_over) {\n          showResult(response.data.result, response.data.message);\n        }\n      } else {\n        setError(response.data.error || 'Ошибка при запуске игры');\n      }\n    } catch (error) {\n      console.error('Ошибка при запуске игры:', error);\n      setError('Не удалось запустить игру');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n  const hitCard = async () => {\n    if (!gameState || gameState.game_over) return;\n    \n    setLoading(true);\n    \n    try {\n      const response = await axios.post('/api/minigames/blackjack/hit', {\n        game_id: gameState.game_id,\n        player_hand: gameState.player_hand,\n        dealer_hand: gameState.dealer_hand,\n        deck: gameState.deck,\n        bet: gameState.bet\n      });\n      \n      if (response.data.success) {\n        setGameState(response.data);\n        setBalance(response.data.balance);\n        \n        if (response.data.game_over) {\n          showResult(response.data.result, response.data.message);\n        }\n      } else {\n        setError(response.data.error || 'Ошибка при взятии карты');\n      }\n    } catch (error) {\n      console.error('Ошибка при взятии карты:', error);\n      setError('Не удалось взять карту');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n  const stand = async () => {\n    if (!gameState || gameState.game_over) return;\n    \n    setLoading(true);\n    \n    try {\n      const response = await axios.post('/api/minigames/blackjack/stand', {\n        game_id: gameState.game_id,\n        player_hand: gameState.player_hand,\n        dealer_hand: gameState.dealer_hand,\n        deck: gameState.deck,\n        bet: gameState.bet\n      });\n      \n      if (response.data.success) {\n        setGameState(response.data);\n        setBalance(response.data.balance);\n        \n        showResult(response.data.result, response.data.message);\n      } else {\n        setError(response.data.error || 'Ошибка при остановке');\n      }\n    } catch (error) {\n      console.error('Ошибка при остановке:', error);\n      setError('Не удалось завершить игру');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n  const showResult = (result, message) => {\n    if (result === 'win') {\n      setAnimationType('win');\n    } else if (result === 'lose') {\n      setAnimationType('lose');\n    } else {\n      setAnimationType('tie');\n    }\n    \n    setShowAnimation(true);\n    setTimeout(() => {\n      setShowAnimation(false);\n    }, 2000);\n    \n    setError(message);\n  };\n  \n\n  const playAgain = () => {\n    setGameState(null);\n    setGameStarted(false);\n  };\n  \n\n  useEffect(() => {\n    fetchBalance();\n  }, [fetchBalance]);\n  \n\n  const renderCard = (card, hidden = false) => {\n    if (!card) return <PlayingCard hidden={true} />;\n    \n    if (hidden) {\n      return <PlayingCard hidden={true} />;\n    }\n    \n    const [rank, suit] = card;\n    return <PlayingCard rank={rank} suit={suit} />;\n  };\n  \n\n  const renderRules = () => (\n    <Dialog open={showRules} onClose={() => setShowRules(false)} maxWidth=\"md\">\n      <DialogTitle>Правила игры \"21\"</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"h6\" gutterBottom>Цель игры</Typography>\n        <Typography paragraph>\n          Набрать 21 очко или больше очков, чем у дилера, но не перебрать 21.\n        </Typography>\n        \n        <Typography variant=\"h6\" gutterBottom>Стоимость карт</Typography>\n        <Typography paragraph>\n          - Карты от 2 до 10 стоят по своему номиналу<br />\n          - Валеты (J), Дамы (Q) и Короли (K) стоят по 10 очков<br />\n          - Тузы (A) могут стоить либо 1, либо 11 очков в зависимости от того, что выгоднее игроку\n        </Typography>\n        \n        <Typography variant=\"h6\" gutterBottom>Ход игры</Typography>\n        <Typography paragraph>\n          1. Игрок делает ставку<br />\n          2. Игрок и дилер получают по две карты. Одна карта дилера скрыта.<br />\n          3. Игрок решает взять дополнительные карты (Hit) или остановиться (Stand)<br />\n          4. Если игрок набирает больше 21 очка, он автоматически проигрывает<br />\n          5. Когда игрок останавливается, дилер открывает свою скрытую карту и берет карты, пока не наберет минимум 17 очков<br />\n          6. Сравниваются очки игрока и дилера\n        </Typography>\n        \n        <Typography variant=\"h6\" gutterBottom>Выигрыши</Typography>\n        <Typography paragraph>\n          - Блэкджек (21 очко с первых двух карт): выплата 3 к 2<br />\n          - Обычная победа: выплата 2 к 1<br />\n          - Ничья: возврат ставки\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setShowRules(false)} color=\"primary\">\n          Понятно\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n  \n\n  const renderAnimation = () => {\n    if (!showAnimation) return null;\n    \n    let text = '';\n    let color = '';\n    \n    if (animationType === 'win') {\n      text = 'ПОБЕДА!';\n      color = theme.palette.success.main;\n    } else if (animationType === 'lose') {\n      text = 'ПРОИГРЫШ';\n      color = theme.palette.error.main;\n    } else {\n      text = 'НИЧЬЯ';\n      color = theme.palette.warning.main;\n    }\n    \n    return (\n      <Box\n        sx={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          zIndex: 1000,\n          animation: 'fadeIn 0.5s'\n        }}\n      >\n        <Typography\n          variant=\"h1\"\n          sx={{\n            color,\n            fontWeight: 'bold',\n            textShadow: '0 0 10px rgba(255, 255, 255, 0.5)',\n            animation: 'pulse 0.5s infinite alternate'\n          }}\n        >\n          {text}\n        </Typography>\n      </Box>\n    );\n  };\n  \n  return (\n    <Box sx={{ \n      padding: theme.spacing(2),\n      position: 'relative',\n      minHeight: 'calc(100vh - 64px)',\n      background: 'linear-gradient(to bottom, #121212, #000000)',\n      color: '#ffffff',\n      marginBottom: '100px'\n    }}>\n      <SEO title=\"21 | Мини-игры | К-Коннект\" description=\"Игра 21 (блэкджек) - наберите 21 очко или больше чем у дилера, не перебрав!\" />\n      \n      {renderAnimation()}\n      {renderRules()}\n      \n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Button \n          variant=\"outlined\" \n          onClick={() => navigate('/minigames')}\n          size=\"large\"\n        >\n          Назад\n        </Button>\n        \n        <Typography variant=\"h4\" color=\"primary\" fontWeight=\"bold\">\n          21\n        </Typography>\n        \n        <Button \n          variant=\"outlined\" \n          color=\"info\"\n          onClick={() => setShowRules(true)}\n          size=\"large\"\n        >\n          Правила\n        </Button>\n      </Box>\n      \n      <StyledPaper elevation={3}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\">Баланс: {balance} баллов</Typography>\n          </Grid>\n          <Grid item xs={12} md={6} sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Typography variant=\"h6\">\n              {gameState && gameState.result === 'win' && `Выигрыш: ${gameState.winnings} баллов`}\n            </Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      \n      {!gameStarted ? (\n        <StyledPaper elevation={3} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', py: 4 }}>\n          <Typography variant=\"h5\" gutterBottom>Сделайте ставку и начните игру</Typography>\n          \n          <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n            <TextField\n              label=\"Ставка\"\n              type=\"number\"\n              value={betAmount}\n              onChange={(e) => setBetAmount(parseInt(e.target.value) || 0)}\n              inputProps={{ min: 10, max: 1000000 }}\n              sx={{ \n                width: '150px', \n                mr: 2,\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                  color: '#ffffff',\n                  '& fieldset': {\n                    borderColor: '#333333',\n                  },\n                  '&:hover fieldset': {\n                    borderColor: '#505050',\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: theme.palette.primary.main,\n                  },\n                },\n                '& .MuiInputLabel-root': {\n                  color: '#aaaaaa',\n                },\n                '& .MuiInputLabel-root.Mui-focused': {\n                  color: theme.palette.primary.main,\n                },\n              }}\n            />\n            \n            <GameButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={startNewGame}\n              disabled={loading || balance < betAmount}\n              size=\"large\"\n            >\n              {loading ? <CircularProgress size={24} /> : 'Начать игру'}\n            </GameButton>\n          </Box>\n          \n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Минимальная ставка: 10 | Максимальная ставка: 1000000\n          </Typography>\n        </StyledPaper>\n      ) : (\n        <Box sx={{ mt: 2 }}>\n          {gameState && (\n            <>\n              <StyledPaper elevation={3} sx={{ mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>Дилер: {gameState.game_over ? gameState.dealer_score : '?'}</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, my: 2 }}>\n                  {gameState.dealer_hand.map((card, index) => (\n                    <Box key={`dealer-${index}`} sx={{ transform: 'scale(0.9)' }}>\n                      {renderCard(card, index === 1 && !gameState.game_over)}\n                    </Box>\n                  ))}\n                </Box>\n              </StyledPaper>\n              \n              <StyledPaper elevation={3} sx={{ mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>Игрок: {gameState.player_score}</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, my: 2 }}>\n                  {gameState.player_hand.map((card, index) => (\n                    <Box key={`player-${index}`} sx={{ transform: 'scale(0.9)' }}>\n                      {renderCard(card)}\n                    </Box>\n                  ))}\n                </Box>\n              </StyledPaper>\n              \n              <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n                {gameState.game_over ? (\n                  <GameButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={playAgain}\n                    size=\"large\"\n                  >\n                    Играть еще\n                  </GameButton>\n                ) : (\n                  <>\n                    <GameButton\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={hitCard}\n                      disabled={loading}\n                      size=\"large\"\n                    >\n                      Взять карту\n                    </GameButton>\n                    \n                    <GameButton\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={stand}\n                      disabled={loading}\n                      size=\"large\"\n                    >\n                      Хватит\n                    </GameButton>\n                  </>\n                )}\n              </Box>\n              \n              {gameState.message && !gameState.game_over && (\n                <Box sx={{ mt: 2, textAlign: 'center' }}>\n                  <Alert severity=\"info\">{gameState.message}</Alert>\n                </Box>\n              )}\n            </>\n          )}\n        </Box>\n      )}\n      \n      <Snackbar \n        open={!!error} \n        autoHideDuration={5000} \n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default BlackjackPage; "],"names":["suitColors","hearts","diamonds","clubs","spades","suitSymbols","CardContainer","styled","Box","theme","suits","hidden","width","height","borderRadius","background","boxShadow","position","display","flexDirection","justifyContent","padding","border","palette","divider","transition","cursor","transform","SuitSymbol","Typography","color","fontSize","lineHeight","Rank","fontWeight","CardBack","top","left","alignItems","PlayingCard","rank","suit","jsx","children","variant","sx","textShadow","suitSymbol","jsxs","alignSelf","StyledPaper","Paper","spacing","marginBottom","mode","shape","GameButton","Button","margin","BlackjackPage","useTheme","navigate","useNavigate","balance","setBalance","useState","betAmount","setBetAmount","gameState","setGameState","loading","setLoading","gameStarted","setGameStarted","showRules","setShowRules","error","setError","showAnimation","setShowAnimation","animationType","setAnimationType","fetchBalance","useCallback","async","response","axios","get","undefined","data","points","parseInt","err","showResult","result","message","setTimeout","useEffect","renderCard","card","minHeight","SEO","title","description","renderAnimation","text","success","main","warning","right","bottom","backgroundColor","zIndex","animation","Dialog","open","onClose","maxWidth","DialogTitle","DialogContent","gutterBottom","paragraph","DialogActions","onClick","mb","size","elevation","Grid","container","item","xs","md","winnings","mt","Fragment","game_over","dealer_score","flexWrap","gap","my","dealer_hand","map","index","player_score","player_hand","playAgain","post","game_id","deck","bet","disabled","textAlign","Alert","severity","py","TextField","label","type","value","onChange","e","target","inputProps","min","max","mr","borderColor","primary","CircularProgress","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal"],"mappings":"kUAKA,MAAMA,EAAa,CACjBC,OAAQ,UACRC,SAAU,UACVC,MAAO,UACPC,OAAQ,WAIJC,EAAc,CAClBJ,OAAQ,IACRC,SAAU,IACVC,MAAO,IACPC,OAAQ,KAIJE,EAAgBC,EAAOC,EAAPD,CAAY,EAAGE,QAAOC,QAAOC,aAAc,CAC/DC,MAAO,QACPC,OAAQ,QACRC,aAAc,OACdC,WAAYJ,EAAS,UAAY,OACjCK,UAAW,+BACXC,SAAU,WACVC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,QAAS,OACTC,OAAQ,aAAab,EAAMc,QAAQC,UACnCC,WAAY,sBACZC,OAAQ,UACR,UAAW,CACTC,UAAW,mBACXX,UAAW,oCAKTY,EAAarB,EAAOsB,EAAPtB,CAAmB,EAAGuB,YAAa,CACpDC,SAAU,OACVD,QACAE,WAAY,KAIRC,EAAO1B,EAAOsB,EAAPtB,CAAmB,EAAGuB,YAAa,CAC9CC,SAAU,OACVG,WAAY,OACZJ,QACAE,WAAY,KAIRG,EAAW5B,EAAOC,EAAPD,CAAY,CAC3BK,MAAO,OACPC,OAAQ,OACRE,WAAY,sFACZD,aAAc,MACdG,SAAU,WACVmB,IAAK,EACLC,KAAM,EACNnB,QAAS,OACToB,WAAY,SACZlB,eAAgB,WAGZmB,EAAcA,EAAGC,OAAMC,OAAM9B,UAAS,MAE1C,GAAIA,EACF,OACG+B,EAAAA,IAAApC,EAAA,CAAcK,QAAQ,EACrBgC,SAACD,EAAAA,IAAAP,EAAA,CACCQ,SAACD,EAAAA,IAAAb,EAAA,CAAWe,QAAQ,KAAKd,MAAM,QAAQe,GAAI,CAAEC,WAAY,+BAAgCH,SAEzF,WAOFb,MAAAA,EAAQ9B,EAAWyC,IAAS,UAE5BM,EAAa1C,EAAYoC,IAAS,IAExC,cACGnC,EACC,CAAAqC,SAAA,CAAAK,OAACxC,GAAIqC,GAAI,CAAEI,UAAW,cACpBN,SAAA,CAACD,EAAAA,IAAAT,EAAA,CAAKH,QAAeU,SAAKA,IAC1BE,EAAAA,IAACd,EAAW,CAAAE,QAAeiB,SAAWA,OAGxCL,MAAClC,GAAIqC,GAAI,CAAEI,UAAW,SAAUtB,UAAW,YACzCgB,SAAAD,EAAAA,IAACd,EAAW,CAAAE,QAAeiB,eAG7BC,OAACxC,GAAIqC,GAAI,CAAEI,UAAW,WAAYtB,UAAW,kBAC3CgB,SAAA,CAACD,EAAAA,IAAAT,EAAA,CAAKH,QAAeU,SAAKA,IAC1BE,EAAAA,IAACd,EAAW,CAAAE,QAAeiB,SAAWA,WC5FxCG,EAAc3C,EAAO4C,EAAP5C,CAAc,EAAGE,YAAa,CAChDY,QAASZ,EAAM2C,QAAQ,GACvBC,aAAc5C,EAAM2C,QAAQ,GAC5BrC,WAAmC,SAAvBN,EAAMc,QAAQ+B,KAAkB,UAAY,UACxDhC,OAAQ,cAAoC,SAAvBb,EAAMc,QAAQ+B,KAAkB,UAAY,WACjExC,aAAyC,EAA3BL,EAAM8C,MAAMzC,aAC1BE,UAAW,gCACXc,MAAO,aAGH0B,EAAajD,EAAOkD,EAAPlD,CAAe,EAAGE,YAAa,CAChDiD,OAAQjD,EAAM2C,QAAQ,GACtB/B,QAASZ,EAAM2C,QAAQ,IAAK,GAC5BtC,aAAyC,EAA3BL,EAAM8C,MAAMzC,aAC1BoB,WAAY,OACZlB,UAAW,gCACXS,WAAY,gBACZ,UAAW,CACTE,UAAW,mBACXX,UAAW,oCAIT2C,EAAgBA,KACpB,MAAMlD,EAAQmD,IACRC,EAAWC,KAGVC,EAASC,GAAcC,EAAAA,SAAS,IAChCC,EAAWC,GAAgBF,EAAAA,SAAS,KACpCG,EAAWC,GAAgBJ,EAAAA,SAAS,OACpCK,EAASC,GAAcN,EAAAA,UAAS,IAChCO,EAAaC,GAAkBR,EAAAA,UAAS,IACxCS,EAAWC,GAAgBV,EAAAA,UAAS,IACpCW,EAAOC,GAAYZ,EAAAA,SAAS,OAG5Ba,EAAeC,GAAoBd,EAAAA,UAAS,IAC5Ce,EAAeC,GAAoBhB,EAAAA,SAAS,IAG7CiB,EAAeC,EAAAA,YAAYC,UAC3B,IACFb,GAAW,GACX,MAAMc,QAAiBC,EAAMC,IAAI,yBACFC,IAA3BH,GAAUI,MAAMC,QAClB1B,EAAW2B,SAASN,EAASI,KAAKC,eAE7BE,GAEPf,EAAS,6DAA4D,CAC7D,QACRN,GAAW,EAAK,GAEjB,IA0GGsB,EAAaA,CAACC,EAAQC,KAExBd,EADa,QAAXa,EACe,MACG,SAAXA,EACQ,OAEA,OAGnBf,GAAiB,GACjBiB,WAAW,KACTjB,GAAiB,IAChB,KAEHF,EAASkB,IAUXE,EAAAA,UAAU,KACKf,KACZ,CAACA,IAGJ,MAAMgB,EAAaA,CAACC,EAAMxF,GAAS,KACjC,IAAKwF,EAAM,OAAQzD,EAAAA,IAAAH,EAAA,CAAY5B,QAAQ,IAEvC,GAAIA,EACK,OAAA+B,EAAAA,IAACH,EAAY,CAAA5B,QAAQ,IAGxB,MAAC6B,EAAMC,GAAQ0D,EACd,OAAAzD,EAAAA,IAACH,EAAY,CAAAC,OAAYC,UA+FhC,OAAAO,EAAAA,KAACxC,GAAIqC,GAAI,CACPxB,QAASZ,EAAM2C,QAAQ,GACvBnC,SAAU,WACVmF,UAAW,qBACXrF,WAAY,+CACZe,MAAO,UACPuB,aAAc,SAEdV,SAAA,CAAAD,EAAAA,IAAC2D,EAAI,CAAAC,MAAM,6BAA6BC,YAAY,gFAzDhCC,MAClB,IAAC1B,EAAsB,OAAA,KAE3B,IAAI2B,EAAO,GACP3E,EAAQ,GAcV,MAZoB,QAAlBkD,GACKyB,EAAA,UACChG,EAAAA,EAAMc,QAAQmF,QAAQC,MACH,SAAlB3B,GACFyB,EAAA,WACChG,EAAAA,EAAMc,QAAQqD,MAAM+B,OAErBF,EAAA,QACChG,EAAAA,EAAMc,QAAQqF,QAAQD,MAI9BjE,EAAAA,IAAClC,GACCqC,GAAI,CACF5B,SAAU,WACVmB,IAAK,EACLC,KAAM,EACNwE,MAAO,EACPC,OAAQ,EACR5F,QAAS,OACToB,WAAY,SACZlB,eAAgB,SAChB2F,gBAAiB,qBACjBC,OAAQ,IACRC,UAAW,eAGbtE,SAAAD,EAAAA,IAACb,EACC,CAAAe,QAAQ,KACRC,GAAI,CACFf,QACAI,WAAY,OACZY,WAAY,oCACZmE,UAAW,iCAGZR,gBAiBJD,GApGFxD,EAAAA,KAAAkE,EAAA,CAAOC,KAAMzC,EAAW0C,QAAS,IAAMzC,GAAa,GAAQ0C,SAAS,KACpE1E,SAAA,CAAAD,EAAAA,IAAC4E,GAAY3E,SAAiB,6BAC7B4E,EACC,CAAA5E,SAAA,CAAAD,MAACb,EAAW,CAAAe,QAAQ,KAAK4E,cAAY,EAAC7E,SAAS,cAC9CD,EAAAA,IAAAb,EAAA,CAAW4F,WAAS,EAAA9E,SAErB,8EAECd,EAAW,CAAAe,QAAQ,KAAK4E,cAAY,EAAC7E,SAAc,mBACpDK,EAAAA,KAACnB,EAAW,CAAA4F,WAAS,EAAA9E,SAAA,CAAA,oDACyB,KAAE,IAAA,8DACQ,KAAE,IAAA,oGAIzDd,EAAW,CAAAe,QAAQ,KAAK4E,cAAY,EAAC7E,SAAQ,aAC9CK,EAAAA,KAACnB,EAAW,CAAA4F,WAAS,EAAA9E,SAAA,CAAA,+BACI,KAAE,IAAA,0EACyC,KAAE,IAAA,kFACM,KAAE,IAAA,4EACR,KAAE,IAAA,2HAC6C,KAAE,IAAA,gDAItHd,EAAW,CAAAe,QAAQ,KAAK4E,cAAY,EAAC7E,SAAQ,aAC9CK,EAAAA,KAACnB,EAAW,CAAA4F,WAAS,EAAA9E,SAAA,CAAA,+DACoC,KAAE,IAAA,wCACzB,KAAE,IAAA,gCAIrCD,EAAAA,IAAAgF,EAAA,CACC/E,SAACD,EAAAA,IAAAe,EAAA,CAAOkE,QAAS,IAAMhD,GAAa,GAAQ7C,MAAM,UAASa,SAAA,iBAsE7DK,OAACxC,GAAIqC,GAAI,CAAE3B,QAAS,OAAQE,eAAgB,gBAAiBkB,WAAY,SAAUsF,GAAI,GACrFjF,SAAA,CAACD,EAAAA,IAAAe,EAAA,CACCb,QAAQ,WACR+E,QAAS,IAAM9D,EAAS,cACxBgE,KAAK,QAAOlF,SAGd,UAEAD,EAAAA,IAACb,GAAWe,QAAQ,KAAKd,MAAM,UAAUI,WAAW,OAAMS,SAE1D,OAECD,EAAAA,IAAAe,EAAA,CACCb,QAAQ,WACRd,MAAM,OACN6F,QAAS,IAAMhD,GAAa,GAC5BkD,KAAK,QAAOlF,SAGd,eAGFD,EAAAA,IAACQ,GAAY4E,UAAW,EACtBnF,gBAACoF,EAAK,CAAAC,WAAS,EAAC5E,QAAS,EACvBT,SAAA,CAACD,EAAAA,IAAAqF,EAAA,CAAKE,MAAI,EAACC,GAAI,GAAIC,GAAI,EACrBxF,SAAAK,EAAAA,KAACnB,EAAW,CAAAe,QAAQ,KAAKD,SAAA,CAAA,WAASoB,EAAQ,eAE5CrB,MAACqF,GAAKE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGtF,GAAI,CAAE3B,QAAS,OAAQE,eAAgB,YAC/DuB,SAAAD,EAAAA,IAACb,EAAW,CAAAe,QAAQ,KACjBwB,SAAAA,GAAkC,QAArBA,EAAU0B,QAAoB,YAAY1B,EAAUgE,2BAMxE5D,EAoDC9B,EAAAA,IAAAlC,EAAA,CAAIqC,GAAI,CAAEwF,GAAI,GACZjE,YAEGpB,EAAAA,KAAAsF,EAAAA,SAAA,CAAA3F,SAAA,CAACK,EAAAA,KAAAE,EAAA,CAAY4E,UAAW,EAAGjF,GAAI,CAAE+E,GAAI,GACnCjF,SAAA,CAAAK,EAAAA,KAACnB,EAAW,CAAAe,QAAQ,KAAK4E,cAAY,EAAC7E,SAAA,CAAA,UAAQyB,EAAUmE,UAAYnE,EAAUoE,aAAe,OAC7F9F,MAAClC,GAAIqC,GAAI,CAAE3B,QAAS,OAAQuH,SAAU,OAAQC,IAAK,EAAGC,GAAI,GACvDvE,WAAUwE,YAAYC,IAAI,CAAC1C,EAAM2C,IAC/BpG,EAAAA,IAAAlC,EAAA,CAA4BqC,GAAI,CAAElB,UAAW,cAC3CuE,SAAAA,EAAWC,EAAgB,IAAV2C,IAAgB1E,EAAUmE,YADpC,UAAUO,WAOzB9F,EAAAA,KAAAE,EAAA,CAAY4E,UAAW,EAAGjF,GAAI,CAAE+E,GAAI,GACnCjF,SAAA,CAAAK,EAAAA,KAACnB,EAAW,CAAAe,QAAQ,KAAK4E,cAAY,EAAC7E,SAAA,CAAA,UAAQyB,EAAU2E,gBACxDrG,MAAClC,GAAIqC,GAAI,CAAE3B,QAAS,OAAQuH,SAAU,OAAQC,IAAK,EAAGC,GAAI,GACvDvE,WAAU4E,YAAYH,IAAI,CAAC1C,EAAM2C,IAC/BpG,EAAAA,IAAAlC,EAAA,CAA4BqC,GAAI,CAAElB,UAAW,cAC3CuE,WAAWC,IADJ,UAAU2C,WAO1BpG,MAAClC,GAAIqC,GAAI,CAAE3B,QAAS,OAAQE,eAAgB,SAAUiH,GAAI,GACvDjE,SAAAA,EAAUmE,UACT7F,EAAAA,IAACc,GACCZ,QAAQ,YACRd,MAAM,UACN6F,QArPAsB,KAChB5E,EAAa,MACbI,GAAe,IAoPCoD,KAAK,QAAOlF,SAAA,eAMZK,EAAAA,KAAAsF,WAAA,CAAA3F,SAAA,CAACD,EAAAA,IAAAc,EAAA,CACCZ,QAAQ,YACRd,MAAM,UACN6F,QAjVJvC,UACV,GAAChB,IAAaA,EAAUmE,UAAxB,CAEJhE,GAAW,GAEP,IACF,MAAMc,QAAiBC,EAAM4D,KAAK,+BAAgC,CAChEC,QAAS/E,EAAU+E,QACnBH,YAAa5E,EAAU4E,YACvBJ,YAAaxE,EAAUwE,YACvBQ,KAAMhF,EAAUgF,KAChBC,IAAKjF,EAAUiF,MAGbhE,EAASI,KAAKiB,SAChBrC,EAAagB,EAASI,MACXJ,EAAAA,EAASI,KAAK1B,SAErBsB,EAASI,KAAK8C,WAChB1C,EAAWR,EAASI,KAAKK,OAAQT,EAASI,KAAKM,UAGxCV,EAAAA,EAASI,KAAKb,OAAS,iCAE3BA,GAEPC,EAAS,yBAAwB,CACzB,QACRN,GAAW,EAAK,CA3BqB,GAiVrB+E,SAAUhF,EACVuD,KAAK,QAAOlF,SAGd,gBAECD,EAAAA,IAAAc,EAAA,CACCZ,QAAQ,YACRd,MAAM,YACN6F,QA1TNvC,UACR,GAAChB,IAAaA,EAAUmE,UAAxB,CAEJhE,GAAW,GAEP,IACF,MAAMc,QAAiBC,EAAM4D,KAAK,iCAAkC,CAClEC,QAAS/E,EAAU+E,QACnBH,YAAa5E,EAAU4E,YACvBJ,YAAaxE,EAAUwE,YACvBQ,KAAMhF,EAAUgF,KAChBC,IAAKjF,EAAUiF,MAGbhE,EAASI,KAAKiB,SAChBrC,EAAagB,EAASI,MACXJ,EAAAA,EAASI,KAAK1B,SAEzB8B,EAAWR,EAASI,KAAKK,OAAQT,EAASI,KAAKM,UAEtCV,EAAAA,EAASI,KAAKb,OAAS,8BAE3BA,GAEPC,EAAS,4BAA2B,CAC5B,QACRN,GAAW,EAAK,CAzBqB,GA0TrB+E,SAAUhF,EACVuD,KAAK,QAAOlF,SAGd,gBAKLyB,EAAU2B,UAAY3B,EAAUmE,WAC/B7F,MAAClC,GAAIqC,GAAI,CAAEwF,GAAI,EAAGkB,UAAW,UAC3B5G,SAACD,MAAA8G,EAAA,CAAMC,SAAS,OAAQrF,SAAAA,EAAU2B,iBAjH5C/C,EAAAA,KAACE,EAAY,CAAA4E,UAAW,EAAGjF,GAAI,CAAE3B,QAAS,OAAQC,cAAe,SAAUmB,WAAY,SAAUoH,GAAI,GACnG/G,SAAA,CAAAD,MAACb,EAAW,CAAAe,QAAQ,KAAK4E,cAAY,EAAC7E,SAA8B,mCAEpEK,OAACxC,GAAIqC,GAAI,CAAE3B,QAAS,OAAQoB,WAAY,SAAUqG,GAAI,GACpDhG,SAAA,CAAAD,MAACiH,GACCC,MAAM,SACNC,KAAK,SACLC,MAAO5F,EACP6F,SAAiB5F,GAAAA,EAAawB,SAASqE,EAAEC,OAAOH,QAAU,GAC1DI,WAAY,CAAEC,IAAK,GAAIC,IAAK,KAC5BvH,GAAI,CACFjC,MAAO,QACPyJ,GAAI,EACJ,2BAA4B,CAC1BtD,gBAAiB,qBACjBjF,MAAO,UACP,aAAc,CACZwI,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa7J,EAAMc,QAAQgJ,QAAQ5D,OAGvC,wBAAyB,CACvB7E,MAAO,WAET,oCAAqC,CACnCA,MAAOrB,EAAMc,QAAQgJ,QAAQ5D,SAKnCjE,EAAAA,IAACc,GACCZ,QAAQ,YACRd,MAAM,UACN6F,QAnUSvC,UACflB,GAAAA,EAAY,IAAMA,EAAY,IAChCW,EAAS,4CAIX,GAAIX,EAAYH,EACdc,EAAS,6CADX,CAKAN,GAAW,GAEP,IACF,MAAMc,QAAiBC,EAAM4D,KAAK,oCAAqC,CACrEG,IAAKnF,IAGHmB,EAASI,KAAKiB,SAChBrC,EAAagB,EAASI,MACtBhB,GAAe,GACJY,EAAAA,EAASI,KAAK1B,SAGrBsB,EAASI,KAAK8C,WAChB1C,EAAWR,EAASI,KAAKK,OAAQT,EAASI,KAAKM,UAGxCV,EAAAA,EAASI,KAAKb,OAAS,iCAE3BA,GAEPC,EAAS,4BAA2B,CAC5B,QACRN,GAAW,EAAK,CA1BhB,GA4TQ+E,SAAUhF,GAAWP,EAAUG,EAC/B2D,KAAK,QAEJvD,SAAUA,EAAA5B,EAAAA,IAAC8H,GAAiB3C,KAAM,KAAS,yBAI/ChG,EAAW,CAAAe,QAAQ,UAAUd,MAAM,iBAAgBa,SAEpD,6DAyEHD,EAAAA,IAAA+H,EAAA,CACCtD,OAAQvC,EACR8F,iBAAkB,IAClBtD,QAAS,IAAMvC,EAAS,MACxB8F,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAEhDlI,SAACD,EAAAA,IAAA8G,EAAA,CAAMpC,QAAS,IAAMvC,EAAS,MAAO4E,SAAS,QAAQ5G,GAAI,CAAEjC,MAAO,QACjEgE"}