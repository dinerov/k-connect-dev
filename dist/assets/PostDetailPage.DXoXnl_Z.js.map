{"version":3,"file":"PostDetailPage.DXoXnl_Z.js","sources":["../../node_modules/@mui/icons-material/Image.js","../../src/utils/authUtils.js","../../src/pages/Main/PostDetailPage.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2M8.5 13.5l2.5 3.01L14.5 12l4.5 6H5z\"\n}), 'Image');","import { useNavigate } from 'react-router-dom';\n\nexport const requireAuth = (user, isAuthenticated, navigate) => {\n  if (!isAuthenticated || !user) {\n    const currentPath = window.location.pathname;\n    localStorage.setItem('redirect_after_login', currentPath);\n    navigate('/login', { state: { from: currentPath } });\n    return false;\n  }\n  return true;\n};\n\nexport const useAuthCheck = (user, isAuthenticated) => {\n  const navigate = useNavigate();\n  return () => requireAuth(user, isAuthenticated, navigate);\n};\n\nexport default {\n  requireAuth,\n  useAuthCheck\n}; ","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Avatar,\n  TextField,\n  Button,\n  Divider,\n  Paper,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  styled,\n  IconButton,\n  Link as MuiLink,\n  Snackbar,\n  Alert,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Badge,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  AppBar,\n  Toolbar,\n  useMediaQuery,\n  useTheme\n} from '@mui/material';\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { AuthContext } from '../../context/AuthContext';\nimport PostService from '../../services/PostService';\nimport ReactMarkdown from 'react-markdown';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ImageIcon from '@mui/icons-material/Image';\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axios from 'axios';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport ReplyIcon from '@mui/icons-material/Reply';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport ShareIcon from '@mui/icons-material/Share';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport ImageGrid from '../../components/Post/ImageGrid';\nimport SimpleImageViewer from '../../components/SimpleImageViewer';\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\nimport { Post } from '../../components/Post';\nimport { formatTimeAgo, getRussianWordForm, debugDate, parseDate } from '../../utils/dateUtils';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport SEO from '../../components/SEO';\nimport ThumbUpRoundedIcon from '@mui/icons-material/ThumbUpRounded';\nimport ThumbUpOutlinedIcon from '@mui/icons-material/ThumbUpOutlined';\nimport CommentRoundedIcon from '@mui/icons-material/CommentRounded';\nimport CommentOutlinedIcon from '@mui/icons-material/CommentOutlined';\nimport ShareRoundedIcon from '@mui/icons-material/ShareRounded';\nimport { ThemeSettingsContext } from '../../App';\n\nimport { requireAuth } from '../../utils/authUtils';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport { usePostDetail } from '../../context/PostDetailContext';\nimport { VerificationBadge } from '../../UIKIT';\n\n\nconst MarkdownContent = styled(Box)(({ theme }) => ({\n  '& p': { margin: theme.spacing(1, 0) },\n  '& h1, & h2, & h3, & h4, & h5, & h6': {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    fontWeight: 600,\n  },\n  '& a': {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': { textDecoration: 'underline' },\n  },\n  '& ul, & ol': { marginLeft: theme.spacing(2) },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.action.hover,\n    padding: theme.spacing(0.3, 0.6),\n    borderRadius: 3,\n  },\n  '& pre': {\n    backgroundColor: theme.palette.grey[900],\n    color: theme.palette.common.white,\n    padding: theme.spacing(1.5),\n    borderRadius: theme.shape.borderRadius,\n    overflowX: 'auto',\n    '& code': {\n      backgroundColor: 'transparent',\n      padding: 0,\n    },\n  },\n}));\n\nconst CommentCard = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(1),\n}));\n\nconst PostCard = styled(Card)(({ theme }) => ({\n  marginBottom: theme.spacing(3),\n  borderRadius: theme.spacing(1),\n}));\n\nconst CommentInput = styled(TextField)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n}));\n\nconst CommentBox = styled(Box)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: 'rgba(255, 255, 255, 0.03)',\n}));\n\nconst ReplyBox = styled(Box)(({ theme }) => ({\n  marginLeft: theme.spacing(6),\n  marginTop: theme.spacing(1),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: 'rgba(255, 255, 255, 0.02)',\n}));\n\nconst MediaPreviewContainer = styled(Box)(({ theme }) => ({\n  position: 'relative',\n  marginTop: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n  overflow: 'hidden',\n  backgroundColor: 'rgba(0, 0, 0, 0.2)',\n}));\n\nconst RemoveMediaButton = styled(IconButton)(({ theme }) => ({\n  position: 'absolute',\n  top: 8,\n  right: 8,\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  color: theme.palette.common.white,\n  padding: theme.spacing(0.5),\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  },\n}));\n\n\nconst sanitizeImagePath = (imagePath) => {\n  if (!imagePath) return null;\n  \n  \n  if (imagePath.includes('/static/uploads/') && \n      imagePath.indexOf('/static/uploads/') !== imagePath.lastIndexOf('/static/uploads/')) {\n    \n    return imagePath.substring(imagePath.lastIndexOf('/static/uploads/'));\n  }\n  \n  return imagePath;\n};\n\nconst Comment = ({ \n  comment, \n  onLike, \n  onLikeReply,\n  onReply,\n  isReplyFormOpen,\n  activeCommentId,\n  replyText,\n  onReplyTextChange,\n  onReplySubmit,\n  replyingToReply,\n  setReplyingToReply,\n  setReplyFormOpen,\n  setActiveComment,\n  onDeleteComment,\n  onDeleteReply,\n  isSubmittingComment,\n  waitUntil,\n  handleReplyImageChange,\n  currentLightboxImage,\n  setCurrentLightboxImage,\n  replyFileInputRef,\n  handleRemoveReplyImage,\n  replyImage,\n  replyImagePreview,\n  setReplyImage,\n  setLightboxOpen\n}) => {\n  const { user, isAuthenticated } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [commentImageError, setCommentImageError] = useState(false);\n  const [replyImageErrors, setReplyImageErrors] = useState({});\n  const [replyImageFallbacks, setReplyImageFallbacks] = useState({});\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  const handleOpenImage = (event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    \n    if (comment.image) {\n      const sanitizedPath = sanitizeImagePath(comment.image);\n      console.log('Opening comment image:', sanitizedPath);\n      setCurrentLightboxImage(sanitizedPath);\n      setLightboxOpen(true);\n    }\n  };\n\n  const handleCommentImageError = () => {\n    console.error(\"Comment image failed to load:\", comment.image);\n    \n    \n    if (comment.image && comment.image.includes('/static/uploads/') && \n        (comment.image.indexOf('/static/uploads/') !== comment.image.lastIndexOf('/static/uploads/'))) {\n      \n      const fixedUrl = comment.image.substring(comment.image.lastIndexOf('/static/uploads/'));\n      console.log(\"Fixing duplicated image path:\", comment.image, \"->\", fixedUrl);\n      \n      \n      comment.image = fixedUrl;\n      \n      \n      setCommentImageError(false);\n      return;\n    }\n    \n    setCommentImageError(true);\n  };\n\n  \n  const getReplyImageFallback = (originalUrl) => {\n    if (!originalUrl) return null;\n    \n    \n    if (!originalUrl.includes('_fallback')) {\n      \n      if (originalUrl.includes('/static/uploads/reply/')) {\n        return originalUrl.replace('/static/uploads/reply/', '/static/uploads/replies/') + '_fallback1';\n      }\n      \n      \n      if (!originalUrl.startsWith('/')) {\n        return '/' + originalUrl + '_fallback2';\n      }\n    } \n    \n    else if (originalUrl.includes('_fallback1')) {\n      const baseUrl = originalUrl.replace('_fallback1', '');\n      return baseUrl.replace('/static/uploads/replies/', '/static/uploads/images/replies/') + '_fallback2';\n    }\n    \n    else if (originalUrl.includes('_fallback2')) {\n      const baseUrl = originalUrl.replace('_fallback2', '');\n      \n      const filename = baseUrl.split('/').pop();\n      return `/static/uploads/reply/${filename}` + '_fallback3';\n    }\n    \n    \n    return null;\n  };\n\n  const handleReplyImageError = (replyId, imageUrl) => {\n    console.error(\"Reply image failed to load:\", imageUrl);\n    \n    \n    if (imageUrl && imageUrl.includes('/static/uploads/') && \n        (imageUrl.indexOf('/static/uploads/') !== imageUrl.lastIndexOf('/static/uploads/'))) {\n      \n      const fixedUrl = imageUrl.substring(imageUrl.lastIndexOf('/static/uploads/'));\n      console.log(\"Fixing duplicated reply image path:\", imageUrl, \"->\", fixedUrl);\n      \n      \n      setReplyImageFallbacks(prev => ({\n        ...prev,\n        [replyId]: fixedUrl\n      }));\n      return;\n    }\n    \n    \n    console.log(\"Reply image details:\", {\n      replyId: replyId,\n      url: imageUrl,\n      urlType: typeof imageUrl,\n      urlLength: imageUrl ? imageUrl.length : 0\n    });\n    \n    \n    const fallbackUrl = getReplyImageFallback(imageUrl);\n    \n    if (fallbackUrl) {\n      console.log(`Trying fallback URL for reply ${replyId}:`, fallbackUrl);\n      setReplyImageFallbacks(prev => ({\n        ...prev,\n        [replyId]: fallbackUrl\n      }));\n      return;\n    }\n    \n    \n    setReplyImageErrors(prev => ({\n      ...prev,\n      [replyId]: true\n    }));\n  };\n\n  \n  const isCommentOwner = user && (comment.user_id === user.id || user.is_admin);\n  const isOwnComment = user && comment.user_id === user.id;\n\n  return (\n    <Box sx={{ mb: 1.5 }}>\n      <Box \n        id={`comment-${comment.id}`}\n        sx={{ \n          display: 'flex',\n          flexDirection: 'column',\n          width: '100%',\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 0.5, px: 0.5 }}>\n          <Avatar \n            src={comment.user.photo && comment.user.photo !== 'avatar.png'\n              ? `/static/uploads/avatar/${comment.user.id}/${comment.user.photo}`\n              : `/static/uploads/avatar/system/avatar.png`}\n            alt={comment.user.name}\n            component={Link}\n            to={`/profile/${comment.user.username}`}\n            sx={{ \n              width: 40, \n              height: 40,\n              border: '1px solid rgba(140, 82, 255, 0.15)', \n              mr: 1,\n              transition: 'all 0.2s ease',\n              '&:hover': {\n                borderColor: 'primary.main',\n                transform: 'scale(1.05)'\n              }\n            }}\n            onError={(e) => {\n              console.error(\"Comment avatar failed to load\");\n              if (e.currentTarget && e.currentTarget.setAttribute) {\n                e.currentTarget.setAttribute('src', '/static/uploads/avatar/system/avatar.png');\n              }\n            }}\n          />\n          <Box sx={{ \n            display: 'flex', \n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            maxWidth: 'calc(100% - 40px)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n              <Typography \n                component={Link}\n                to={`/profile/${comment.user.username}`}\n                sx={{ \n                  textDecoration: 'none',\n                  color: 'text.primary',\n                  '&:hover': { color: 'primary.main' },\n                  display: 'flex',\n                  alignItems: 'center',\n                  fontSize: '0.8rem',\n                  mr: 0.75\n                }}\n              >\n                {comment.user.name}\n                {comment.user.verification && comment.user.verification.status > 0 && (\n                  <VerificationBadge \n                    status={comment.user.verification.status} \n                    size=\"small\" \n                  />\n                )}\n                {comment.user.achievement && (\n                  <Box \n                    component=\"img\" \n                    sx={{ \n                      width: 12,\n                      height: 12,\n                      ml: 0.5 \n                    }} \n                    src={`/static/images/bages/${comment.user.achievement.image_path}`} \n                    alt={comment.user.achievement.bage}\n                    onError={(e) => {\n                      console.error(\"Achievement badge failed to load:\", e);\n                      e.target.style.display = 'none';\n                    }}\n                  />\n                )}\n              </Typography>\n              <Typography \n                variant=\"caption\" \n                color=\"text.secondary\"\n                sx={{ fontSize: '0.6rem' }}\n              >\n                {formatTimeAgo(comment.timestamp)}\n              </Typography>\n            </Box>\n            \n            <Box sx={{ \n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              bgcolor: 'rgba(45, 45, 50, 0.5)',\n              p: 1.25,\n              borderRadius: '18px',\n              borderTopLeftRadius: '4px',\n              maxWidth: '100%',\n              boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)',\n            }}>\n              <Typography variant=\"body2\" sx={{ \n                color: 'text.primary',\n                fontSize: '0.85rem',\n                lineHeight: 1.3,\n                width: '100%',\n                whiteSpace: 'pre-wrap',\n                wordBreak: 'break-word',\n                overflowWrap: 'break-word',\n              }}>\n                {comment.content}\n              </Typography>\n              \n              {comment.image && (\n                <Box sx={{ mt: 1, width: '100%' }}>\n                  <Box\n                    sx={{\n                      position: 'relative',\n                      borderRadius: '12px',\n                      overflow: 'hidden',\n                      cursor: 'pointer',\n                      width: '100%',\n                      '&:hover': {\n                        '& .zoom-icon': {\n                          opacity: 1\n                        }\n                      }\n                    }}\n                    onClick={handleOpenImage}\n                  >\n                    {!commentImageError ? (\n                      <img \n                        src={sanitizeImagePath(comment.image)}\n                        alt=\"Comment\" \n                        style={{ \n                          width: '100%',\n                          maxHeight: '160px',\n                          borderRadius: '10px',\n                          objectFit: 'cover'\n                        }} \n                        onError={handleCommentImageError}\n                      />\n                    ) : (\n                      <Box\n                        sx={{\n                          backgroundColor: 'rgba(244, 67, 54, 0.1)',\n                          border: '1px solid rgba(244, 67, 54, 0.3)',\n                          borderRadius: '8px',\n                          padding: '8px',\n                          color: '#f44336',\n                          fontSize: '0.7rem',\n                          textAlign: 'center'\n                        }}\n                      >\n                        <Typography sx={{ fontWeight: 'bold', mb: 0.25, fontSize: '0.65rem' }}>\n                          Ошибка загрузки медиа\n                        </Typography>\n                      </Box>\n                    )}\n                    {!commentImageError && (\n                      <Box \n                        className=\"zoom-icon\"\n                        sx={{\n                          position: 'absolute',\n                          top: '50%',\n                          left: '50%',\n                          transform: 'translate(-50%, -50%)',\n                          bgcolor: 'rgba(0, 0, 0, 0.5)',\n                          color: 'white',\n                          borderRadius: '50%',\n                          width: 28,\n                          height: 28,\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          opacity: 0,\n                          transition: 'opacity 0.2s ease',\n                          cursor: 'pointer'\n                        }}\n                      >\n                        <ZoomInIcon sx={{ fontSize: '0.9rem' }} />\n                      </Box>\n                    )}\n                  </Box>\n                </Box>\n              )}\n            </Box>\n\n            <Box sx={{\n              display: 'flex',\n              mt: 0.5,\n              alignItems: 'center',\n              ml: 1\n            }}>\n              <Box \n                onClick={() => onLike(comment.id)}\n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  p: '2px 4px',\n                  borderRadius: '12px',\n                  transition: 'all 0.15s ease',\n                  mr: 1.5,\n                  '&:hover': {\n                    backgroundColor: 'rgba(140, 82, 255, 0.08)',\n                    transform: 'scale(1.05)'\n                  }\n                }}\n              >\n                {comment.user_liked ? (\n                  <FavoriteIcon sx={{ color: '#8c52ff', fontSize: 12 }} />\n                ) : (\n                  <FavoriteBorderIcon sx={{ color: '#757575', fontSize: 12 }} />\n                )}\n                <Typography \n                  variant=\"caption\" \n                  sx={{ \n                    ml: 0.5,\n                    color: comment.user_liked ? '#8c52ff' : 'text.secondary',\n                    fontSize: '0.75rem'\n                  }}\n                >\n                  {comment.likes_count}\n                </Typography>\n              </Box>\n\n              <Box \n                onClick={() => {\n                  handleMenuClose();\n                  setReplyFormOpen(true);\n                  setActiveComment(comment);\n                  setReplyingToReply(null);\n                }}\n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  p: '2px 4px',\n                  borderRadius: '12px',\n                  color: 'text.secondary',\n                  transition: 'all 0.15s ease',\n                  '&:hover': {\n                    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                    color: 'text.primary',\n                    transform: 'scale(1.05)'\n                  }\n                }}\n              >\n                <ReplyIcon sx={{ fontSize: 12, transform: 'scaleX(-1)' }} />\n                <Typography variant=\"caption\" sx={{ ml: 0.5, fontSize: '0.65rem' }}>\n                  Ответить\n                </Typography>\n              </Box>\n              \n              {isCommentOwner && (\n                <IconButton\n                  size=\"small\"\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    setMenuAnchorEl(event.currentTarget);\n                    \n                    setMenuAnchorEl({\n                      element: event.currentTarget,\n                      replyId: null,\n                      commentId: comment.id\n                    });\n                  }}\n                  sx={{ \n                    p: 0.25,\n                    ml: 'auto',\n                    color: 'text.secondary',\n                    '&:hover': { color: 'text.primary' }\n                  }}\n                >\n                  <MoreVertIcon sx={{ fontSize: '0.85rem' }} />\n                </IconButton>\n              )}\n              \n              <Menu\n                anchorEl={menuAnchorEl ? menuAnchorEl.element : null}\n                open={Boolean(menuAnchorEl)}\n                onClose={() => setMenuAnchorEl(null)}\n                PaperProps={{\n                  sx: {\n                    backgroundColor: '#1a1a1a',\n                    minWidth: 120,\n                    boxShadow: '0 3px 8px rgba(0, 0, 0, 0.3)',\n                    borderRadius: '12px',\n                    overflow: 'hidden',\n                    border: '1px solid rgba(255, 255, 255, 0.05)'\n                  }\n                }}\n              >\n                {menuAnchorEl && menuAnchorEl.replyId ? (\n                  \n                  <MenuItem \n                    onClick={() => {\n                      setMenuAnchorEl(null);\n                      onDeleteReply(menuAnchorEl.commentId, menuAnchorEl.replyId);\n                    }}\n                    sx={{ \n                      py: 1,\n                      fontSize: '0.8rem',\n                      '&:hover': {\n                        backgroundColor: 'rgba(244, 67, 54, 0.08)'\n                      }\n                    }}\n                  >\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <DeleteIcon sx={{ color: '#f44336', fontSize: '0.9rem' }} />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Удалить ответ\" \n                      primaryTypographyProps={{ \n                        sx: { \n                          color: '#f44336',\n                          fontSize: '0.8rem'\n                        }\n                      }} \n                    />\n                  </MenuItem>\n                ) : (\n                  \n                  <MenuItem \n                    onClick={() => {\n                      setMenuAnchorEl(null);\n                      onDeleteComment(comment.id);\n                    }}\n                    sx={{ \n                      py: 1,\n                      fontSize: '0.8rem',\n                      '&:hover': {\n                        backgroundColor: 'rgba(244, 67, 54, 0.08)'\n                      }\n                    }}\n                  >\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <DeleteIcon sx={{ color: '#f44336', fontSize: '0.9rem' }} />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary=\"Удалить\" \n                      primaryTypographyProps={{ \n                        sx: { \n                          color: '#f44336',\n                          fontSize: '0.8rem'\n                        }\n                      }} \n                    />\n                  </MenuItem>\n                )}\n              </Menu>\n            </Box>\n          </Box>\n        </Box>\n\n        {comment.replies && comment.replies.length > 0 && (\n          <Box sx={{ mt: 0.5, pl: { xs: 3, sm: 4 } }}>\n            {comment.replies.map(reply => {\n              const isReplyOwner = user && (reply.user_id === user.id || user.is_admin);\n              \n              return (\n                <Box \n                  key={reply.id}\n                  sx={{ \n                    mb: 1,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'flex-start'\n                  }}\n                >\n                  <Box sx={{ display: 'flex', alignItems: 'flex-start', width: '100%' }}>\n                    <Avatar \n                      src={reply.user.photo && reply.user.photo !== 'avatar.png'\n                        ? `/static/uploads/avatar/${reply.user.id}/${reply.user.photo}`\n                        : `/static/uploads/avatar/system/avatar.png`}\n                      alt={reply.user.name}\n                      component={Link}\n                      to={`/profile/${reply.user.username}`}\n                      sx={{ \n                        width: 35, \n                        height: 35,\n                        mr: 1,\n                        transition: 'all 0.2s ease',\n                        '&:hover': {\n                          transform: 'scale(1.05)'\n                        }\n                      }}\n                      onError={(e) => {\n                        console.error(\"Reply avatar failed to load\");\n                        if (e.currentTarget && e.currentTarget.setAttribute) {\n                          e.currentTarget.setAttribute('src', '/static/uploads/avatar/system/avatar.png');\n                        }\n                      }}\n                    />\n                    \n                    <Box sx={{ \n                      display: 'flex', \n                      flexDirection: 'column',\n                      alignItems: 'flex-start',\n                      maxWidth: 'calc(100% - 30px)'\n                    }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n                        <Typography \n                          component={Link}\n                          to={`/profile/${reply.user.username}`}\n                          sx={{ \n                            textDecoration: 'none',\n                            color: 'text.primary',\n                            '&:hover': { color: 'primary.main' },\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '0.8rem',\n                            mr: 0.75\n                          }}\n                        >\n                          {reply.user.name}\n                          {reply.user.verification && reply.user.verification.status > 0 && (\n                            <VerificationBadge \n                              status={reply.user.verification.status} \n                              size=\"small\" \n                            />\n                          )}\n                        </Typography>\n                        <Typography \n                          variant=\"caption\" \n                          color=\"text.secondary\"\n                          sx={{ fontSize: '0.6rem' }}\n                        >\n                          {formatTimeAgo(reply.timestamp)}\n                        </Typography>\n                      </Box>\n                      \n                      {reply.parent_reply_id && !reply.parent_reply && (\n                        <Box \n                          sx={{ \n                            bgcolor: 'rgba(255, 255, 255, 0.03)',\n                            borderRadius: '8px',\n                            p: 1, \n                            mb: 0.75, \n                            borderLeft: '2px solid rgba(140, 82, 255, 0.5)',\n                            width: '100%'\n                          }}\n                        >\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n                            <Avatar \n                              src={comment.user.photo && comment.user.photo !== 'avatar.png'\n                                ? `/static/uploads/avatar/${comment.user.id}/${comment.user.photo}`\n                                : `/static/uploads/avatar/system/avatar.png`}\n                              alt={comment.user.name}\n                              sx={{ width: 16, height: 16 }} \n                              onError={(e) => {\n                                console.error(\"Reply parent avatar failed to load\");\n                                if (e.currentTarget && e.currentTarget.setAttribute) {\n                                  e.currentTarget.setAttribute('src', '/static/uploads/avatar/system/avatar.png');\n                                }\n                              }}\n                            />\n                            <Typography \n                              variant=\"caption\"\n                              sx={{ \n                                fontWeight: 'bold',\n                                color: 'text.primary',\n                                fontSize: '0.65rem'\n                              }}\n                            >\n                              {comment.user.name}\n                            </Typography>\n                          </Box>\n                          <Typography \n                            variant=\"caption\" \n                            color=\"text.secondary\"\n                            sx={{ \n                              display: '-webkit-box',\n                              WebkitLineClamp: 1, \n                              WebkitBoxOrient: 'vertical',\n                              overflow: 'hidden',\n                              mt: 0.25,\n                              fontSize: '0.65rem',\n                              lineHeight: 1.3,\n                              whiteSpace: 'pre-wrap',\n                              wordBreak: 'break-word',\n                              overflowWrap: 'break-word'\n                            }}\n                          >\n                            {comment.content}\n                          </Typography>\n                        </Box>\n                      )}\n                      \n                      {reply.parent_reply_id && reply.parent_reply && (\n                        <Box \n                          sx={{ \n                            bgcolor: 'rgba(255, 255, 255, 0.03)',\n                            borderRadius: '8px',\n                            p: 1, \n                            mb: 0.75, \n                            borderLeft: '2px solid rgba(140, 82, 255, 0.5)',\n                            width: '100%'\n                          }}\n                        >\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n                            <Avatar \n                              src={reply.parent_reply.user.photo && reply.parent_reply.user.photo !== 'avatar.png'\n                                ? `/static/uploads/avatar/${reply.parent_reply.user.id}/${reply.parent_reply.user.photo}`\n                                : `/static/uploads/avatar/system/avatar.png`}\n                              alt={reply.parent_reply.user.name}\n                              sx={{ width: 16, height: 16 }} \n                              onError={(e) => {\n                                console.error(\"Reply parent avatar failed to load\");\n                                if (e.currentTarget && e.currentTarget.setAttribute) {\n                                  e.currentTarget.setAttribute('src', '/static/uploads/avatar/system/avatar.png');\n                                }\n                              }}\n                            />\n                            <Typography \n                              variant=\"caption\"\n                              sx={{ \n                                fontWeight: 'bold',\n                                color: 'text.primary',\n                                fontSize: '0.65rem'\n                              }}\n                            >\n                              {reply.parent_reply.user.name}\n                            </Typography>\n                          </Box>\n                          <Typography \n                            variant=\"caption\" \n                            color=\"text.secondary\"\n                            sx={{ \n                              display: '-webkit-box',\n                              WebkitLineClamp: 1, \n                              WebkitBoxOrient: 'vertical',\n                              overflow: 'hidden',\n                              mt: 0.25,\n                              fontSize: '0.65rem',\n                              lineHeight: 1.3,\n                              whiteSpace: 'pre-wrap',\n                              wordBreak: 'break-word',\n                              overflowWrap: 'break-word'\n                            }}\n                          >\n                            {reply.parent_reply.content}\n                          </Typography>\n                        </Box>\n                      )}\n                      \n                      <Box sx={{ \n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start',\n                        bgcolor: 'rgba(45, 45, 50, 0.5)',\n                        p: 1.25,\n                        borderRadius: '18px',\n                        borderTopLeftRadius: '4px',\n                        maxWidth: '100%',\n                        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)',\n                      }}>\n                        <Typography variant=\"body2\" sx={{ \n                          color: 'text.primary',\n                          fontSize: '0.85rem',\n                          lineHeight: 1.3,\n                          width: '100%',\n                          whiteSpace: 'pre-wrap',\n                          wordBreak: 'break-word',\n                          overflowWrap: 'break-word',\n                        }}>\n                          {reply.content}\n                        </Typography>\n                        \n                        {reply.image ? (\n                          <Box sx={{ mt: 1, width: '100%' }}>\n                            <Box\n                              sx={{\n                                position: 'relative',\n                                borderRadius: '12px',\n                                overflow: 'hidden',\n                                cursor: 'pointer',\n                                width: '100%',\n                                '&:hover': {\n                                  '& .zoom-icon': {\n                                    opacity: 1\n                                  }\n                                }\n                              }}\n                              onClick={(event) => {\n                                if (!replyImageErrors[reply.id]) {\n                                  event.stopPropagation();\n                                  setLightboxOpen(true);\n                                  setCurrentLightboxImage(sanitizeImagePath(replyImageFallbacks[reply.id] || reply.image));\n                                }\n                              }}\n                            >\n                              {!replyImageErrors[reply.id] ? (\n                                <img \n                                  src={sanitizeImagePath(replyImageFallbacks[reply.id] || reply.image)}\n                                  alt=\"Reply\" \n                                  style={{ \n                                    width: '100%',\n                                    maxHeight: '160px',\n                                    borderRadius: '10px',\n                                    objectFit: 'cover'\n                                  }} \n                                  onError={() => handleReplyImageError(reply.id, replyImageFallbacks[reply.id] || reply.image)}\n                                />\n                              ) : (\n                                <Box\n                                  sx={{\n                                    backgroundColor: 'rgba(244, 67, 54, 0.1)',\n                                    border: '1px solid rgba(244, 67, 54, 0.3)',\n                                    borderRadius: '8px',\n                                    padding: '8px',\n                                    color: '#f44336',\n                                    fontSize: '0.7rem',\n                                    textAlign: 'center'\n                                  }}\n                                >\n                                  <Typography sx={{ fontWeight: 'bold', mb: 0.25, fontSize: '0.65rem' }}>\n                                    Ошибка загрузки медиа\n                                  </Typography>\n                                </Box>\n                              )}\n                              {!replyImageErrors[reply.id] && (\n                                <Box \n                                  className=\"zoom-icon\"\n                                  sx={{\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    transform: 'translate(-50%, -50%)',\n                                    bgcolor: 'rgba(0, 0, 0, 0.5)',\n                                    color: 'white',\n                                    borderRadius: '50%',\n                                    width: 28,\n                                    height: 28,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    opacity: 0,\n                                    transition: 'opacity 0.2s ease',\n                                    cursor: 'pointer'\n                                  }}\n                                >\n                                  <ZoomInIcon sx={{ fontSize: '0.9rem' }} />\n                                </Box>\n                              )}\n                            </Box>\n                          </Box>\n                        ) : null}\n                      </Box>\n\n                      <Box sx={{\n                        display: 'flex',\n                        mt: 0.5,\n                        alignItems: 'center',\n                        ml: 1\n                      }}>\n                        <Box \n                          onClick={() => onLikeReply(comment.id, reply.id)}\n                          sx={{ \n                            display: 'flex', \n                            alignItems: 'center',\n                            cursor: 'pointer',\n                            p: '2px 4px',\n                            borderRadius: '12px',\n                            transition: 'all 0.15s ease',\n                            mr: 1.5,\n                            '&:hover': {\n                              backgroundColor: 'rgba(140, 82, 255, 0.08)',\n                              transform: 'scale(1.05)'\n                            }\n                          }}\n                        >\n                          {reply.user_liked ? (\n                            <FavoriteIcon sx={{ color: '#8c52ff', fontSize: 12 }} />\n                          ) : (\n                            <FavoriteBorderIcon sx={{ color: '#757575', fontSize: 12 }} />\n                          )}\n                          <Typography \n                            variant=\"caption\" \n                            sx={{ \n                              ml: 0.5,\n                              color: reply.user_liked ? '#8c52ff' : 'text.secondary',\n                              fontSize: '0.75rem'\n                            }}\n                          >\n                            {reply.likes_count}\n                          </Typography>\n                        </Box>\n\n                        <Box \n                          onClick={() => {\n                            handleMenuClose();\n                            setReplyFormOpen(true);\n                            setActiveComment(comment);\n                            setReplyingToReply(reply);\n                          }}\n                          sx={{ \n                            display: 'flex', \n                            alignItems: 'center',\n                            cursor: 'pointer',\n                            p: '2px 4px',\n                            borderRadius: '12px',\n                            color: 'text.secondary',\n                            transition: 'all 0.15s ease',\n                            '&:hover': {\n                              backgroundColor: 'rgba(255, 255, 255, 0.05)',\n                              color: 'text.primary',\n                              transform: 'scale(1.05)'\n                            }\n                          }}\n                        >\n                          <ReplyIcon sx={{ fontSize: 12, transform: 'scaleX(-1)' }} />\n                          <Typography variant=\"caption\" sx={{ ml: 0.5, fontSize: '0.65rem' }}>\n                            Ответить\n                          </Typography>\n                        </Box>\n                        \n                        {isReplyOwner && (\n                          <IconButton\n                            size=\"small\"\n                            onClick={(event) => {\n                              event.stopPropagation();\n                              setMenuAnchorEl(event.currentTarget);\n                              \n                              setMenuAnchorEl({\n                                element: event.currentTarget,\n                                replyId: reply.id,\n                                commentId: comment.id\n                              });\n                            }}\n                            sx={{ \n                              p: 0.25,\n                              ml: 'auto',\n                              color: 'text.secondary',\n                              '&:hover': { color: 'text.primary' }\n                            }}\n                          >\n                            <MoreVertIcon sx={{ fontSize: '0.85rem' }} />\n                          </IconButton>\n                        )}\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        )}\n      </Box>\n      \n      {isReplyFormOpen && activeCommentId === comment.id && (\n        <Box sx={{ \n          mt: 1, \n          ml: { xs: 0.5, sm: 4 },\n          pl: { xs: 0.5, sm: 2 },\n          pr: { xs: 0.5, sm: 0 },\n          position: 'relative'\n        }}>\n          {replyingToReply || !user?.id || comment.user_id !== user?.id ? (\n            <Box \n              sx={{ \n                display: 'flex',\n                alignItems: 'center',\n                mb: 1,\n                pl: 0.5\n              }}\n            >\n              <Box \n                sx={{ \n                  bgcolor: 'rgba(140, 82, 255, 0.08)',\n                  borderRadius: '8px',\n                  py: 0.75,\n                  px: 1,\n                  fontSize: '0.7rem',\n                  color: 'primary.main',\n                  lineHeight: 1.2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  maxWidth: '100%'\n                }}\n              >\n                <ReplyIcon sx={{ fontSize: 14, mr: 0.5, transform: 'scaleX(-1)' }} />\n                <Box component=\"span\" sx={{ \n                  display: 'inline-flex', \n                  fontWeight: 'medium',\n                  whiteSpace: 'nowrap'\n                }}>\n                  Ответ для {replyingToReply \n                    ? replyingToReply.user.name\n                    : comment.user.name}\n                </Box>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => {\n                    setReplyingToReply(null);\n                  }}\n                  sx={{ \n                    p: 0.25,\n                    ml: 0.5,\n                    color: 'text.secondary',\n                    '&:hover': { color: 'text.primary' }\n                  }}\n                >\n                  <CloseIcon sx={{ fontSize: '0.7rem' }} />\n                </IconButton>\n              </Box>\n            </Box>\n          ) : null}\n\n          <TextField\n            fullWidth\n            size=\"small\"\n            placeholder=\"Написать ответ...\"\n            value={replyText}\n            onChange={(e) => onReplyTextChange(e.target.value)}\n            disabled={isSubmittingComment || Date.now() < waitUntil}\n            InputProps={{\n              startAdornment: (\n                <Box component=\"span\" sx={{ mr: 0.75 }}>\n                  <Avatar \n                    src={user?.photo && user.photo !== 'avatar.png'\n                      ? `/static/uploads/avatar/${user.id}/${user.photo}`\n                      : `/static/uploads/avatar/system/avatar.png`}\n                    alt={user?.name}\n                    sx={{ width: 30, height: 30 }}\n                  />\n                </Box>\n              ),\n              endAdornment: (\n                <Box sx={{ display: 'flex', gap: 0.5 }}>\n                  <input \n                    ref={replyFileInputRef}\n                    type=\"file\" \n                    accept=\"image/*\" \n                    style={{ display: 'none' }}\n                    onChange={handleReplyImageChange}\n                    disabled={isSubmittingComment || Date.now() < waitUntil}\n                  />\n                  <IconButton\n                    size=\"small\"\n                    onClick={() => replyFileInputRef.current.click()}\n                    disabled={isSubmittingComment || Date.now() < waitUntil}\n                    sx={{ padding: '4px' }}\n                  >\n                    <ImageIcon fontSize=\"small\" sx={{ fontSize: '1.1rem' }} />\n                  </IconButton>\n                  <IconButton\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => onReplySubmit(comment.id, replyingToReply?.id)}\n                    disabled={(!replyText.trim() && !replyImage) || isSubmittingComment || Date.now() < waitUntil}\n                    sx={{ padding: '4px' }}\n                  >\n                    {isSubmittingComment ? (\n                      <CircularProgress size={16} color=\"inherit\" />\n                    ) : (\n                      <SendIcon fontSize=\"small\" sx={{ fontSize: '1.1rem' }} />\n                    )}\n                  </IconButton>\n                  <IconButton\n                    size=\"small\"\n                    onClick={() => {\n                      setReplyFormOpen(false);\n                      setActiveComment(null);\n                      setReplyingToReply(null);\n                      setReplyText('');\n                      setReplyImage(null);\n                      setReplyImagePreview('');\n                    }}\n                    sx={{ color: 'text.secondary', padding: '4px' }}\n                  >\n                    <CloseIcon fontSize=\"small\" sx={{ fontSize: '0.9rem' }} />\n                  </IconButton>\n                </Box>\n              ),\n              sx: { \n                bgcolor: 'rgba(28, 28, 32, 0.3)',\n                backdropFilter: 'blur(5px)',\n                borderRadius: '30px',\n                border: '1px solid rgba(255, 255, 255, 0.05)',\n                '& .MuiOutlinedInput-notchedOutline': {\n                  borderColor: 'transparent'\n                },\n                '&:hover .MuiOutlinedInput-notchedOutline': {\n                  borderColor: 'rgba(140, 82, 255, 0.2)'\n                },\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                  borderColor: 'rgba(140, 82, 255, 0.4)'\n                },\n                '& input': {\n                  padding: '12px 5px',\n                  fontSize: '0.9rem'\n                }\n              }\n            }}\n          />\n          \n          {replyImagePreview && (\n            <Box sx={{ mt: 1, position: 'relative', borderRadius: '16px', overflow: 'hidden' }}>\n              <img \n                src={replyImagePreview} \n                alt=\"Preview\" \n                style={{ \n                  width: '100%', \n                  maxHeight: '120px', \n                  objectFit: 'cover'\n                }} \n              />\n              <IconButton\n                size=\"small\"\n                onClick={handleRemoveReplyImage}\n                sx={{\n                  position: 'absolute',\n                  top: 6,\n                  right: 6,\n                  bgcolor: 'rgba(0, 0, 0, 0.6)',\n                  padding: '3px',\n                  '&:hover': {\n                    bgcolor: 'rgba(0, 0, 0, 0.8)'\n                  }\n                }}\n              >\n                <CloseIcon fontSize=\"small\" sx={{ fontSize: '0.8rem', color: 'white' }} />\n              </IconButton>\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst PostDetailPage = ({ isOverlay = false }) => {\n  const { postId } = useParams();\n  const { user, isAuthenticated } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [commentText, setCommentText] = useState('');\n  const [replyText, setReplyText] = useState('');\n  const [replyingTo, setReplyingTo] = useState(null);\n  const [commentImage, setCommentImage] = useState(null);\n  const [replyImage, setReplyImage] = useState(null); \n  const [replyImagePreview, setReplyImagePreview] = useState(''); \n  const [imagePreview, setImagePreview] = useState('');\n  const fileInputRef = useRef(null);\n  const replyFileInputRef = useRef(null); \n  const commentInputRef = useRef(null);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const [postMenuAnchorEl, setPostMenuAnchorEl] = useState(null);\n  const [replyFormOpen, setReplyFormOpen] = useState(false);\n  const [activeComment, setActiveComment] = useState(null);\n  const [replyingToReply, setReplyingToReply] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [currentLightboxImage, setCurrentLightboxImage] = useState(''); \n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [isSubmittingComment, setIsSubmittingComment] = useState(false);\n  const [commentError, setCommentError] = useState('');\n  const [lastCommentTime, setLastCommentTime] = useState(0);\n  const [waitUntil, setWaitUntil] = useState(0);\n  \n  \n  const MIN_COMMENT_INTERVAL = 3000; \n\n  \n  const [commentDeleteDialog, setCommentDeleteDialog] = useState({\n    open: false,\n    deleting: false,\n    deleted: false,\n    commentId: null\n  });\n\n  const [replyDeleteDialog, setReplyDeleteDialog] = useState({\n    open: false,\n    deleting: false,\n    deleted: false,\n    commentId: null,\n    replyId: null\n  });\n\n  const { overlayOpen, closePostDetail } = usePostDetail();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  \n  \n  const viewCounted = useRef(false);\n  \n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/posts/${postId}`);\n        setPost(response.data.post);\n        \n        \n        if (response.data.comments && response.data.comments.length > 0) {\n          \n          const sanitizedComments = response.data.comments.map(comment => {\n            \n            if (comment.image) {\n              comment.image = sanitizeImagePath(comment.image);\n            }\n            \n            \n            if (comment.replies && comment.replies.length > 0) {\n              comment.replies = comment.replies.map(reply => {\n                if (reply.image) {\n                  reply.image = sanitizeImagePath(reply.image);\n                }\n                return reply;\n              });\n            }\n            \n            return comment;\n          });\n          \n          setComments(sanitizedComments);\n        } else {\n          setComments([]);\n        }\n        \n        \n        console.log(\"DEBUG - Post data received:\", response.data);\n        \n        const hasReplyWithImage = response.data.comments && response.data.comments.some(comment => \n          comment.replies && comment.replies.some(reply => reply.image)\n        );\n        console.log(\"DEBUG - Any replies with image field:\", hasReplyWithImage);\n        \n        const replyWithImage = response.data.comments && response.data.comments\n          .flatMap(c => c.replies || [])\n          .find(r => r.image);\n        if (replyWithImage) {\n          console.log(\"DEBUG - Example reply with image:\", replyWithImage);\n        }\n        \n        const totalReplies = response.data.comments ? response.data.comments.reduce(\n          (sum, comment) => sum + (comment.replies ? comment.replies.length : 0), \n          0\n        ) : 0;\n        console.log(`DEBUG - Total replies: ${totalReplies}`);\n        \n        setLoading(false);\n        \n        if (!viewCounted.current) {\n          incrementViewCount(postId);\n          viewCounted.current = true;\n        }\n      } catch (error) {\n        console.error('Error fetching post details:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPost();\n  }, [postId, navigate]);\n\n  \n  const incrementViewCount = async (postId) => {\n    try {\n      \n      const viewKey = `post_viewed_${postId}`;\n      \n      if (sessionStorage.getItem(viewKey)) {\n        console.log(`Post ${postId} already viewed in this session (detail page)`);\n        return;\n      }\n      \n      \n      sessionStorage.setItem(viewKey, 'true');\n      console.log(`Setting view flag for post ${postId} (detail page)`);\n      \n      console.log(`Incrementing view count for post ${postId} (detail page)`);\n      const response = await axios.post(`/api/posts/${postId}/view`);\n      \n      \n      if (response.data && response.data.success) {\n        console.log(`View count incremented successfully: ${response.data.views_count} (detail page)`);\n        setPost(prevPost => {\n          if (!prevPost) return null;\n          \n          return {\n            ...prevPost,\n            views_count: response.data.views_count\n          };\n        });\n      }\n    } catch (error) {\n      console.error(\"Error incrementing view count (detail page):\", error);\n      \n      const retryViewCount = async (retries = 2) => {\n        if (retries <= 0) return;\n        \n        try {\n          console.log(`Retrying view count increment (${retries} attempts left) (detail page)`);\n          const response = await axios.post(`/api/posts/${postId}/view`);\n          \n          if (response.data && response.data.success) {\n            console.log(`View count incremented on retry: ${response.data.views_count} (detail page)`);\n            setPost(prevPost => {\n              if (!prevPost) return null;\n              return {\n                ...prevPost,\n                views_count: response.data.views_count\n              };\n            });\n          }\n        } catch (retryError) {\n          console.error(\"Error on retry (detail page):\", retryError);\n          setTimeout(() => retryViewCount(retries - 1), 1000);\n        }\n      };\n      \n      \n      setTimeout(() => retryViewCount(), 1000);\n    }\n  };\n\n\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('image/')) {\n      setCommentImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        \n        if (typeof reader.result === 'string') {\n          setImagePreview(reader.result);\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleRemoveImage = () => {\n    setCommentImage(null);\n    setImagePreview('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  \n  const handleReplyImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('image/')) {\n      setReplyImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        \n        if (typeof reader.result === 'string') {\n          setReplyImagePreview(reader.result);\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  \n  const handleRemoveReplyImage = () => {\n    setReplyImage(null);\n    setReplyImagePreview('');\n    if (replyFileInputRef.current) {\n      replyFileInputRef.current.value = '';\n    }\n  };\n\n  const handleCommentSubmit = async () => {\n    if (!commentText.trim() && !commentImage) return;\n    \n    \n    if (!requireAuth(user, isAuthenticated, navigate)) {\n      return;\n    }\n    \n    \n    const now = Date.now();\n    if (now < waitUntil) {\n      const secondsRemaining = Math.ceil((waitUntil - now) / 1000);\n      setCommentError(`Пожалуйста, подождите ${secondsRemaining} сек. перед отправкой нового комментария`);\n      setSnackbar({\n        open: true,\n        message: `Слишком частая отправка комментариев. Подождите ${secondsRemaining} сек.`,\n        severity: 'warning'\n      });\n      return;\n    }\n    \n    \n    if (now - lastCommentTime < MIN_COMMENT_INTERVAL) {\n      setCommentError(\"Пожалуйста, не отправляйте комментарии слишком часто\");\n      setSnackbar({\n        open: true,\n        message: \"Не отправляйте комментарии слишком часто\",\n        severity: 'warning'\n      });\n      return;\n    }\n\n    try {\n      setIsSubmittingComment(true);\n      setCommentError('');\n      \n      let response;\n      if (commentImage) {\n        const formData = new FormData();\n        formData.append('content', commentText.trim());\n        formData.append('image', commentImage);\n        response = await axios.post(`/api/posts/${postId}/comments`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        response = await axios.post(`/api/posts/${postId}/comments`, {\n          content: commentText.trim()\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n\n      \n      \n      const newComment = response.data.comment;\n      if (newComment && newComment.image) {\n        newComment.image = sanitizeImagePath(newComment.image);\n      }\n      \n      \n      setComments(prev => [newComment, ...prev]);\n      setCommentText('');\n      setCommentImage(null);\n      setImagePreview('');\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      \n      setSnackbar({\n        open: true,\n        message: 'Комментарий добавлен',\n        severity: 'success'\n      });\n      \n      \n      setLastCommentTime(Date.now());\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      \n      \n      if (error.response && error.response.status === 429) {\n        const rateLimit = error.response.data.rate_limit;\n        let errorMessage = \"Превышен лимит комментариев. \";\n        \n        if (rateLimit && rateLimit.reset) {\n          \n          const resetTime = new Date(rateLimit.reset * 1000);\n          const now = new Date();\n          const diffSeconds = Math.round((resetTime - now) / 1000);\n          \n          if (diffSeconds > 60) {\n            const minutes = Math.floor(diffSeconds / 60);\n            const seconds = diffSeconds % 60;\n            errorMessage += `Следующий комментарий можно отправить через ${minutes} мин. ${seconds} сек.`;\n          } else {\n            errorMessage += `Следующий комментарий можно отправить через ${diffSeconds} сек.`;\n          }\n          \n          \n          setWaitUntil(now.getTime() + (diffSeconds * 1000));\n        } else {\n          errorMessage += \"Пожалуйста, повторите попытку позже.\";\n          \n          setWaitUntil(Date.now() + 30000);\n        }\n        \n        setCommentError(errorMessage);\n        setSnackbar({\n          open: true,\n          message: errorMessage,\n          severity: 'error'\n        });\n      } else if (error.response && error.response.data && error.response.data.error) {\n        setCommentError(error.response.data.error);\n        setSnackbar({\n          open: true,\n          message: error.response.data.error,\n          severity: 'error'\n        });\n      } else {\n        setCommentError('Ошибка при добавлении комментария');\n        setSnackbar({\n          open: true,\n          message: 'Ошибка при добавлении комментария',\n          severity: 'error'\n        });\n      }\n    } finally {\n      setIsSubmittingComment(false);\n    }\n  };\n\n  const handleReplySubmit = async (commentId, parentReplyId = null) => {\n    if (!replyText.trim() && !replyImage) return;\n\n    \n    if (!requireAuth(user, isAuthenticated, navigate)) {\n      return;\n    }\n\n    \n    const now = Date.now();\n    if (now < waitUntil) {\n      const secondsRemaining = Math.ceil((waitUntil - now) / 1000);\n      setCommentError(`Пожалуйста, подождите ${secondsRemaining} сек. перед отправкой нового комментария`);\n      setSnackbar({\n        open: true,\n        message: `Слишком частая отправка комментариев. Подождите ${secondsRemaining} сек.`,\n        severity: 'warning'\n      });\n      return;\n    }\n    \n    \n    if (now - lastCommentTime < MIN_COMMENT_INTERVAL) {\n      setCommentError(\"Пожалуйста, не отправляйте комментарии слишком часто\");\n      setSnackbar({\n        open: true,\n        message: \"Не отправляйте комментарии слишком часто\",\n        severity: 'warning'\n      });\n      return;\n    }\n\n    try {\n      setIsSubmittingComment(true);\n      setCommentError('');\n      \n      let response;\n      if (replyImage) {\n        console.log(\"Submitting reply with image\", replyImage);\n        const formData = new FormData();\n        formData.append('content', replyText.trim());\n        formData.append('image', replyImage);\n        if (parentReplyId) {\n          formData.append('parent_reply_id', parentReplyId);\n        }\n        response = await axios.post(`/api/comments/${commentId}/replies`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        response = await axios.post(`/api/comments/${commentId}/replies`, {\n          content: replyText.trim(),\n          parent_reply_id: parentReplyId\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n\n      \n      if (response.data.reply && response.data.reply.image) {\n        response.data.reply.image = sanitizeImagePath(response.data.reply.image);\n      }\n\n      console.log(\"Reply submitted successfully, response:\", response.data);\n      if (response.data.reply) {\n        console.log(\"Reply data structure:\", {\n          id: response.data.reply.id,\n          image: response.data.reply.image,\n          has_image: !!response.data.reply.image,\n          image_type: typeof response.data.reply.image\n        });\n      }\n\n      \n      setComments(prev => prev.map(comment => \n        comment.id === commentId\n          ? {\n              ...comment,\n              replies: [...(comment.replies || []), response.data.reply]\n            }\n          : comment\n      ));\n\n      setReplyText('');\n      setReplyFormOpen(false);\n      setActiveComment(null);\n      setReplyingToReply(null);\n      setReplyImage(null);\n      setReplyImagePreview('');\n      if (replyFileInputRef.current) {\n        replyFileInputRef.current.value = '';\n      }\n      \n      setSnackbar({\n        open: true,\n        message: 'Ответ добавлен',\n        severity: 'success'\n      });\n      \n      \n      setLastCommentTime(Date.now());\n    } catch (error) {\n      console.error('Error adding reply:', error);\n      \n      \n      if (error.response && error.response.status === 429) {\n        const rateLimit = error.response.data.rate_limit;\n        let errorMessage = \"Превышен лимит комментариев. \";\n        \n        if (rateLimit && rateLimit.reset) {\n          \n          const resetTime = new Date(rateLimit.reset * 1000);\n          const now = new Date();\n          const diffSeconds = Math.round((resetTime - now) / 1000);\n          \n          if (diffSeconds > 60) {\n            const minutes = Math.floor(diffSeconds / 60);\n            const seconds = diffSeconds % 60;\n            errorMessage += `Следующий комментарий можно отправить через ${minutes} мин. ${seconds} сек.`;\n          } else {\n            errorMessage += `Следующий комментарий можно отправить через ${diffSeconds} сек.`;\n          }\n          \n          \n          setWaitUntil(now.getTime() + (diffSeconds * 1000));\n        } else {\n          errorMessage += \"Пожалуйста, повторите попытку позже.\";\n          \n          setWaitUntil(Date.now() + 30000);\n        }\n        \n        setCommentError(errorMessage);\n        setSnackbar({\n          open: true,\n          message: errorMessage,\n          severity: 'error'\n        });\n      } else if (error.response && error.response.data && error.response.data.error) {\n        setCommentError(error.response.data.error);\n        setSnackbar({\n          open: true,\n          message: error.response.data.error,\n          severity: 'error'\n        });\n      } else {\n        setCommentError('Ошибка при добавлении ответа');\n        setSnackbar({\n          open: true,\n          message: 'Ошибка при добавлении ответа',\n          severity: 'error'\n        });\n      }\n    } finally {\n      setIsSubmittingComment(false);\n    }\n  };\n\n  const handleLikeComment = async (commentId) => {\n    \n    if (!requireAuth(user, isAuthenticated, navigate)) {\n      return;\n    }\n    \n    try {\n      \n      setComments(prev => prev.map(comment =>\n        comment.id === commentId\n          ? { \n              ...comment, \n              user_liked: !comment.user_liked, \n              likes_count: comment.user_liked ? Math.max(0, comment.likes_count - 1) : comment.likes_count + 1 \n            }\n          : comment\n      ));\n      \n      \n      const response = await axios.post(`/api/comments/${commentId}/like`);\n      \n      \n      setComments(prev => prev.map(comment =>\n        comment.id === commentId\n          ? { ...comment, user_liked: response.data.liked, likes_count: response.data.likes_count }\n          : comment\n      ));\n    } catch (error) {\n      console.error('Error liking comment:', error);\n      \n      setComments(prev => [...prev]);\n    }\n  };\n\n  const handleLikeReply = async (commentId, replyId) => {\n    \n    if (!requireAuth(user, isAuthenticated, navigate)) {\n      return;\n    }\n    \n    try {\n      \n      setComments(prev => prev.map(comment =>\n        comment.id === commentId\n          ? {\n              ...comment,\n              replies: comment.replies.map(reply =>\n                reply.id === replyId\n                  ? { \n                      ...reply, \n                      user_liked: !reply.user_liked, \n                      likes_count: reply.user_liked ? Math.max(0, reply.likes_count - 1) : reply.likes_count + 1 \n                    }\n                  : reply\n              )\n            }\n          : comment\n      ));\n      \n      \n      const response = await axios.post(`/api/replies/${replyId}/like`);\n      \n      \n      setComments(prev => prev.map(comment =>\n        comment.id === commentId\n          ? {\n              ...comment,\n              replies: comment.replies.map(reply =>\n                reply.id === replyId\n                  ? { ...reply, user_liked: response.data.liked, likes_count: response.data.likes_count }\n                  : reply\n              )\n            }\n          : comment\n      ));\n    } catch (error) {\n      console.error('Error liking reply:', error);\n      \n      setComments(prev => [...prev]);\n    }\n  };\n\n  const handlePostMenuOpen = () => {\n    setPostMenuAnchorEl(true);\n  };\n\n  \n  const handleDeleteComment = (commentId) => {\n    \n    if (!requireAuth(user, isAuthenticated, navigate)) {\n      return;\n    }\n    \n    setCommentDeleteDialog({\n      open: true,\n      deleting: false,\n      deleted: false,\n      commentId\n    });\n  };\n\n  \n  const confirmDeleteComment = async () => {\n    try {\n      \n      setCommentDeleteDialog(prev => ({ ...prev, deleting: true }));\n      \n      \n      const updatedComments = JSON.parse(JSON.stringify(\n        comments.filter(comment => comment.id !== commentDeleteDialog.commentId)\n      ));\n      \n      \n      setComments(updatedComments);\n      \n      \n      setCommentDeleteDialog(prev => ({ ...prev, deleted: true, deleting: false }));\n      \n      \n      await axios.post(`/api/comments/${commentDeleteDialog.commentId}/delete`);\n      \n      \n      setTimeout(() => {\n        setCommentDeleteDialog(prev => ({ ...prev, open: false }));\n      }, 1500);\n      \n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      \n      \n      setSnackbar({\n        open: true,\n        message: 'Ошибка при удалении комментария',\n        severity: 'error'\n      });\n    }\n  };\n\n  \n  const handleDeleteReply = (commentId, replyId) => {\n    \n    if (!requireAuth(user, isAuthenticated, navigate)) {\n      return;\n    }\n    \n    console.log(\"Deleting reply:\", replyId, \"from comment:\", commentId);\n    console.log(\"Current comments structure:\", JSON.stringify(comments.map(c => ({ \n      id: c.id, \n      content: c.content.substring(0, 20) + \"...\", \n      replies_count: c.replies?.length \n    }))));\n    \n    setReplyDeleteDialog({\n      open: true,\n      deleting: false,\n      deleted: false,\n      commentId,\n      replyId\n    });\n  };\n\n  \n  const confirmDeleteReply = async () => {\n    try {\n      \n      setReplyDeleteDialog(prev => ({ ...prev, deleting: true }));\n      \n      console.log(\"Before deletion - Comment ID:\", replyDeleteDialog.commentId, \"Reply ID:\", replyDeleteDialog.replyId);\n      console.log(\"Comments count:\", comments.length);\n      \n      \n      const newComments = comments.map(comment => {\n        \n        if (comment.id !== replyDeleteDialog.commentId) {\n          return {...comment};\n        }\n        \n        \n        return {\n          ...comment,\n          replies: comment.replies.filter(reply => reply.id !== replyDeleteDialog.replyId)\n        };\n      });\n      \n      console.log(\"After filtering - Comments count:\", newComments.length);\n      \n      \n      setComments(newComments);\n      \n      \n      setReplyDeleteDialog(prev => ({ ...prev, deleted: true, deleting: false }));\n      \n      \n      await axios.post(`/api/replies/${replyDeleteDialog.replyId}/delete`);\n      \n      \n      setTimeout(() => {\n        setReplyDeleteDialog(prev => ({ ...prev, open: false }));\n      }, 1500);\n      \n    } catch (error) {\n      console.error('Error deleting reply:', error);\n      \n      \n      setSnackbar({\n        open: true,\n        message: 'Ошибка при удалении ответа',\n        severity: 'error'\n      });\n      \n      \n      try {\n        console.log(\"Reloading comments after error\");\n        const response = await axios.get(`/api/posts/${postId}`);\n        if (response.data.comments) {\n          \n          const sanitizedComments = response.data.comments.map(comment => {\n            \n            if (comment.image) {\n              comment.image = sanitizeImagePath(comment.image);\n            }\n            \n            \n            if (comment.replies && comment.replies.length > 0) {\n              comment.replies = comment.replies.map(reply => {\n                if (reply.image) {\n                  reply.image = sanitizeImagePath(reply.image);\n                }\n                return reply;\n              });\n            }\n            \n            return comment;\n          });\n          \n          setComments(sanitizedComments);\n        }\n      } catch (refreshError) {\n        console.error('Error refreshing comments after delete error:', refreshError);\n      }\n    }\n  };\n\n\n  \n  const handleClose = () => {\n    console.log(\"Closing post detail overlay\");\n    closePostDetail();\n  };\n  \n  \n  const renderContent = () => (\n    <Container maxWidth=\"md\" sx={{ pt: 2, pb: 10, px: { xs: 0, sm: 0 } }}> \n    {/* Image lightbox */}\n    {lightboxOpen && (\n        <SimpleImageViewer\n          isOpen={lightboxOpen}\n          onClose={() => {\n            setLightboxOpen(false);\n            setCurrentLightboxImage(null);\n          }}\n          images={currentLightboxImage ? [currentLightboxImage] : (post?.images || [])}\n          initialIndex={0}\n        />\n      )}\n      {post && (\n        <SEO\n          title={`${post.user?.name || 'Пользователь'} - ${post.content.substring(0, 60)}${post.content.length > 60 ? '...' : ''}`}\n          description={post.content.substring(0, 160)}\n          image={post.images && Array.isArray(post.images) && post.images.length > 0 \n            ? (typeof post.images[0] === 'string' && post.images[0].startsWith('http')\n              ? post.images[0] \n              : `/static/uploads/posts/${post.images[0]}`)\n            : null}\n          type=\"article\"\n          meta={{\n            author: post.user?.name,\n            publishedTime: post.created_at,\n            modifiedTime: post.updated_at,\n          }}\n        />\n      )}\n      \n      {!isOverlay && (\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: { xs: 2, sm: 3 }, px: { xs: 2, sm: 0 } }}>\n          <IconButton \n            component={Link} \n            to=\"/\"\n            sx={{ mr: 1 }}\n            aria-label=\"Назад\"\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h5\" sx={{ fontSize: { xs: '1.2rem', sm: '1.5rem' } }}>Пост</Typography>\n        </Box>\n      )}\n\n      {post && (\n        <Post \n          post={post}\n          onDelete={() => navigate('/')}\n          onOpenLightbox={(imageUrl) => {\n            setLightboxOpen(true);\n            \n            if (Array.isArray(post.images)) {\n              const index = post.images.indexOf(imageUrl);\n              if (index !== -1) {\n                setCurrentImageIndex(index);\n              }\n            }\n          }}\n        />\n      )}\n\n      \n      <Box sx={{ px: { xs: 2, sm: 0 }, mb: 2 }}>\n        <Typography \n          variant=\"h6\" \n          sx={{ \n            mb: { xs: 2, sm: 2.5 },\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            fontWeight: 600,\n            color: 'text.primary',\n            fontSize: { xs: '0.95rem', sm: '1.1rem' },\n            letterSpacing: '0.01em'\n          }}\n        >\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.75 }}>\n            <ChatBubbleOutlineIcon sx={{ fontSize: { xs: 18, sm: 20 } }} />\n            Комментарии ({post?.total_comments_count || (comments ? comments.length : 0)})\n          </Box>\n        </Typography>\n\n        {user ? (\n          <Box sx={{ mb: 3 }}>\n            {commentError && (\n              <Alert \n                severity=\"error\" \n                sx={{ mb: 2 }}\n                onClose={() => setCommentError('')}\n              >\n                {commentError}\n              </Alert>\n            )}\n            <TextField\n              ref={commentInputRef}\n              fullWidth\n              size=\"small\"\n              placeholder=\"Написать комментарий...\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              disabled={isSubmittingComment || Date.now() < waitUntil}\n              InputProps={{\n                startAdornment: (\n                  <Box component=\"span\" sx={{ mr: 0.75 }}>\n                    <Avatar \n                      src={user?.photo && user.photo !== 'avatar.png'\n                        ? `/static/uploads/avatar/${user.id}/${user.photo}`\n                        : `/static/uploads/avatar/system/avatar.png`}\n                      alt={user?.name}\n                      sx={{ width: 30, height: 30 }}\n                    />\n                  </Box>\n                ),\n                endAdornment: (\n                  <Box sx={{ display: 'flex', gap: 0.5 }}>\n                    <input\n                      ref={fileInputRef}\n                      type=\"file\"\n                      accept=\"image/*\"\n                      style={{ display: 'none' }}\n                      onChange={handleImageChange}\n                      disabled={isSubmittingComment || Date.now() < waitUntil}\n                    />\n                    <IconButton \n                      size=\"small\"\n                      onClick={() => fileInputRef.current.click()}\n                      disabled={isSubmittingComment || Date.now() < waitUntil}\n                      sx={{ padding: '4px' }}\n                    >\n                      <ImageIcon fontSize=\"small\" sx={{ fontSize: '1.1rem' }} />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={handleCommentSubmit}\n                      disabled={(!commentText.trim() && !commentImage) || isSubmittingComment || Date.now() < waitUntil}\n                      sx={{ padding: '4px' }}\n                    >\n                      {isSubmittingComment ? (\n                        <CircularProgress size={16} color=\"inherit\" />\n                      ) : (\n                        <SendIcon fontSize=\"small\" sx={{ fontSize: '1.1rem' }} />\n                      )}\n                    </IconButton>\n                  </Box>\n                ),\n                sx: { \n                  bgcolor: 'rgba(28, 28, 32, 0.3)',\n                  backdropFilter: 'blur(5px)',\n                  borderRadius: '30px',\n                  border: '1px solid rgba(255, 255, 255, 0.05)',\n                  '& .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'transparent'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(140, 82, 255, 0.2)'\n                  },\n                  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: 'rgba(140, 82, 255, 0.4)'\n                  },\n                  '& input': {\n                    padding: '12px 5px',\n                    fontSize: '0.9rem'\n                  }\n                }\n              }}\n            />\n            \n            {imagePreview && (\n              <Box sx={{ mt: 1, position: 'relative', borderRadius: '16px', overflow: 'hidden' }}>\n                <img \n                  src={imagePreview} \n                  alt=\"Preview\" \n                  style={{ \n                    width: '100%', \n                    maxHeight: '150px', \n                    objectFit: 'cover',\n                    borderRadius: '12px'\n                  }} \n                />\n                <IconButton\n                  size=\"small\"\n                  onClick={handleRemoveImage}\n                  sx={{\n                    position: 'absolute',\n                    top: 8,\n                    right: 8,\n                    bgcolor: 'rgba(0, 0, 0, 0.6)',\n                    padding: '3px',\n                    '&:hover': {\n                      bgcolor: 'rgba(0, 0, 0, 0.8)'\n                    }\n                  }}\n                >\n                  <CloseIcon fontSize=\"small\" sx={{ fontSize: '0.8rem', color: 'white' }} />\n                </IconButton>\n              </Box>\n            )}\n          </Box>\n        ) : (\n          <Box sx={{ mb: 3 }}>\n            <Typography \n              variant=\"body2\" \n              color=\"text.secondary\" \n              align=\"center\"\n              sx={{ \n                py: 2, \n                bgcolor: 'rgba(28, 28, 32, 0.3)', \n                borderRadius: '14px',\n                border: '1px solid rgba(255, 255, 255, 0.03)'\n              }}\n            >\n              <MuiLink \n                component={Link} \n                to=\"/login\" \n                sx={{ \n                  color: 'primary.main',\n                  textDecoration: 'none',\n                  fontWeight: 'bold',\n                  '&:hover': {\n                    textDecoration: 'underline'\n                  }\n                }}\n              >\n                Войдите\n              </MuiLink>\n              , чтобы оставить комментарий\n            </Typography>\n          </Box>\n        )}\n\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: { xs: 2, sm: 3 } }}>\n            <CircularProgress size={30} thickness={4} />\n          </Box>\n        ) : (comments && comments.length > 0) ? (\n          <Box sx={{ \n            display: 'flex', \n            flexDirection: 'column', \n            gap: { xs: 0.5, sm: 0.5 } \n          }}>\n            {comments.map(comment => (\n              <Comment \n                key={comment.id} \n                comment={comment} \n                onLike={handleLikeComment}\n                onLikeReply={(replyId) => handleLikeReply(comment.id, replyId)}\n                onReply={(replyOrComment, commentId) => {\n                  setActiveComment(commentId ? { id: commentId } : replyOrComment);\n                  setReplyFormOpen(true);\n                  setReplyText('');\n                  setReplyingToReply(replyOrComment.id !== comment.id ? replyOrComment : null);\n                }}\n                isReplyFormOpen={replyFormOpen}\n                activeCommentId={activeComment?.id}\n                replyText={replyText}\n                onReplyTextChange={setReplyText}\n                onReplySubmit={handleReplySubmit}\n                replyingToReply={replyingToReply}\n                setReplyingToReply={setReplyingToReply}\n                setReplyFormOpen={setReplyFormOpen}\n                setActiveComment={setActiveComment}\n                onDeleteComment={handleDeleteComment}\n                onDeleteReply={handleDeleteReply}\n                isSubmittingComment={isSubmittingComment}\n                waitUntil={waitUntil}\n                handleReplyImageChange={handleReplyImageChange}\n                currentLightboxImage={currentLightboxImage}\n                setCurrentLightboxImage={setCurrentLightboxImage}\n                replyFileInputRef={replyFileInputRef}\n                handleRemoveReplyImage={handleRemoveReplyImage}\n                replyImage={replyImage}\n                replyImagePreview={replyImagePreview}\n                setReplyImage={setReplyImage}\n                setLightboxOpen={setLightboxOpen}\n              />\n            ))}\n          </Box>\n        ) : (\n          <Box sx={{ \n            p: { xs: 3, sm: 4 }, \n            textAlign: 'center',\n            bgcolor: 'rgba(28, 28, 32, 0.3)',\n            borderRadius: '20px',\n            border: '1px dashed rgba(255, 255, 255, 0.08)',\n            backdropFilter: 'blur(10px)'\n          }}>\n            <ChatBubbleOutlineIcon sx={{ fontSize: { xs: 28, sm: 32 }, color: 'text.secondary', mb: { xs: 1, sm: 1.5 }, opacity: 0.5 }} />\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' } }}>\n              Комментариев пока нет. Будьте первым!\n            </Typography>\n          </Box>\n        )}\n      </Box>\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={() => setSnackbar(prev => ({ ...prev, open: false }))} \n          severity={(snackbar.severity === 'success' || snackbar.severity === 'error' || \n                   snackbar.severity === 'warning' || snackbar.severity === 'info') \n                   ? snackbar.severity : 'success'}\n          variant=\"filled\"\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n\n\n      <Dialog\n        open={commentDeleteDialog.open}\n        onClose={() => !commentDeleteDialog.deleting && !commentDeleteDialog.deleted && setCommentDeleteDialog(prev => ({ ...prev, open: false }))}\n        PaperProps={{\n          sx: {\n            bgcolor: 'rgba(32, 32, 36, 0.8)',\n            backdropFilter: 'blur(20px)',\n            boxShadow: '0 4px 15px rgba(0, 0, 0, 0.2)',\n            width: '100%',\n            maxWidth: '400px',\n            borderRadius: '16px',\n            border: '1px solid rgba(100, 90, 140, 0.1)',\n            '&:before': {\n              content: '\"\"',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              borderRadius: '16px',\n              background: 'linear-gradient(145deg, rgba(30, 30, 30, 0.6), rgba(20, 20, 20, 0.75))',\n              backdropFilter: 'blur(30px)',\n              zIndex: -1\n            }\n          }\n        }}\n      >\n        <Box sx={{ p: 3 }}>\n          {commentDeleteDialog.deleted ? (\n            <>\n              <Box sx={{ textAlign: 'center', py: 2 }}>\n                <CheckCircleIcon sx={{ fontSize: 56, color: '#4CAF50', mb: 2 }} />\n                <Typography variant=\"h6\" sx={{ mb: 1, color: 'white' }}>\n                  Комментарий удален\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                  Комментарий был успешно удален\n                </Typography>\n              </Box>\n            </>\n          ) : (\n            <>\n              <Typography \n                variant=\"h6\" \n                sx={{ \n                  mb: 2, \n                  color: '#f44336',\n                  fontWeight: 'medium',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <DeleteIcon sx={{ mr: 1 }} /> Удаление комментария\n              </Typography>\n              <Typography sx={{ mb: 3, color: 'rgba(255, 255, 255, 0.7)' }}>\n                Вы уверены, что хотите удалить этот комментарий? Это действие нельзя отменить.\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1 }}>\n                <Button \n                  onClick={() => setCommentDeleteDialog(prev => ({ ...prev, open: false }))}\n                  disabled={commentDeleteDialog.deleting}\n                  sx={{ \n                    borderRadius: '10px',\n                    color: 'rgba(255, 255, 255, 0.7)',\n                    px: 2,\n                    '&:hover': {\n                      bgcolor: 'rgba(255, 255, 255, 0.08)',\n                      color: 'rgba(255, 255, 255, 0.9)'\n                    }\n                  }}\n                >\n                  Отмена\n                </Button>\n                <Button \n                  onClick={confirmDeleteComment}\n                  disabled={commentDeleteDialog.deleting}\n                  variant=\"contained\" \n                  color=\"error\"\n                  sx={{ \n                    borderRadius: '10px',\n                    boxShadow: 'none',\n                    px: 2\n                  }}\n                  endIcon={commentDeleteDialog.deleting ? <CircularProgress size={16} color=\"inherit\" /> : null}\n                >\n                  {commentDeleteDialog.deleting ? 'Удаление...' : 'Удалить'}\n                </Button>\n              </Box>\n            </>\n          )}\n        </Box>\n      </Dialog>\n\n      <Dialog\n        open={replyDeleteDialog.open}\n        onClose={() => !replyDeleteDialog.deleting && !replyDeleteDialog.deleted && setReplyDeleteDialog(prev => ({ ...prev, open: false }))}\n        PaperProps={{\n          sx: {\n            bgcolor: 'rgba(32, 32, 36, 0.8)',\n            backdropFilter: 'blur(20px)',\n            boxShadow: '0 4px 15px rgba(0, 0, 0, 0.2)',\n            width: '100%',\n            maxWidth: '400px',\n            borderRadius: '16px',\n            border: '1px solid rgba(100, 90, 140, 0.1)',\n            '&:before': {\n              content: '\"\"',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              borderRadius: '16px',\n              background: 'linear-gradient(145deg, rgba(30, 30, 30, 0.6), rgba(20, 20, 20, 0.75))',\n              backdropFilter: 'blur(30px)',\n              zIndex: -1\n            }\n          }\n        }}\n      >\n        <Box sx={{ p: 3 }}>\n          {replyDeleteDialog.deleted ? (\n            <>\n              <Box sx={{ textAlign: 'center', py: 2 }}>\n                <CheckCircleIcon sx={{ fontSize: 56, color: '#4CAF50', mb: 2 }} />\n                <Typography variant=\"h6\" sx={{ mb: 1, color: 'white' }}>\n                  Ответ удален\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                  Ответ был успешно удален\n                </Typography>\n              </Box>\n            </>\n          ) : (\n            <>\n              <Typography \n                variant=\"h6\" \n                sx={{ \n                  mb: 2, \n                  color: '#f44336',\n                  fontWeight: 'medium',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <DeleteIcon sx={{ mr: 1 }} /> Удаление ответа\n              </Typography>\n              <Typography sx={{ mb: 3, color: 'rgba(255, 255, 255, 0.7)' }}>\n                Вы уверены, что хотите удалить этот ответ? Это действие нельзя отменить.\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1 }}>\n                <Button \n                  onClick={() => setReplyDeleteDialog(prev => ({ ...prev, open: false }))}\n                  disabled={replyDeleteDialog.deleting}\n                  sx={{ \n                    borderRadius: '10px',\n                    color: 'rgba(255, 255, 255, 0.7)',\n                    px: 2,\n                    '&:hover': {\n                      bgcolor: 'rgba(255, 255, 255, 0.08)',\n                      color: 'rgba(255, 255, 255, 0.9)'\n                    }\n                  }}\n                >\n                  Отмена\n                </Button>\n                <Button \n                  onClick={confirmDeleteReply}\n                  disabled={replyDeleteDialog.deleting}\n                  variant=\"contained\" \n                  color=\"error\"\n                  sx={{ \n                    borderRadius: '10px',\n                    boxShadow: 'none',\n                    px: 2\n                  }}\n                  endIcon={replyDeleteDialog.deleting ? <CircularProgress size={16} color=\"inherit\" /> : null}\n                >\n                  {replyDeleteDialog.deleting ? 'Удаление...' : 'Удалить'}\n                </Button>\n              </Box>\n            </>\n          )}\n        </Box>\n      </Dialog>\n    </Container>\n  );\n  \n  \n  if (isOverlay) {\n    return (\n      <Dialog\n        fullScreen={fullScreen}\n        open={true} \n        onClose={handleClose}\n        TransitionComponent={Transition}\n        keepMounted={false}\n        BackdropProps={{\n          sx: {\n            backgroundColor: 'rgba(0, 0, 0, 0.95)', \n            backgroundImage: 'none', \n          }\n        }}\n        PaperProps={{\n          sx: {\n            bgcolor: '#0a0a0a', \n            backgroundImage: 'none', \n            maxWidth: '100%',\n            maxHeight: '100%',\n            borderRadius: { xs: 0, sm: 2 }\n          }\n        }}\n        sx={{\n          '& .MuiDialog-paper': {\n            width: { sm: '100%', md: '90%', lg: '55%' },\n            height: { xs: '100%', sm: '90vh' },\n            maxWidth: 1000,\n            m: { xs: 0, sm: 2 },\n            backgroundColor: '#0a0a0a', \n            backgroundImage: 'none !important', \n          },\n          '& .MuiBackdrop-root': {\n            backgroundColor: '#000000 !important', \n            backgroundImage: 'none !important', \n            opacity: '0.95 !important', \n          },\n          \n          '& .MuiModal-backdrop': {\n            backgroundColor: '#000000 !important',\n            backgroundImage: 'none !important',\n          }\n        }}\n      >\n        <AppBar \n          sx={{ \n            position: 'relative',\n            backgroundColor: '#0a0a0a', \n            backgroundImage: 'none', \n            boxShadow: 'none',\n            borderBottom: '1px solid',\n            borderColor: 'rgba(255, 255, 255, 0.1)'\n          }}\n        >\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              {fullScreen ? <ArrowBackIcon /> : <CloseIcon />}\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              Пост\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        \n        <Box \n          sx={{ \n            overflow: 'auto', \n            height: '100%', \n            px: 0,\n            backgroundColor: '#0a0a0a', \n            backgroundImage: 'none', \n          }}\n        > \n          {renderContent()}\n        </Box>\n      </Dialog>\n    );\n  }\n  \n  \n  return renderContent();\n};\n\nexport default PostDetailPage;"],"names":["_interopRequireDefault","require$$0","Object","defineProperty","Image","value","default","_createSvgIcon","_jsxRuntime","require$$2","jsx","d","requireAuth","user","isAuthenticated","navigate","currentPath","window","location","pathname","setItem","state","from","styled","Box","theme","margin","spacing","marginTop","marginBottom","fontWeight","color","palette","primary","main","textDecoration","marginLeft","fontFamily","backgroundColor","action","hover","padding","borderRadius","grey","common","white","shape","overflowX","Card","TextField","position","overflow","IconButton","top","right","sanitizeImagePath","imagePath","includes","indexOf","lastIndexOf","substring","Comment","comment","onLike","onLikeReply","onReply","isReplyFormOpen","activeCommentId","replyText","onReplyTextChange","onReplySubmit","replyingToReply","setReplyingToReply","setReplyFormOpen","setActiveComment","onDeleteComment","onDeleteReply","isSubmittingComment","waitUntil","handleReplyImageChange","currentLightboxImage","setCurrentLightboxImage","replyFileInputRef","handleRemoveReplyImage","replyImage","replyImagePreview","setReplyImage","setLightboxOpen","useContext","AuthContext","useNavigate","menuAnchorEl","setMenuAnchorEl","useState","commentImageError","setCommentImageError","replyImageErrors","setReplyImageErrors","replyImageFallbacks","setReplyImageFallbacks","handleMenuClose","isCommentOwner","user_id","id","is_admin","jsxs","sx","mb","children","display","flexDirection","width","alignItems","px","Avatar","src","photo","alt","name","component","Link","to","username","height","border","mr","transition","borderColor","transform","onError","e","currentTarget","setAttribute","maxWidth","Typography","fontSize","verification","status","VerificationBadge","size","achievement","ml","image_path","bage","target","style","variant","formatTimeAgo","timestamp","bgcolor","p","borderTopLeftRadius","boxShadow","lineHeight","whiteSpace","wordBreak","overflowWrap","content","image","mt","cursor","opacity","onClick","event","stopPropagation","sanitizedPath","textAlign","maxHeight","objectFit","handleCommentImageError","fixedUrl","className","left","justifyContent","ZoomInIcon","user_liked","FavoriteIcon","FavoriteBorderIcon","likes_count","ReplyIcon","element","replyId","commentId","MoreVertIcon","Menu","anchorEl","open","Boolean","onClose","PaperProps","minWidth","MenuItem","py","ListItemIcon","DeleteIcon","ListItemText","primaryTypographyProps","replies","length","pl","xs","sm","map","reply","isReplyOwner","parent_reply_id","parent_reply","borderLeft","gap","WebkitLineClamp","WebkitBoxOrient","handleReplyImageError","imageUrl","prev","fallbackUrl","originalUrl","replace","split","pop","startsWith","getReplyImageFallback","pr","CloseIcon","fullWidth","placeholder","onChange","disabled","Date","now","InputProps","startAdornment","endAdornment","ref","type","accept","current","click","ImageIcon","trim","CircularProgress","SendIcon","setReplyText","setReplyImagePreview","backdropFilter","Transition","React","forwardRef","props","Slide","direction","PostDetailPage","isOverlay","postId","useParams","post","setPost","comments","setComments","loading","setLoading","commentText","setCommentText","replyingTo","setReplyingTo","commentImage","setCommentImage","imagePreview","setImagePreview","fileInputRef","useRef","commentInputRef","snackbar","setSnackbar","message","severity","postMenuAnchorEl","setPostMenuAnchorEl","replyFormOpen","activeComment","currentImageIndex","setCurrentImageIndex","lightboxOpen","setIsSubmittingComment","commentError","setCommentError","lastCommentTime","setLastCommentTime","setWaitUntil","commentDeleteDialog","setCommentDeleteDialog","deleting","deleted","replyDeleteDialog","setReplyDeleteDialog","overlayOpen","closePostDetail","usePostDetail","useTheme","fullScreen","useMediaQuery","breakpoints","down","viewCounted","useEffect","async","response","axios","get","data","sanitizedComments","some","flatMap","c","find","r","reduce","sum","incrementViewCount","error","fetchPost","viewKey","sessionStorage","getItem","success","prevPost","views_count","retryViewCount","retries","retryError","setTimeout","handleImageChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","handleRemoveImage","handleCommentSubmit","secondsRemaining","Math","ceil","formData","FormData","append","headers","newComment","rateLimit","rate_limit","errorMessage","reset","resetTime","diffSeconds","round","floor","getTime","handleReplySubmit","parentReplyId","handleLikeComment","max","liked","handleDeleteComment","confirmDeleteComment","updatedComments","JSON","parse","stringify","filter","handleDeleteReply","confirmDeleteReply","newComments","refreshError","handleClose","renderContent","Container","pt","pb","SimpleImageViewer","isOpen","images","initialIndex","SEO","title","description","Array","isArray","meta","author","publishedTime","created_at","modifiedTime","updated_at","ArrowBackIcon","Post","onDelete","onOpenLightbox","index","letterSpacing","ChatBubbleOutlineIcon","total_comments_count","Alert","align","MuiLink","my","thickness","handleLikeReply","replyOrComment","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Dialog","bottom","background","zIndex","Fragment","CheckCircleIcon","Button","endIcon","TransitionComponent","keepMounted","BackdropProps","backgroundImage","md","lg","m","AppBar","borderBottom","Toolbar","edge","flex"],"mappings":"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","x_google_ignoreList":[0]}